namespace FizzPlot.HighCharts


module Figure =
    open Server

    type IFigureItem =
        abstract GetPath : unit -> string

    type IFigureArrayElement =
        abstract SetLastIndex : index:int -> unit

    let indexSeparatorInner = '#'
    let indexSeparatorOuter = ','
    let mutable currentChartIndex = 0


    ///<summary>Figure_Colors_Item : <code>string</code></summary>
    type Figure_Colors_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Colors_Item.ToJson o)

    ///<summary>Figure_Colors : <code>string seq</code></summary>
    type Figure_Colors(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Colors_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.colors" (parent.GetPath()))
                |> Option.defaultValue "colors"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Colors_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Colors.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Symbols_Item : <code>string</code></summary>
    type Figure_Symbols_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Symbols_Item.ToJson o)

    ///<summary>Figure_Symbols : <code>string seq</code></summary>
    type Figure_Symbols(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Symbols_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbols" (parent.GetPath()))
                |> Option.defaultValue "symbols"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Symbols_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Symbols.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Lang_Loading : <code>string</code></summary>
    type Figure_Lang_Loading(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.loading" (parent.GetPath()))
                |> Option.defaultValue "loading"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_Loading.ToJson o)

    ///<summary>Figure_Lang_Months_Item : <code>string</code></summary>
    type Figure_Lang_Months_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_Months_Item.ToJson o)

    ///<summary>Figure_Lang_Months : <code>string seq</code></summary>
    type Figure_Lang_Months(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Lang_Months_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.months" (parent.GetPath()))
                |> Option.defaultValue "months"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Lang_Months_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_Months.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Lang_ShortMonths_Item : <code>string</code></summary>
    type Figure_Lang_ShortMonths_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_ShortMonths_Item.ToJson o)

    ///<summary>Figure_Lang_ShortMonths : <code>string seq</code></summary>
    type Figure_Lang_ShortMonths(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Lang_ShortMonths_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.shortMonths" (parent.GetPath()))
                |> Option.defaultValue "shortMonths"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Lang_ShortMonths_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_ShortMonths.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Lang_Weekdays_Item : <code>string</code></summary>
    type Figure_Lang_Weekdays_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_Weekdays_Item.ToJson o)

    ///<summary>Figure_Lang_Weekdays : <code>string seq</code></summary>
    type Figure_Lang_Weekdays(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Lang_Weekdays_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.weekdays" (parent.GetPath()))
                |> Option.defaultValue "weekdays"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Lang_Weekdays_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_Weekdays.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Lang_DecimalPoint : <code>string</code></summary>
    type Figure_Lang_DecimalPoint(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.decimalPoint" (parent.GetPath()))
                |> Option.defaultValue "decimalPoint"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_DecimalPoint.ToJson o)

    ///<summary>Figure_Lang_NumericSymbols_Item : <code>string</code></summary>
    type Figure_Lang_NumericSymbols_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_NumericSymbols_Item.ToJson o)

    ///<summary>Figure_Lang_NumericSymbols : <code>string seq</code></summary>
    type Figure_Lang_NumericSymbols(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Lang_NumericSymbols_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.numericSymbols" (parent.GetPath()))
                |> Option.defaultValue "numericSymbols"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Lang_NumericSymbols_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_NumericSymbols.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Lang_ResetZoom : <code>string</code></summary>
    type Figure_Lang_ResetZoom(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.resetZoom" (parent.GetPath()))
                |> Option.defaultValue "resetZoom"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_ResetZoom.ToJson o)

    ///<summary>Figure_Lang_ResetZoomTitle : <code>string</code></summary>
    type Figure_Lang_ResetZoomTitle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.resetZoomTitle" (parent.GetPath()))
                |> Option.defaultValue "resetZoomTitle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_ResetZoomTitle.ToJson o)

    ///<summary>Figure_Lang_ThousandsSep : <code>string</code></summary>
    type Figure_Lang_ThousandsSep(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.thousandsSep" (parent.GetPath()))
                |> Option.defaultValue "thousandsSep"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_ThousandsSep.ToJson o)

    ///<summary>Figure_Lang_ViewFullscreen : <code>string</code></summary>
    type Figure_Lang_ViewFullscreen(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.viewFullscreen" (parent.GetPath()))
                |> Option.defaultValue "viewFullscreen"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_ViewFullscreen.ToJson o)

    ///<summary>Figure_Lang_ExitFullscreen : <code>string</code></summary>
    type Figure_Lang_ExitFullscreen(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.exitFullscreen" (parent.GetPath()))
                |> Option.defaultValue "exitFullscreen"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_ExitFullscreen.ToJson o)

    ///<summary>Figure_Lang_PrintChart : <code>string</code></summary>
    type Figure_Lang_PrintChart(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.printChart" (parent.GetPath()))
                |> Option.defaultValue "printChart"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_PrintChart.ToJson o)

    ///<summary>Figure_Lang_DownloadPNG : <code>string</code></summary>
    type Figure_Lang_DownloadPNG(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.downloadPNG" (parent.GetPath()))
                |> Option.defaultValue "downloadPNG"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_DownloadPNG.ToJson o)

    ///<summary>Figure_Lang_DownloadJPEG : <code>string</code></summary>
    type Figure_Lang_DownloadJPEG(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.downloadJPEG" (parent.GetPath()))
                |> Option.defaultValue "downloadJPEG"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_DownloadJPEG.ToJson o)

    ///<summary>Figure_Lang_DownloadPDF : <code>string</code></summary>
    type Figure_Lang_DownloadPDF(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.downloadPDF" (parent.GetPath()))
                |> Option.defaultValue "downloadPDF"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_DownloadPDF.ToJson o)

    ///<summary>Figure_Lang_DownloadSVG : <code>string</code></summary>
    type Figure_Lang_DownloadSVG(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.downloadSVG" (parent.GetPath()))
                |> Option.defaultValue "downloadSVG"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_DownloadSVG.ToJson o)

    ///<summary>Figure_Lang_ContextButtonTitle : <code>string</code></summary>
    type Figure_Lang_ContextButtonTitle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.contextButtonTitle" (parent.GetPath()))
                |> Option.defaultValue "contextButtonTitle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang_ContextButtonTitle.ToJson o)

    ///<summary>Figure_Lang : <code>{| loading:string; months:string seq; shortMonths:string seq; weekdays:string seq; decimalPoint:string; numericSymbols:string seq; resetZoom:string; resetZoomTitle:string; thousandsSep:string; viewFullscreen:string; exitFullscreen:string; printChart:string; downloadPNG:string; downloadJPEG:string; downloadPDF:string; downloadSVG:string; contextButtonTitle:string |}</code></summary>
    type Figure_Lang(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Lang_Loading : <code>string</code></summary>
        member this.loading = Figure_Lang_Loading(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_Months : <code>string seq</code></summary>
        member this.months = Figure_Lang_Months(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_ShortMonths : <code>string seq</code></summary>
        member this.shortMonths = Figure_Lang_ShortMonths(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_Weekdays : <code>string seq</code></summary>
        member this.weekdays = Figure_Lang_Weekdays(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_DecimalPoint : <code>string</code></summary>
        member this.decimalPoint = Figure_Lang_DecimalPoint(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_NumericSymbols : <code>string seq</code></summary>
        member this.numericSymbols = Figure_Lang_NumericSymbols(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_ResetZoom : <code>string</code></summary>
        member this.resetZoom = Figure_Lang_ResetZoom(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_ResetZoomTitle : <code>string</code></summary>
        member this.resetZoomTitle = Figure_Lang_ResetZoomTitle(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_ThousandsSep : <code>string</code></summary>
        member this.thousandsSep = Figure_Lang_ThousandsSep(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_ViewFullscreen : <code>string</code></summary>
        member this.viewFullscreen = Figure_Lang_ViewFullscreen(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_ExitFullscreen : <code>string</code></summary>
        member this.exitFullscreen = Figure_Lang_ExitFullscreen(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_PrintChart : <code>string</code></summary>
        member this.printChart = Figure_Lang_PrintChart(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_DownloadPNG : <code>string</code></summary>
        member this.downloadPNG = Figure_Lang_DownloadPNG(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_DownloadJPEG : <code>string</code></summary>
        member this.downloadJPEG = Figure_Lang_DownloadJPEG(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_DownloadPDF : <code>string</code></summary>
        member this.downloadPDF = Figure_Lang_DownloadPDF(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_DownloadSVG : <code>string</code></summary>
        member this.downloadSVG = Figure_Lang_DownloadSVG(Some (this :> IFigureItem))

        ///<summary>Figure_Lang_ContextButtonTitle : <code>string</code></summary>
        member this.contextButtonTitle = Figure_Lang_ContextButtonTitle(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lang" (parent.GetPath()))
                |> Option.defaultValue "lang"

        static member ToJson (o:{| loading:string; months:string seq; shortMonths:string seq; weekdays:string seq; decimalPoint:string; numericSymbols:string seq; resetZoom:string; resetZoomTitle:string; thousandsSep:string; viewFullscreen:string; exitFullscreen:string; printChart:string; downloadPNG:string; downloadJPEG:string; downloadPDF:string; downloadSVG:string; contextButtonTitle:string |}) =
            let loading = sprintf "\\\"%s\\\"" o.loading
            let months = Figure_Lang_Months.ToJson o.months
            let shortMonths = Figure_Lang_ShortMonths.ToJson o.shortMonths
            let weekdays = Figure_Lang_Weekdays.ToJson o.weekdays
            let decimalPoint = sprintf "\\\"%s\\\"" o.decimalPoint
            let numericSymbols = Figure_Lang_NumericSymbols.ToJson o.numericSymbols
            let resetZoom = sprintf "\\\"%s\\\"" o.resetZoom
            let resetZoomTitle = sprintf "\\\"%s\\\"" o.resetZoomTitle
            let thousandsSep = sprintf "\\\"%s\\\"" o.thousandsSep
            let viewFullscreen = sprintf "\\\"%s\\\"" o.viewFullscreen
            let exitFullscreen = sprintf "\\\"%s\\\"" o.exitFullscreen
            let printChart = sprintf "\\\"%s\\\"" o.printChart
            let downloadPNG = sprintf "\\\"%s\\\"" o.downloadPNG
            let downloadJPEG = sprintf "\\\"%s\\\"" o.downloadJPEG
            let downloadPDF = sprintf "\\\"%s\\\"" o.downloadPDF
            let downloadSVG = sprintf "\\\"%s\\\"" o.downloadSVG
            let contextButtonTitle = sprintf "\\\"%s\\\"" o.contextButtonTitle
            sprintf "{\\\"loading\\\":%s,\\\"months\\\":%s,\\\"shortMonths\\\":%s,\\\"weekdays\\\":%s,\\\"decimalPoint\\\":%s,\\\"numericSymbols\\\":%s,\\\"resetZoom\\\":%s,\\\"resetZoomTitle\\\":%s,\\\"thousandsSep\\\":%s,\\\"viewFullscreen\\\":%s,\\\"exitFullscreen\\\":%s,\\\"printChart\\\":%s,\\\"downloadPNG\\\":%s,\\\"downloadJPEG\\\":%s,\\\"downloadPDF\\\":%s,\\\"downloadSVG\\\":%s,\\\"contextButtonTitle\\\":%s}" loading months shortMonths weekdays decimalPoint numericSymbols resetZoom resetZoomTitle thousandsSep viewFullscreen exitFullscreen printChart downloadPNG downloadJPEG downloadPDF downloadSVG contextButtonTitle

        member this.Set (o:{| loading:string; months:string seq; shortMonths:string seq; weekdays:string seq; decimalPoint:string; numericSymbols:string seq; resetZoom:string; resetZoomTitle:string; thousandsSep:string; viewFullscreen:string; exitFullscreen:string; printChart:string; downloadPNG:string; downloadJPEG:string; downloadPDF:string; downloadSVG:string; contextButtonTitle:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Lang.ToJson o)


    ///<summary>Figure_Global : <code>{| dummy:string |}</code></summary>
    type Figure_Global(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.global" (parent.GetPath()))
                |> Option.defaultValue "global"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Global.ToJson o)


    ///<summary>Figure_Time_TimezoneOffset : <code>int</code></summary>
    type Figure_Time_TimezoneOffset(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.timezoneOffset" (parent.GetPath()))
                |> Option.defaultValue "timezoneOffset"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Time_TimezoneOffset.ToJson o)

    ///<summary>Figure_Time_UseUTC : <code>bool</code></summary>
    type Figure_Time_UseUTC(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.useUTC" (parent.GetPath()))
                |> Option.defaultValue "useUTC"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Time_UseUTC.ToJson o)

    ///<summary>Figure_Time : <code>{| timezoneOffset:int; useUTC:bool |}</code></summary>
    type Figure_Time(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Time_TimezoneOffset : <code>int</code></summary>
        member this.timezoneOffset = Figure_Time_TimezoneOffset(Some (this :> IFigureItem))

        ///<summary>Figure_Time_UseUTC : <code>bool</code></summary>
        member this.useUTC = Figure_Time_UseUTC(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.time" (parent.GetPath()))
                |> Option.defaultValue "time"

        static member ToJson (o:{| timezoneOffset:int; useUTC:bool |}) =
            let timezoneOffset = sprintf "%i" o.timezoneOffset
            let useUTC = sprintf "%b" o.useUTC
            sprintf "{\\\"timezoneOffset\\\":%s,\\\"useUTC\\\":%s}" timezoneOffset useUTC

        member this.Set (o:{| timezoneOffset:int; useUTC:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Time.ToJson o)


    ///<summary>Figure_Chart_StyledMode : <code>bool</code></summary>
    type Figure_Chart_StyledMode(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.styledMode" (parent.GetPath()))
                |> Option.defaultValue "styledMode"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_StyledMode.ToJson o)

    ///<summary>Figure_Chart_BorderRadius : <code>int</code></summary>
    type Figure_Chart_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BorderRadius.ToJson o)

    ///<summary>Figure_Chart_ColorCount : <code>int</code></summary>
    type Figure_Chart_ColorCount(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.colorCount" (parent.GetPath()))
                |> Option.defaultValue "colorCount"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ColorCount.ToJson o)

    ///<summary>Figure_Chart_DefaultSeriesType : <code>string</code></summary>
    type Figure_Chart_DefaultSeriesType(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.defaultSeriesType" (parent.GetPath()))
                |> Option.defaultValue "defaultSeriesType"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_DefaultSeriesType.ToJson o)

    ///<summary>Figure_Chart_IgnoreHiddenSeries : <code>bool</code></summary>
    type Figure_Chart_IgnoreHiddenSeries(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.ignoreHiddenSeries" (parent.GetPath()))
                |> Option.defaultValue "ignoreHiddenSeries"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_IgnoreHiddenSeries.ToJson o)

    ///<summary>Figure_Chart_Spacing_Item : <code>int</code></summary>
    type Figure_Chart_Spacing_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_Spacing_Item.ToJson o)

    ///<summary>Figure_Chart_Spacing : <code>int seq</code></summary>
    type Figure_Chart_Spacing(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Chart_Spacing_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.spacing" (parent.GetPath()))
                |> Option.defaultValue "spacing"

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Chart_Spacing_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_Spacing.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Chart_ResetZoomButton_Theme_ZIndex : <code>int</code></summary>
    type Figure_Chart_ResetZoomButton_Theme_ZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zIndex" (parent.GetPath()))
                |> Option.defaultValue "zIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ResetZoomButton_Theme_ZIndex.ToJson o)

    ///<summary>Figure_Chart_ResetZoomButton_Theme : <code>{| zIndex:int |}</code></summary>
    type Figure_Chart_ResetZoomButton_Theme(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Chart_ResetZoomButton_Theme_ZIndex : <code>int</code></summary>
        member this.zIndex = Figure_Chart_ResetZoomButton_Theme_ZIndex(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.theme" (parent.GetPath()))
                |> Option.defaultValue "theme"

        static member ToJson (o:{| zIndex:int |}) =
            let zIndex = sprintf "%i" o.zIndex
            sprintf "{\\\"zIndex\\\":%s}" zIndex

        member this.Set (o:{| zIndex:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ResetZoomButton_Theme.ToJson o)


    ///<summary>Figure_Chart_ResetZoomButton_Position_Align : <code>string</code></summary>
    type Figure_Chart_ResetZoomButton_Position_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ResetZoomButton_Position_Align.ToJson o)

    ///<summary>Figure_Chart_ResetZoomButton_Position_X : <code>int</code></summary>
    type Figure_Chart_ResetZoomButton_Position_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ResetZoomButton_Position_X.ToJson o)

    ///<summary>Figure_Chart_ResetZoomButton_Position_Y : <code>int</code></summary>
    type Figure_Chart_ResetZoomButton_Position_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ResetZoomButton_Position_Y.ToJson o)

    ///<summary>Figure_Chart_ResetZoomButton_Position : <code>{| align:string; x:int; y:int |}</code></summary>
    type Figure_Chart_ResetZoomButton_Position(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Chart_ResetZoomButton_Position_Align : <code>string</code></summary>
        member this.align = Figure_Chart_ResetZoomButton_Position_Align(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_ResetZoomButton_Position_X : <code>int</code></summary>
        member this.x = Figure_Chart_ResetZoomButton_Position_X(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_ResetZoomButton_Position_Y : <code>int</code></summary>
        member this.y = Figure_Chart_ResetZoomButton_Position_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:{| align:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align x y

        member this.Set (o:{| align:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ResetZoomButton_Position.ToJson o)


    ///<summary>Figure_Chart_ResetZoomButton : <code>{| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}</code></summary>
    type Figure_Chart_ResetZoomButton(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Chart_ResetZoomButton_Theme : <code>{| zIndex:int |}</code></summary>
        member this.theme = Figure_Chart_ResetZoomButton_Theme(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_ResetZoomButton_Position : <code>{| align:string; x:int; y:int |}</code></summary>
        member this.position = Figure_Chart_ResetZoomButton_Position(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.resetZoomButton" (parent.GetPath()))
                |> Option.defaultValue "resetZoomButton"

        static member ToJson (o:{| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}) =
            let theme = Figure_Chart_ResetZoomButton_Theme.ToJson o.theme
            let position = Figure_Chart_ResetZoomButton_Position.ToJson o.position
            sprintf "{\\\"theme\\\":%s,\\\"position\\\":%s}" theme position

        member this.Set (o:{| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ResetZoomButton.ToJson o)


    ///<summary>Figure_Chart_Width : <code>string</code></summary>
    type Figure_Chart_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_Width.ToJson o)

    ///<summary>Figure_Chart_Height : <code>string</code></summary>
    type Figure_Chart_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_Height.ToJson o)

    ///<summary>Figure_Chart_BorderColor : <code>string</code></summary>
    type Figure_Chart_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BorderColor.ToJson o)

    ///<summary>Figure_Chart_BackgroundColor_LinearGradient_X1 : <code>int</code></summary>
    type Figure_Chart_BackgroundColor_LinearGradient_X1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x1" (parent.GetPath()))
                |> Option.defaultValue "x1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_LinearGradient_X1.ToJson o)

    ///<summary>Figure_Chart_BackgroundColor_LinearGradient_Y1 : <code>int</code></summary>
    type Figure_Chart_BackgroundColor_LinearGradient_Y1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y1" (parent.GetPath()))
                |> Option.defaultValue "y1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_LinearGradient_Y1.ToJson o)

    ///<summary>Figure_Chart_BackgroundColor_LinearGradient_X2 : <code>int</code></summary>
    type Figure_Chart_BackgroundColor_LinearGradient_X2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x2" (parent.GetPath()))
                |> Option.defaultValue "x2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_LinearGradient_X2.ToJson o)

    ///<summary>Figure_Chart_BackgroundColor_LinearGradient_Y2 : <code>int</code></summary>
    type Figure_Chart_BackgroundColor_LinearGradient_Y2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y2" (parent.GetPath()))
                |> Option.defaultValue "y2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_LinearGradient_Y2.ToJson o)

    ///<summary>Figure_Chart_BackgroundColor_LinearGradient_Id : <code>string</code></summary>
    type Figure_Chart_BackgroundColor_LinearGradient_Id(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.id" (parent.GetPath()))
                |> Option.defaultValue "id"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_LinearGradient_Id.ToJson o)

    ///<summary>Figure_Chart_BackgroundColor_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int; id:string |}</code></summary>
    type Figure_Chart_BackgroundColor_LinearGradient(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Chart_BackgroundColor_LinearGradient_X1 : <code>int</code></summary>
        member this.x1 = Figure_Chart_BackgroundColor_LinearGradient_X1(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BackgroundColor_LinearGradient_Y1 : <code>int</code></summary>
        member this.y1 = Figure_Chart_BackgroundColor_LinearGradient_Y1(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BackgroundColor_LinearGradient_X2 : <code>int</code></summary>
        member this.x2 = Figure_Chart_BackgroundColor_LinearGradient_X2(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BackgroundColor_LinearGradient_Y2 : <code>int</code></summary>
        member this.y2 = Figure_Chart_BackgroundColor_LinearGradient_Y2(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BackgroundColor_LinearGradient_Id : <code>string</code></summary>
        member this.id = Figure_Chart_BackgroundColor_LinearGradient_Id(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linearGradient" (parent.GetPath()))
                |> Option.defaultValue "linearGradient"

        static member ToJson (o:{| x1:int; y1:int; x2:int; y2:int; id:string |}) =
            let x1 = sprintf "%i" o.x1
            let y1 = sprintf "%i" o.y1
            let x2 = sprintf "%i" o.x2
            let y2 = sprintf "%i" o.y2
            let id = sprintf "\\\"%s\\\"" o.id
            sprintf "{\\\"x1\\\":%s,\\\"y1\\\":%s,\\\"x2\\\":%s,\\\"y2\\\":%s,\\\"id\\\":%s}" x1 y1 x2 y2 id

        member this.Set (o:{| x1:int; y1:int; x2:int; y2:int; id:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_LinearGradient.ToJson o)


    ///<summary>Figure_Chart_BackgroundColor_Stops_Item_Item : <code>int</code></summary>
    type Figure_Chart_BackgroundColor_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_Stops_Item_Item.ToJson o)

    ///<summary>Figure_Chart_BackgroundColor_Stops_Item : <code>int seq</code></summary>
    type Figure_Chart_BackgroundColor_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Chart_BackgroundColor_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Chart_BackgroundColor_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Chart_BackgroundColor_Stops : <code>int seq seq</code></summary>
    type Figure_Chart_BackgroundColor_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Chart_BackgroundColor_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Chart_BackgroundColor_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Chart_BackgroundColor : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}</code></summary>
    type Figure_Chart_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Chart_BackgroundColor_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int; id:string |}</code></summary>
        member this.linearGradient = Figure_Chart_BackgroundColor_LinearGradient(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BackgroundColor_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_Chart_BackgroundColor_Stops(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}) =
            let linearGradient = Figure_Chart_BackgroundColor_LinearGradient.ToJson o.linearGradient
            let stops = Figure_Chart_BackgroundColor_Stops.ToJson o.stops
            sprintf "{\\\"linearGradient\\\":%s,\\\"stops\\\":%s}" linearGradient stops

        member this.Set (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BackgroundColor.ToJson o)


    ///<summary>Figure_Chart_PlotBorderColor : <code>string</code></summary>
    type Figure_Chart_PlotBorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.plotBorderColor" (parent.GetPath()))
                |> Option.defaultValue "plotBorderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_PlotBorderColor.ToJson o)

    ///<summary>Figure_Chart_BorderWidth : <code>int</code></summary>
    type Figure_Chart_BorderWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderWidth" (parent.GetPath()))
                |> Option.defaultValue "borderWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_BorderWidth.ToJson o)

    ///<summary>Figure_Chart_ClassName : <code>string</code></summary>
    type Figure_Chart_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_ClassName.ToJson o)

    ///<summary>Figure_Chart_PlotBackgroundColor : <code>string</code></summary>
    type Figure_Chart_PlotBackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.plotBackgroundColor" (parent.GetPath()))
                |> Option.defaultValue "plotBackgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_PlotBackgroundColor.ToJson o)

    ///<summary>Figure_Chart_PlotBorderWidth : <code>int</code></summary>
    type Figure_Chart_PlotBorderWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.plotBorderWidth" (parent.GetPath()))
                |> Option.defaultValue "plotBorderWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart_PlotBorderWidth.ToJson o)

    ///<summary>Figure_Chart : <code>{| styledMode:bool; borderRadius:int; colorCount:int; defaultSeriesType:string; ignoreHiddenSeries:bool; spacing:int seq; resetZoomButton: {| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}; width:string; height:string; borderColor:string; backgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}; plotBorderColor:string; borderWidth:int; className:string; plotBackgroundColor:string; plotBorderWidth:int |}</code></summary>
    type Figure_Chart(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Chart_StyledMode : <code>bool</code></summary>
        member this.styledMode = Figure_Chart_StyledMode(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Chart_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_ColorCount : <code>int</code></summary>
        member this.colorCount = Figure_Chart_ColorCount(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_DefaultSeriesType : <code>string</code></summary>
        member this.defaultSeriesType = Figure_Chart_DefaultSeriesType(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_IgnoreHiddenSeries : <code>bool</code></summary>
        member this.ignoreHiddenSeries = Figure_Chart_IgnoreHiddenSeries(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_Spacing : <code>int seq</code></summary>
        member this.spacing = Figure_Chart_Spacing(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_ResetZoomButton : <code>{| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}</code></summary>
        member this.resetZoomButton = Figure_Chart_ResetZoomButton(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_Width : <code>string</code></summary>
        member this.width = Figure_Chart_Width(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_Height : <code>string</code></summary>
        member this.height = Figure_Chart_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_Chart_BorderColor(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BackgroundColor : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}</code></summary>
        member this.backgroundColor = Figure_Chart_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_PlotBorderColor : <code>string</code></summary>
        member this.plotBorderColor = Figure_Chart_PlotBorderColor(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_BorderWidth : <code>int</code></summary>
        member this.borderWidth = Figure_Chart_BorderWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_ClassName : <code>string</code></summary>
        member this.className = Figure_Chart_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_PlotBackgroundColor : <code>string</code></summary>
        member this.plotBackgroundColor = Figure_Chart_PlotBackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Chart_PlotBorderWidth : <code>int</code></summary>
        member this.plotBorderWidth = Figure_Chart_PlotBorderWidth(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.chart" (parent.GetPath()))
                |> Option.defaultValue "chart"

        static member ToJson (o:{| styledMode:bool; borderRadius:int; colorCount:int; defaultSeriesType:string; ignoreHiddenSeries:bool; spacing:int seq; resetZoomButton: {| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}; width:string; height:string; borderColor:string; backgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}; plotBorderColor:string; borderWidth:int; className:string; plotBackgroundColor:string; plotBorderWidth:int |}) =
            let styledMode = sprintf "%b" o.styledMode
            let borderRadius = sprintf "%i" o.borderRadius
            let colorCount = sprintf "%i" o.colorCount
            let defaultSeriesType = sprintf "\\\"%s\\\"" o.defaultSeriesType
            let ignoreHiddenSeries = sprintf "%b" o.ignoreHiddenSeries
            let spacing = Figure_Chart_Spacing.ToJson o.spacing
            let resetZoomButton = Figure_Chart_ResetZoomButton.ToJson o.resetZoomButton
            let width = sprintf "%s" o.width
            let height = sprintf "%s" o.height
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            let backgroundColor = Figure_Chart_BackgroundColor.ToJson o.backgroundColor
            let plotBorderColor = sprintf "\\\"%s\\\"" o.plotBorderColor
            let borderWidth = sprintf "%i" o.borderWidth
            let className = sprintf "\\\"%s\\\"" o.className
            let plotBackgroundColor = sprintf "\\\"%s\\\"" o.plotBackgroundColor
            let plotBorderWidth = sprintf "%i" o.plotBorderWidth
            sprintf "{\\\"styledMode\\\":%s,\\\"borderRadius\\\":%s,\\\"colorCount\\\":%s,\\\"defaultSeriesType\\\":%s,\\\"ignoreHiddenSeries\\\":%s,\\\"spacing\\\":%s,\\\"resetZoomButton\\\":%s,\\\"width\\\":%s,\\\"height\\\":%s,\\\"borderColor\\\":%s,\\\"backgroundColor\\\":%s,\\\"plotBorderColor\\\":%s,\\\"borderWidth\\\":%s,\\\"className\\\":%s,\\\"plotBackgroundColor\\\":%s,\\\"plotBorderWidth\\\":%s}" styledMode borderRadius colorCount defaultSeriesType ignoreHiddenSeries spacing resetZoomButton width height borderColor backgroundColor plotBorderColor borderWidth className plotBackgroundColor plotBorderWidth

        member this.Set (o:{| styledMode:bool; borderRadius:int; colorCount:int; defaultSeriesType:string; ignoreHiddenSeries:bool; spacing:int seq; resetZoomButton: {| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}; width:string; height:string; borderColor:string; backgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}; plotBorderColor:string; borderWidth:int; className:string; plotBackgroundColor:string; plotBorderWidth:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Chart.ToJson o)


    ///<summary>Figure_Title_Style_Background : <code>string</code></summary>
    type Figure_Title_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Background.ToJson o)

    ///<summary>Figure_Title_Style_BackgroundColor : <code>string</code></summary>
    type Figure_Title_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_Title_Style_Border : <code>string</code></summary>
    type Figure_Title_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Border.ToJson o)

    ///<summary>Figure_Title_Style_BorderRadius : <code>int</code></summary>
    type Figure_Title_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_BorderRadius.ToJson o)

    ///<summary>Figure_Title_Style_Color : <code>string</code></summary>
    type Figure_Title_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Color.ToJson o)

    ///<summary>Figure_Title_Style_Cursor : <code>string</code></summary>
    type Figure_Title_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Cursor.ToJson o)

    ///<summary>Figure_Title_Style_FontFamily : <code>string</code></summary>
    type Figure_Title_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_FontFamily.ToJson o)

    ///<summary>Figure_Title_Style_FontWeight : <code>string</code></summary>
    type Figure_Title_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_FontWeight.ToJson o)

    ///<summary>Figure_Title_Style_FontSize : <code>string</code></summary>
    type Figure_Title_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_FontSize.ToJson o)

    ///<summary>Figure_Title_Style_Height : <code>int</code></summary>
    type Figure_Title_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Height.ToJson o)

    ///<summary>Figure_Title_Style_LineWidth : <code>int</code></summary>
    type Figure_Title_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_LineWidth.ToJson o)

    ///<summary>Figure_Title_Style_Padding : <code>string</code></summary>
    type Figure_Title_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Padding.ToJson o)

    ///<summary>Figure_Title_Style_Position : <code>string</code></summary>
    type Figure_Title_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Position.ToJson o)

    ///<summary>Figure_Title_Style_TextAlign : <code>string</code></summary>
    type Figure_Title_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_TextAlign.ToJson o)

    ///<summary>Figure_Title_Style_TextDecoration : <code>string</code></summary>
    type Figure_Title_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_TextDecoration.ToJson o)

    ///<summary>Figure_Title_Style_TextOutline : <code>string</code></summary>
    type Figure_Title_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_TextOutline.ToJson o)

    ///<summary>Figure_Title_Style_TextOverflow : <code>string</code></summary>
    type Figure_Title_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_TextOverflow.ToJson o)

    ///<summary>Figure_Title_Style_Top : <code>string</code></summary>
    type Figure_Title_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Top.ToJson o)

    ///<summary>Figure_Title_Style_Transition : <code>string</code></summary>
    type Figure_Title_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Transition.ToJson o)

    ///<summary>Figure_Title_Style_WhiteSpace : <code>string</code></summary>
    type Figure_Title_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_Title_Style_Width : <code>int</code></summary>
    type Figure_Title_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style_Width.ToJson o)

    ///<summary>Figure_Title_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_Title_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Title_Style_Background : <code>string</code></summary>
        member this.background = Figure_Title_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Title_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Border : <code>string</code></summary>
        member this.border = Figure_Title_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Title_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Color : <code>string</code></summary>
        member this.color = Figure_Title_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Title_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_Title_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Title_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Title_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Height : <code>int</code></summary>
        member this.height = Figure_Title_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Title_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_Title_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Position : <code>string</code></summary>
        member this.position = Figure_Title_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_Title_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_Title_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_Title_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Title_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Top : <code>string</code></summary>
        member this.top = Figure_Title_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_Title_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_Title_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Style_Width : <code>int</code></summary>
        member this.width = Figure_Title_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Style.ToJson o)


    ///<summary>Figure_Title_Text : <code>string</code></summary>
    type Figure_Title_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Text.ToJson o)

    ///<summary>Figure_Title_Align : <code>string</code></summary>
    type Figure_Title_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Align.ToJson o)

    ///<summary>Figure_Title_Margin : <code>int</code></summary>
    type Figure_Title_Margin(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.margin" (parent.GetPath()))
                |> Option.defaultValue "margin"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_Margin.ToJson o)

    ///<summary>Figure_Title_WidthAdjust : <code>int</code></summary>
    type Figure_Title_WidthAdjust(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.widthAdjust" (parent.GetPath()))
                |> Option.defaultValue "widthAdjust"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title_WidthAdjust.ToJson o)

    ///<summary>Figure_Title : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; margin:int; widthAdjust:int |}</code></summary>
    type Figure_Title(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Title_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_Title_Style(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Text : <code>string</code></summary>
        member this.text = Figure_Title_Text(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Align : <code>string</code></summary>
        member this.align = Figure_Title_Align(Some (this :> IFigureItem))

        ///<summary>Figure_Title_Margin : <code>int</code></summary>
        member this.margin = Figure_Title_Margin(Some (this :> IFigureItem))

        ///<summary>Figure_Title_WidthAdjust : <code>int</code></summary>
        member this.widthAdjust = Figure_Title_WidthAdjust(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.title" (parent.GetPath()))
                |> Option.defaultValue "title"

        static member ToJson (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; margin:int; widthAdjust:int |}) =
            let style = Figure_Title_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            let align = sprintf "\\\"%s\\\"" o.align
            let margin = sprintf "%i" o.margin
            let widthAdjust = sprintf "%i" o.widthAdjust
            sprintf "{\\\"style\\\":%s,\\\"text\\\":%s,\\\"align\\\":%s,\\\"margin\\\":%s,\\\"widthAdjust\\\":%s}" style text align margin widthAdjust

        member this.Set (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; margin:int; widthAdjust:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Title.ToJson o)


    ///<summary>Figure_Subtitle_Style_Background : <code>string</code></summary>
    type Figure_Subtitle_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Background.ToJson o)

    ///<summary>Figure_Subtitle_Style_BackgroundColor : <code>string</code></summary>
    type Figure_Subtitle_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_Subtitle_Style_Border : <code>string</code></summary>
    type Figure_Subtitle_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Border.ToJson o)

    ///<summary>Figure_Subtitle_Style_BorderRadius : <code>int</code></summary>
    type Figure_Subtitle_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_BorderRadius.ToJson o)

    ///<summary>Figure_Subtitle_Style_Color : <code>string</code></summary>
    type Figure_Subtitle_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Color.ToJson o)

    ///<summary>Figure_Subtitle_Style_Cursor : <code>string</code></summary>
    type Figure_Subtitle_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Cursor.ToJson o)

    ///<summary>Figure_Subtitle_Style_FontFamily : <code>string</code></summary>
    type Figure_Subtitle_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_FontFamily.ToJson o)

    ///<summary>Figure_Subtitle_Style_FontWeight : <code>string</code></summary>
    type Figure_Subtitle_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_FontWeight.ToJson o)

    ///<summary>Figure_Subtitle_Style_FontSize : <code>string</code></summary>
    type Figure_Subtitle_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_FontSize.ToJson o)

    ///<summary>Figure_Subtitle_Style_Height : <code>int</code></summary>
    type Figure_Subtitle_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Height.ToJson o)

    ///<summary>Figure_Subtitle_Style_LineWidth : <code>int</code></summary>
    type Figure_Subtitle_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_LineWidth.ToJson o)

    ///<summary>Figure_Subtitle_Style_Padding : <code>string</code></summary>
    type Figure_Subtitle_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Padding.ToJson o)

    ///<summary>Figure_Subtitle_Style_Position : <code>string</code></summary>
    type Figure_Subtitle_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Position.ToJson o)

    ///<summary>Figure_Subtitle_Style_TextAlign : <code>string</code></summary>
    type Figure_Subtitle_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_TextAlign.ToJson o)

    ///<summary>Figure_Subtitle_Style_TextDecoration : <code>string</code></summary>
    type Figure_Subtitle_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_TextDecoration.ToJson o)

    ///<summary>Figure_Subtitle_Style_TextOutline : <code>string</code></summary>
    type Figure_Subtitle_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_TextOutline.ToJson o)

    ///<summary>Figure_Subtitle_Style_TextOverflow : <code>string</code></summary>
    type Figure_Subtitle_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_TextOverflow.ToJson o)

    ///<summary>Figure_Subtitle_Style_Top : <code>string</code></summary>
    type Figure_Subtitle_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Top.ToJson o)

    ///<summary>Figure_Subtitle_Style_Transition : <code>string</code></summary>
    type Figure_Subtitle_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Transition.ToJson o)

    ///<summary>Figure_Subtitle_Style_WhiteSpace : <code>string</code></summary>
    type Figure_Subtitle_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_Subtitle_Style_Width : <code>int</code></summary>
    type Figure_Subtitle_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style_Width.ToJson o)

    ///<summary>Figure_Subtitle_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_Subtitle_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Subtitle_Style_Background : <code>string</code></summary>
        member this.background = Figure_Subtitle_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Subtitle_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Border : <code>string</code></summary>
        member this.border = Figure_Subtitle_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Subtitle_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Color : <code>string</code></summary>
        member this.color = Figure_Subtitle_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Subtitle_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_Subtitle_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Subtitle_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Subtitle_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Height : <code>int</code></summary>
        member this.height = Figure_Subtitle_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Subtitle_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_Subtitle_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Position : <code>string</code></summary>
        member this.position = Figure_Subtitle_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_Subtitle_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_Subtitle_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_Subtitle_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Subtitle_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Top : <code>string</code></summary>
        member this.top = Figure_Subtitle_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_Subtitle_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_Subtitle_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Style_Width : <code>int</code></summary>
        member this.width = Figure_Subtitle_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Style.ToJson o)


    ///<summary>Figure_Subtitle_Text : <code>string</code></summary>
    type Figure_Subtitle_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Text.ToJson o)

    ///<summary>Figure_Subtitle_Align : <code>string</code></summary>
    type Figure_Subtitle_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_Align.ToJson o)

    ///<summary>Figure_Subtitle_WidthAdjust : <code>int</code></summary>
    type Figure_Subtitle_WidthAdjust(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.widthAdjust" (parent.GetPath()))
                |> Option.defaultValue "widthAdjust"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle_WidthAdjust.ToJson o)

    ///<summary>Figure_Subtitle : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; widthAdjust:int |}</code></summary>
    type Figure_Subtitle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Subtitle_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_Subtitle_Style(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Text : <code>string</code></summary>
        member this.text = Figure_Subtitle_Text(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_Align : <code>string</code></summary>
        member this.align = Figure_Subtitle_Align(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle_WidthAdjust : <code>int</code></summary>
        member this.widthAdjust = Figure_Subtitle_WidthAdjust(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.subtitle" (parent.GetPath()))
                |> Option.defaultValue "subtitle"

        static member ToJson (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; widthAdjust:int |}) =
            let style = Figure_Subtitle_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            let align = sprintf "\\\"%s\\\"" o.align
            let widthAdjust = sprintf "%i" o.widthAdjust
            sprintf "{\\\"style\\\":%s,\\\"text\\\":%s,\\\"align\\\":%s,\\\"widthAdjust\\\":%s}" style text align widthAdjust

        member this.Set (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; widthAdjust:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Subtitle.ToJson o)


    ///<summary>Figure_Caption_Style_Background : <code>string</code></summary>
    type Figure_Caption_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Background.ToJson o)

    ///<summary>Figure_Caption_Style_BackgroundColor : <code>string</code></summary>
    type Figure_Caption_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_Caption_Style_Border : <code>string</code></summary>
    type Figure_Caption_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Border.ToJson o)

    ///<summary>Figure_Caption_Style_BorderRadius : <code>int</code></summary>
    type Figure_Caption_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_BorderRadius.ToJson o)

    ///<summary>Figure_Caption_Style_Color : <code>string</code></summary>
    type Figure_Caption_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Color.ToJson o)

    ///<summary>Figure_Caption_Style_Cursor : <code>string</code></summary>
    type Figure_Caption_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Cursor.ToJson o)

    ///<summary>Figure_Caption_Style_FontFamily : <code>string</code></summary>
    type Figure_Caption_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_FontFamily.ToJson o)

    ///<summary>Figure_Caption_Style_FontWeight : <code>string</code></summary>
    type Figure_Caption_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_FontWeight.ToJson o)

    ///<summary>Figure_Caption_Style_FontSize : <code>string</code></summary>
    type Figure_Caption_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_FontSize.ToJson o)

    ///<summary>Figure_Caption_Style_Height : <code>int</code></summary>
    type Figure_Caption_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Height.ToJson o)

    ///<summary>Figure_Caption_Style_LineWidth : <code>int</code></summary>
    type Figure_Caption_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_LineWidth.ToJson o)

    ///<summary>Figure_Caption_Style_Padding : <code>string</code></summary>
    type Figure_Caption_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Padding.ToJson o)

    ///<summary>Figure_Caption_Style_Position : <code>string</code></summary>
    type Figure_Caption_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Position.ToJson o)

    ///<summary>Figure_Caption_Style_TextAlign : <code>string</code></summary>
    type Figure_Caption_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_TextAlign.ToJson o)

    ///<summary>Figure_Caption_Style_TextDecoration : <code>string</code></summary>
    type Figure_Caption_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_TextDecoration.ToJson o)

    ///<summary>Figure_Caption_Style_TextOutline : <code>string</code></summary>
    type Figure_Caption_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_TextOutline.ToJson o)

    ///<summary>Figure_Caption_Style_TextOverflow : <code>string</code></summary>
    type Figure_Caption_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_TextOverflow.ToJson o)

    ///<summary>Figure_Caption_Style_Top : <code>string</code></summary>
    type Figure_Caption_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Top.ToJson o)

    ///<summary>Figure_Caption_Style_Transition : <code>string</code></summary>
    type Figure_Caption_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Transition.ToJson o)

    ///<summary>Figure_Caption_Style_WhiteSpace : <code>string</code></summary>
    type Figure_Caption_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_Caption_Style_Width : <code>int</code></summary>
    type Figure_Caption_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style_Width.ToJson o)

    ///<summary>Figure_Caption_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_Caption_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Caption_Style_Background : <code>string</code></summary>
        member this.background = Figure_Caption_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Caption_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Border : <code>string</code></summary>
        member this.border = Figure_Caption_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Caption_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Color : <code>string</code></summary>
        member this.color = Figure_Caption_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Caption_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_Caption_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Caption_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Caption_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Height : <code>int</code></summary>
        member this.height = Figure_Caption_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Caption_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_Caption_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Position : <code>string</code></summary>
        member this.position = Figure_Caption_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_Caption_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_Caption_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_Caption_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Caption_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Top : <code>string</code></summary>
        member this.top = Figure_Caption_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_Caption_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_Caption_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Style_Width : <code>int</code></summary>
        member this.width = Figure_Caption_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Style.ToJson o)


    ///<summary>Figure_Caption_Margin : <code>int</code></summary>
    type Figure_Caption_Margin(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.margin" (parent.GetPath()))
                |> Option.defaultValue "margin"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Margin.ToJson o)

    ///<summary>Figure_Caption_Text : <code>string</code></summary>
    type Figure_Caption_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Text.ToJson o)

    ///<summary>Figure_Caption_Align : <code>string</code></summary>
    type Figure_Caption_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_Align.ToJson o)

    ///<summary>Figure_Caption_VerticalAlign : <code>string</code></summary>
    type Figure_Caption_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption_VerticalAlign.ToJson o)

    ///<summary>Figure_Caption : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; margin:int; text:string; align:string; verticalAlign:string |}</code></summary>
    type Figure_Caption(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Caption_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_Caption_Style(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Margin : <code>int</code></summary>
        member this.margin = Figure_Caption_Margin(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Text : <code>string</code></summary>
        member this.text = Figure_Caption_Text(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_Align : <code>string</code></summary>
        member this.align = Figure_Caption_Align(Some (this :> IFigureItem))

        ///<summary>Figure_Caption_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_Caption_VerticalAlign(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.caption" (parent.GetPath()))
                |> Option.defaultValue "caption"

        static member ToJson (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; margin:int; text:string; align:string; verticalAlign:string |}) =
            let style = Figure_Caption_Style.ToJson o.style
            let margin = sprintf "%i" o.margin
            let text = sprintf "\\\"%s\\\"" o.text
            let align = sprintf "\\\"%s\\\"" o.align
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            sprintf "{\\\"style\\\":%s,\\\"margin\\\":%s,\\\"text\\\":%s,\\\"align\\\":%s,\\\"verticalAlign\\\":%s}" style margin text align verticalAlign

        member this.Set (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; margin:int; text:string; align:string; verticalAlign:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Caption.ToJson o)


    ///<summary>Figure_PlotOptions_Line_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Line_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Line_AllowPointSelect : <code>bool</code></summary>
    type Figure_PlotOptions_Line_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_AllowPointSelect.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Crisp : <code>bool</code></summary>
    type Figure_PlotOptions_Line_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Crisp.ToJson o)

    ///<summary>Figure_PlotOptions_Line_ShowCheckbox : <code>bool</code></summary>
    type Figure_PlotOptions_Line_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_ShowCheckbox.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Line_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Line_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Line_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Line_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Marker_EnabledThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Line_Marker_EnabledThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabledThreshold" (parent.GetPath()))
                |> Option.defaultValue "enabledThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_EnabledThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Line_Marker_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Line_Marker_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_Radius : <code>int</code></summary>
    type Figure_PlotOptions_Line_Marker_Radius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radius" (parent.GetPath()))
                |> Option.defaultValue "radius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_Radius.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_Marker_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Line_Marker_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Line_Marker_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_Enabled : <code>bool</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Hover_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Hover_Enabled.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Hover_RadiusPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radiusPlus" (parent.GetPath()))
                |> Option.defaultValue "radiusPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Hover_RadiusPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Line_Marker_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_PlotOptions_Line_Marker_States_Hover_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
        member this.radiusPlus = Figure_PlotOptions_Line_Marker_States_Hover_RadiusPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Line_Marker_States_Hover_LineWidthPlus(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            let animation = Figure_PlotOptions_Line_Marker_States_Hover_Animation.ToJson o.animation
            let enabled = sprintf "%b" o.enabled
            let radiusPlus = sprintf "%i" o.radiusPlus
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            sprintf "{\\\"animation\\\":%s,\\\"enabled\\\":%s,\\\"radiusPlus\\\":%s,\\\"lineWidthPlus\\\":%s}" animation enabled radiusPlus lineWidthPlus

        member this.Set (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Marker_States_Select_FillColor : <code>string</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Select_FillColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fillColor" (parent.GetPath()))
                |> Option.defaultValue "fillColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Select_FillColor.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Select_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Select_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Select_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Select_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Select_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Select_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
    type Figure_PlotOptions_Line_Marker_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_Marker_States_Select_FillColor : <code>string</code></summary>
        member this.fillColor = Figure_PlotOptions_Line_Marker_States_Select_FillColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_States_Select_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Line_Marker_States_Select_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_States_Select_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Line_Marker_States_Select_LineWidth(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            let fillColor = sprintf "\\\"%s\\\"" o.fillColor
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            sprintf "{\\\"fillColor\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s}" fillColor lineColor lineWidth

        member this.Set (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
    type Figure_PlotOptions_Line_Marker_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Line_Marker_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
        member this.hover = Figure_PlotOptions_Line_Marker_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
        member this.select = Figure_PlotOptions_Line_Marker_States_Select(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            let normal = Figure_PlotOptions_Line_Marker_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Line_Marker_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Line_Marker_States_Select.ToJson o.select
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s}" normal hover select

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker_States.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}</code></summary>
    type Figure_PlotOptions_Line_Marker(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_Marker_EnabledThreshold : <code>int</code></summary>
        member this.enabledThreshold = Figure_PlotOptions_Line_Marker_EnabledThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Line_Marker_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Line_Marker_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_Radius : <code>int</code></summary>
        member this.radius = Figure_PlotOptions_Line_Marker_Radius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Line_Marker_States(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}) =
            let enabledThreshold = sprintf "%i" o.enabledThreshold
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            let radius = sprintf "%i" o.radius
            let states = Figure_PlotOptions_Line_Marker_States.ToJson o.states
            sprintf "{\\\"enabledThreshold\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s,\\\"radius\\\":%s,\\\"states\\\":%s}" enabledThreshold lineColor lineWidth radius states

        member this.Set (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Point_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Line_Point_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Point_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Line_Point : <code>{| events: {| dummy:string |} |}</code></summary>
    type Figure_PlotOptions_Line_Point(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_Point_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Line_Point_Events(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.point" (parent.GetPath()))
                |> Option.defaultValue "point"

        static member ToJson (o:{| events: {| dummy:string |} |}) =
            let events = Figure_PlotOptions_Line_Point_Events.ToJson o.events
            sprintf "{\\\"events\\\":%s}" events

        member this.Set (o:{| events: {| dummy:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Point.ToJson o)


    ///<summary>Figure_PlotOptions_Line_DataLabels_Align : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Align.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Padding : <code>int</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Background : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Background.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Border : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Border.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Color : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Cursor : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Cursor.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_FontFamily : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_FontFamily.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_FontWeight : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_FontWeight.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_FontSize : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_FontSize.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Height : <code>int</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Height.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Padding : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Position : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Position.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_TextAlign : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_TextAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_TextDecoration : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_TextOutline : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_TextOutline.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_TextOverflow : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Top : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Top.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Transition : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Transition.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Width : <code>int</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style_Width.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Background : <code>string</code></summary>
        member this.background = Figure_PlotOptions_Line_DataLabels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_PlotOptions_Line_DataLabels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Border : <code>string</code></summary>
        member this.border = Figure_PlotOptions_Line_DataLabels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Line_DataLabels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Line_DataLabels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_PlotOptions_Line_DataLabels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_PlotOptions_Line_DataLabels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_PlotOptions_Line_DataLabels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_PlotOptions_Line_DataLabels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Height : <code>int</code></summary>
        member this.height = Figure_PlotOptions_Line_DataLabels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Line_DataLabels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_PlotOptions_Line_DataLabels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Position : <code>string</code></summary>
        member this.position = Figure_PlotOptions_Line_DataLabels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_PlotOptions_Line_DataLabels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_PlotOptions_Line_DataLabels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_PlotOptions_Line_DataLabels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_PlotOptions_Line_DataLabels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Top : <code>string</code></summary>
        member this.top = Figure_PlotOptions_Line_DataLabels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_PlotOptions_Line_DataLabels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_PlotOptions_Line_DataLabels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style_Width : <code>int</code></summary>
        member this.width = Figure_PlotOptions_Line_DataLabels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Style.ToJson o)


    ///<summary>Figure_PlotOptions_Line_DataLabels_VerticalAlign : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_VerticalAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_X : <code>int</code></summary>
    type Figure_PlotOptions_Line_DataLabels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_X.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Y : <code>int</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Y.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels_Color : <code>string</code></summary>
    type Figure_PlotOptions_Line_DataLabels_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Line_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}</code></summary>
    type Figure_PlotOptions_Line_DataLabels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_DataLabels_Align : <code>string</code></summary>
        member this.align = Figure_PlotOptions_Line_DataLabels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Padding : <code>int</code></summary>
        member this.padding = Figure_PlotOptions_Line_DataLabels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_PlotOptions_Line_DataLabels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_PlotOptions_Line_DataLabels_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Line_DataLabels_X(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Y : <code>int</code></summary>
        member this.y = Figure_PlotOptions_Line_DataLabels_Y(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Line_DataLabels_Color(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dataLabels" (parent.GetPath()))
                |> Option.defaultValue "dataLabels"

        static member ToJson (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let padding = sprintf "%i" o.padding
            let style = Figure_PlotOptions_Line_DataLabels_Style.ToJson o.style
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            let color = sprintf "\\\"%s\\\"" o.color
            sprintf "{\\\"align\\\":%s,\\\"padding\\\":%s,\\\"style\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s,\\\"color\\\":%s}" align padding style verticalAlign x y color

        member this.Set (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_DataLabels.ToJson o)


    ///<summary>Figure_PlotOptions_Line_CropThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Line_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_CropThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Line_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Line_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Line_PointRange : <code>int</code></summary>
    type Figure_PlotOptions_Line_PointRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointRange" (parent.GetPath()))
                |> Option.defaultValue "pointRange"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_PointRange.ToJson o)

    ///<summary>Figure_PlotOptions_Line_SoftThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Line_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_SoftThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Line_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Line_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Line_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Line_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Line_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Line_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Line_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Line_States_Hover_Marker(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Hover_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States_Hover_Halo_Size : <code>int</code></summary>
    type Figure_PlotOptions_Line_States_Hover_Halo_Size(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.size" (parent.GetPath()))
                |> Option.defaultValue "size"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Hover_Halo_Size.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Hover_Halo_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Line_States_Hover_Halo_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Hover_Halo_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
    type Figure_PlotOptions_Line_States_Hover_Halo(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Hover_Halo_Size : <code>int</code></summary>
        member this.size = Figure_PlotOptions_Line_States_Hover_Halo_Size(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States_Hover_Halo_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Line_States_Hover_Halo_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.halo" (parent.GetPath()))
                |> Option.defaultValue "halo"

        static member ToJson (o:{| size:int; opacity:int |}) =
            let size = sprintf "%i" o.size
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"size\\\":%s,\\\"opacity\\\":%s}" size opacity

        member this.Set (o:{| size:int; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Hover_Halo.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Line_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Line_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Line_States_Hover_LineWidthPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
        member this.marker = Figure_PlotOptions_Line_States_Hover_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
        member this.halo = Figure_PlotOptions_Line_States_Hover_Halo(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            let animation = Figure_PlotOptions_Line_States_Hover_Animation.ToJson o.animation
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            let marker = Figure_PlotOptions_Line_States_Hover_Marker.ToJson o.marker
            let halo = Figure_PlotOptions_Line_States_Hover_Halo.ToJson o.halo
            sprintf "{\\\"animation\\\":%s,\\\"lineWidthPlus\\\":%s,\\\"marker\\\":%s,\\\"halo\\\":%s}" animation lineWidthPlus marker halo

        member this.Set (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States_Select_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Line_States_Select_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Select_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Select_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Line_States_Select_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Select_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Line_States_Select_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Select_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
    type Figure_PlotOptions_Line_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Select_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Line_States_Select_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| animation: {| duration:int |} |}) =
            let animation = Figure_PlotOptions_Line_States_Select_Animation.ToJson o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation: {| duration:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States_Inactive_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Line_States_Inactive_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Inactive_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Line_States_Inactive_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Inactive_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Line_States_Inactive_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Inactive_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States_Inactive_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Line_States_Inactive_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Inactive_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Line_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
    type Figure_PlotOptions_Line_States_Inactive(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Line_States_Inactive_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States_Inactive_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Line_States_Inactive_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactive" (parent.GetPath()))
                |> Option.defaultValue "inactive"

        static member ToJson (o:{| animation: {| duration:int |}; opacity:int |}) =
            let animation = Figure_PlotOptions_Line_States_Inactive_Animation.ToJson o.animation
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"animation\\\":%s,\\\"opacity\\\":%s}" animation opacity

        member this.Set (o:{| animation: {| duration:int |}; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States_Inactive.ToJson o)


    ///<summary>Figure_PlotOptions_Line_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Line_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Line_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
        member this.hover = Figure_PlotOptions_Line_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
        member this.select = Figure_PlotOptions_Line_States_Select(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
        member this.inactive = Figure_PlotOptions_Line_States_Inactive(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            let normal = Figure_PlotOptions_Line_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Line_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Line_States_Select.ToJson o.select
            let inactive = Figure_PlotOptions_Line_States_Inactive.ToJson o.inactive
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s,\\\"inactive\\\":%s}" normal hover select inactive

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_States.ToJson o)


    ///<summary>Figure_PlotOptions_Line_StickyTracking : <code>bool</code></summary>
    type Figure_PlotOptions_Line_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_StickyTracking.ToJson o)

    ///<summary>Figure_PlotOptions_Line_TurboThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Line_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_TurboThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Line_FindNearestPointBy : <code>string</code></summary>
    type Figure_PlotOptions_Line_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line_FindNearestPointBy.ToJson o)

    ///<summary>Figure_PlotOptions_Line : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}</code></summary>
    type Figure_PlotOptions_Line(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Line_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_PlotOptions_Line_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_PlotOptions_Line_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_PlotOptions_Line_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Line_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Line_Events(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}</code></summary>
        member this.marker = Figure_PlotOptions_Line_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Point : <code>{| events: {| dummy:string |} |}</code></summary>
        member this.point = Figure_PlotOptions_Line_Point(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}</code></summary>
        member this.dataLabels = Figure_PlotOptions_Line_DataLabels(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_PlotOptions_Line_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Line_Opacity(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_PointRange : <code>int</code></summary>
        member this.pointRange = Figure_PlotOptions_Line_PointRange(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_PlotOptions_Line_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Line_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_PlotOptions_Line_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_PlotOptions_Line_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Line_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_PlotOptions_Line_FindNearestPointBy(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.line" (parent.GetPath()))
                |> Option.defaultValue "line"

        static member ToJson (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}) =
            let lineWidth = sprintf "%i" o.lineWidth
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let crisp = sprintf "%b" o.crisp
            let showCheckbox = sprintf "%b" o.showCheckbox
            let animation = Figure_PlotOptions_Line_Animation.ToJson o.animation
            let events = Figure_PlotOptions_Line_Events.ToJson o.events
            let marker = Figure_PlotOptions_Line_Marker.ToJson o.marker
            let point = Figure_PlotOptions_Line_Point.ToJson o.point
            let dataLabels = Figure_PlotOptions_Line_DataLabels.ToJson o.dataLabels
            let cropThreshold = sprintf "%i" o.cropThreshold
            let opacity = sprintf "%i" o.opacity
            let pointRange = sprintf "%i" o.pointRange
            let softThreshold = sprintf "%b" o.softThreshold
            let states = Figure_PlotOptions_Line_States.ToJson o.states
            let stickyTracking = sprintf "%b" o.stickyTracking
            let turboThreshold = sprintf "%i" o.turboThreshold
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            sprintf "{\\\"lineWidth\\\":%s,\\\"allowPointSelect\\\":%s,\\\"crisp\\\":%s,\\\"showCheckbox\\\":%s,\\\"animation\\\":%s,\\\"events\\\":%s,\\\"marker\\\":%s,\\\"point\\\":%s,\\\"dataLabels\\\":%s,\\\"cropThreshold\\\":%s,\\\"opacity\\\":%s,\\\"pointRange\\\":%s,\\\"softThreshold\\\":%s,\\\"states\\\":%s,\\\"stickyTracking\\\":%s,\\\"turboThreshold\\\":%s,\\\"findNearestPointBy\\\":%s}" lineWidth allowPointSelect crisp showCheckbox animation events marker point dataLabels cropThreshold opacity pointRange softThreshold states stickyTracking turboThreshold findNearestPointBy

        member this.Set (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Line.ToJson o)


    ///<summary>Figure_PlotOptions_Area_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Area_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Area_AllowPointSelect : <code>bool</code></summary>
    type Figure_PlotOptions_Area_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_AllowPointSelect.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Crisp : <code>bool</code></summary>
    type Figure_PlotOptions_Area_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Crisp.ToJson o)

    ///<summary>Figure_PlotOptions_Area_ShowCheckbox : <code>bool</code></summary>
    type Figure_PlotOptions_Area_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_ShowCheckbox.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Area_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Area_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Area_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Area_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Marker_EnabledThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Area_Marker_EnabledThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabledThreshold" (parent.GetPath()))
                |> Option.defaultValue "enabledThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_EnabledThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Area_Marker_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Area_Marker_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_Radius : <code>int</code></summary>
    type Figure_PlotOptions_Area_Marker_Radius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radius" (parent.GetPath()))
                |> Option.defaultValue "radius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_Radius.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_Marker_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Area_Marker_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Area_Marker_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_Enabled : <code>bool</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Hover_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Hover_Enabled.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Hover_RadiusPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radiusPlus" (parent.GetPath()))
                |> Option.defaultValue "radiusPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Hover_RadiusPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Area_Marker_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_PlotOptions_Area_Marker_States_Hover_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
        member this.radiusPlus = Figure_PlotOptions_Area_Marker_States_Hover_RadiusPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Area_Marker_States_Hover_LineWidthPlus(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            let animation = Figure_PlotOptions_Area_Marker_States_Hover_Animation.ToJson o.animation
            let enabled = sprintf "%b" o.enabled
            let radiusPlus = sprintf "%i" o.radiusPlus
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            sprintf "{\\\"animation\\\":%s,\\\"enabled\\\":%s,\\\"radiusPlus\\\":%s,\\\"lineWidthPlus\\\":%s}" animation enabled radiusPlus lineWidthPlus

        member this.Set (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Marker_States_Select_FillColor : <code>string</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Select_FillColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fillColor" (parent.GetPath()))
                |> Option.defaultValue "fillColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Select_FillColor.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Select_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Select_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Select_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Select_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Select_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Select_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
    type Figure_PlotOptions_Area_Marker_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_Marker_States_Select_FillColor : <code>string</code></summary>
        member this.fillColor = Figure_PlotOptions_Area_Marker_States_Select_FillColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_States_Select_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Area_Marker_States_Select_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_States_Select_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Area_Marker_States_Select_LineWidth(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            let fillColor = sprintf "\\\"%s\\\"" o.fillColor
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            sprintf "{\\\"fillColor\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s}" fillColor lineColor lineWidth

        member this.Set (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
    type Figure_PlotOptions_Area_Marker_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Area_Marker_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
        member this.hover = Figure_PlotOptions_Area_Marker_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
        member this.select = Figure_PlotOptions_Area_Marker_States_Select(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            let normal = Figure_PlotOptions_Area_Marker_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Area_Marker_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Area_Marker_States_Select.ToJson o.select
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s}" normal hover select

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker_States.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}</code></summary>
    type Figure_PlotOptions_Area_Marker(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_Marker_EnabledThreshold : <code>int</code></summary>
        member this.enabledThreshold = Figure_PlotOptions_Area_Marker_EnabledThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Area_Marker_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Area_Marker_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_Radius : <code>int</code></summary>
        member this.radius = Figure_PlotOptions_Area_Marker_Radius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Area_Marker_States(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}) =
            let enabledThreshold = sprintf "%i" o.enabledThreshold
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            let radius = sprintf "%i" o.radius
            let states = Figure_PlotOptions_Area_Marker_States.ToJson o.states
            sprintf "{\\\"enabledThreshold\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s,\\\"radius\\\":%s,\\\"states\\\":%s}" enabledThreshold lineColor lineWidth radius states

        member this.Set (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Point_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Area_Point_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Point_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Area_Point : <code>{| events: {| dummy:string |} |}</code></summary>
    type Figure_PlotOptions_Area_Point(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_Point_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Area_Point_Events(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.point" (parent.GetPath()))
                |> Option.defaultValue "point"

        static member ToJson (o:{| events: {| dummy:string |} |}) =
            let events = Figure_PlotOptions_Area_Point_Events.ToJson o.events
            sprintf "{\\\"events\\\":%s}" events

        member this.Set (o:{| events: {| dummy:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Point.ToJson o)


    ///<summary>Figure_PlotOptions_Area_DataLabels_Align : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Align.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Padding : <code>int</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Background : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Background.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Border : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Border.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Color : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Cursor : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Cursor.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_FontFamily : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_FontFamily.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_FontWeight : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_FontWeight.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_FontSize : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_FontSize.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Height : <code>int</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Height.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Padding : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Position : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Position.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_TextAlign : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_TextAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_TextDecoration : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_TextOutline : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_TextOutline.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_TextOverflow : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Top : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Top.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Transition : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Transition.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Width : <code>int</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style_Width.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Background : <code>string</code></summary>
        member this.background = Figure_PlotOptions_Area_DataLabels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_PlotOptions_Area_DataLabels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Border : <code>string</code></summary>
        member this.border = Figure_PlotOptions_Area_DataLabels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Area_DataLabels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Area_DataLabels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_PlotOptions_Area_DataLabels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_PlotOptions_Area_DataLabels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_PlotOptions_Area_DataLabels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_PlotOptions_Area_DataLabels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Height : <code>int</code></summary>
        member this.height = Figure_PlotOptions_Area_DataLabels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Area_DataLabels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_PlotOptions_Area_DataLabels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Position : <code>string</code></summary>
        member this.position = Figure_PlotOptions_Area_DataLabels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_PlotOptions_Area_DataLabels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_PlotOptions_Area_DataLabels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_PlotOptions_Area_DataLabels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_PlotOptions_Area_DataLabels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Top : <code>string</code></summary>
        member this.top = Figure_PlotOptions_Area_DataLabels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_PlotOptions_Area_DataLabels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_PlotOptions_Area_DataLabels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style_Width : <code>int</code></summary>
        member this.width = Figure_PlotOptions_Area_DataLabels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Style.ToJson o)


    ///<summary>Figure_PlotOptions_Area_DataLabels_VerticalAlign : <code>string</code></summary>
    type Figure_PlotOptions_Area_DataLabels_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_VerticalAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_X : <code>int</code></summary>
    type Figure_PlotOptions_Area_DataLabels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_X.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels_Y : <code>int</code></summary>
    type Figure_PlotOptions_Area_DataLabels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels_Y.ToJson o)

    ///<summary>Figure_PlotOptions_Area_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}</code></summary>
    type Figure_PlotOptions_Area_DataLabels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_DataLabels_Align : <code>string</code></summary>
        member this.align = Figure_PlotOptions_Area_DataLabels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Padding : <code>int</code></summary>
        member this.padding = Figure_PlotOptions_Area_DataLabels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_PlotOptions_Area_DataLabels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_PlotOptions_Area_DataLabels_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Area_DataLabels_X(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels_Y : <code>int</code></summary>
        member this.y = Figure_PlotOptions_Area_DataLabels_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dataLabels" (parent.GetPath()))
                |> Option.defaultValue "dataLabels"

        static member ToJson (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let padding = sprintf "%i" o.padding
            let style = Figure_PlotOptions_Area_DataLabels_Style.ToJson o.style
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"padding\\\":%s,\\\"style\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align padding style verticalAlign x y

        member this.Set (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_DataLabels.ToJson o)


    ///<summary>Figure_PlotOptions_Area_CropThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Area_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_CropThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Area_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Area_PointRange : <code>int</code></summary>
    type Figure_PlotOptions_Area_PointRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointRange" (parent.GetPath()))
                |> Option.defaultValue "pointRange"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_PointRange.ToJson o)

    ///<summary>Figure_PlotOptions_Area_SoftThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Area_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_SoftThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Area_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Area_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Area_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Area_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Area_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Area_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Area_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Area_States_Hover_Marker(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Hover_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States_Hover_Halo_Size : <code>int</code></summary>
    type Figure_PlotOptions_Area_States_Hover_Halo_Size(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.size" (parent.GetPath()))
                |> Option.defaultValue "size"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Hover_Halo_Size.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Hover_Halo_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Area_States_Hover_Halo_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Hover_Halo_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
    type Figure_PlotOptions_Area_States_Hover_Halo(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Hover_Halo_Size : <code>int</code></summary>
        member this.size = Figure_PlotOptions_Area_States_Hover_Halo_Size(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States_Hover_Halo_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Area_States_Hover_Halo_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.halo" (parent.GetPath()))
                |> Option.defaultValue "halo"

        static member ToJson (o:{| size:int; opacity:int |}) =
            let size = sprintf "%i" o.size
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"size\\\":%s,\\\"opacity\\\":%s}" size opacity

        member this.Set (o:{| size:int; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Hover_Halo.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Area_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Area_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Area_States_Hover_LineWidthPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
        member this.marker = Figure_PlotOptions_Area_States_Hover_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
        member this.halo = Figure_PlotOptions_Area_States_Hover_Halo(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            let animation = Figure_PlotOptions_Area_States_Hover_Animation.ToJson o.animation
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            let marker = Figure_PlotOptions_Area_States_Hover_Marker.ToJson o.marker
            let halo = Figure_PlotOptions_Area_States_Hover_Halo.ToJson o.halo
            sprintf "{\\\"animation\\\":%s,\\\"lineWidthPlus\\\":%s,\\\"marker\\\":%s,\\\"halo\\\":%s}" animation lineWidthPlus marker halo

        member this.Set (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States_Select_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Area_States_Select_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Select_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Select_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Area_States_Select_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Select_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Area_States_Select_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Select_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
    type Figure_PlotOptions_Area_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Select_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Area_States_Select_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| animation: {| duration:int |} |}) =
            let animation = Figure_PlotOptions_Area_States_Select_Animation.ToJson o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation: {| duration:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States_Inactive_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Area_States_Inactive_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Inactive_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Area_States_Inactive_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Inactive_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Area_States_Inactive_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Inactive_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States_Inactive_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Area_States_Inactive_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Inactive_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Area_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
    type Figure_PlotOptions_Area_States_Inactive(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Area_States_Inactive_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States_Inactive_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Area_States_Inactive_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactive" (parent.GetPath()))
                |> Option.defaultValue "inactive"

        static member ToJson (o:{| animation: {| duration:int |}; opacity:int |}) =
            let animation = Figure_PlotOptions_Area_States_Inactive_Animation.ToJson o.animation
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"animation\\\":%s,\\\"opacity\\\":%s}" animation opacity

        member this.Set (o:{| animation: {| duration:int |}; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States_Inactive.ToJson o)


    ///<summary>Figure_PlotOptions_Area_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Area_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Area_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
        member this.hover = Figure_PlotOptions_Area_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
        member this.select = Figure_PlotOptions_Area_States_Select(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
        member this.inactive = Figure_PlotOptions_Area_States_Inactive(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            let normal = Figure_PlotOptions_Area_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Area_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Area_States_Select.ToJson o.select
            let inactive = Figure_PlotOptions_Area_States_Inactive.ToJson o.inactive
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s,\\\"inactive\\\":%s}" normal hover select inactive

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_States.ToJson o)


    ///<summary>Figure_PlotOptions_Area_StickyTracking : <code>bool</code></summary>
    type Figure_PlotOptions_Area_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_StickyTracking.ToJson o)

    ///<summary>Figure_PlotOptions_Area_TurboThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Area_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_TurboThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Area_FindNearestPointBy : <code>string</code></summary>
    type Figure_PlotOptions_Area_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_FindNearestPointBy.ToJson o)

    ///<summary>Figure_PlotOptions_Area_Threshold : <code>int</code></summary>
    type Figure_PlotOptions_Area_Threshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.threshold" (parent.GetPath()))
                |> Option.defaultValue "threshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area_Threshold.ToJson o)

    ///<summary>Figure_PlotOptions_Area : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}</code></summary>
    type Figure_PlotOptions_Area(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Area_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Area_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_PlotOptions_Area_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_PlotOptions_Area_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_PlotOptions_Area_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Area_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Area_Events(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}</code></summary>
        member this.marker = Figure_PlotOptions_Area_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Point : <code>{| events: {| dummy:string |} |}</code></summary>
        member this.point = Figure_PlotOptions_Area_Point(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}</code></summary>
        member this.dataLabels = Figure_PlotOptions_Area_DataLabels(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_PlotOptions_Area_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Area_Opacity(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_PointRange : <code>int</code></summary>
        member this.pointRange = Figure_PlotOptions_Area_PointRange(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_PlotOptions_Area_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Area_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_PlotOptions_Area_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_PlotOptions_Area_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_PlotOptions_Area_FindNearestPointBy(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area_Threshold : <code>int</code></summary>
        member this.threshold = Figure_PlotOptions_Area_Threshold(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.area" (parent.GetPath()))
                |> Option.defaultValue "area"

        static member ToJson (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}) =
            let lineWidth = sprintf "%i" o.lineWidth
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let crisp = sprintf "%b" o.crisp
            let showCheckbox = sprintf "%b" o.showCheckbox
            let animation = Figure_PlotOptions_Area_Animation.ToJson o.animation
            let events = Figure_PlotOptions_Area_Events.ToJson o.events
            let marker = Figure_PlotOptions_Area_Marker.ToJson o.marker
            let point = Figure_PlotOptions_Area_Point.ToJson o.point
            let dataLabels = Figure_PlotOptions_Area_DataLabels.ToJson o.dataLabels
            let cropThreshold = sprintf "%i" o.cropThreshold
            let opacity = sprintf "%i" o.opacity
            let pointRange = sprintf "%i" o.pointRange
            let softThreshold = sprintf "%b" o.softThreshold
            let states = Figure_PlotOptions_Area_States.ToJson o.states
            let stickyTracking = sprintf "%b" o.stickyTracking
            let turboThreshold = sprintf "%i" o.turboThreshold
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            let threshold = sprintf "%i" o.threshold
            sprintf "{\\\"lineWidth\\\":%s,\\\"allowPointSelect\\\":%s,\\\"crisp\\\":%s,\\\"showCheckbox\\\":%s,\\\"animation\\\":%s,\\\"events\\\":%s,\\\"marker\\\":%s,\\\"point\\\":%s,\\\"dataLabels\\\":%s,\\\"cropThreshold\\\":%s,\\\"opacity\\\":%s,\\\"pointRange\\\":%s,\\\"softThreshold\\\":%s,\\\"states\\\":%s,\\\"stickyTracking\\\":%s,\\\"turboThreshold\\\":%s,\\\"findNearestPointBy\\\":%s,\\\"threshold\\\":%s}" lineWidth allowPointSelect crisp showCheckbox animation events marker point dataLabels cropThreshold opacity pointRange softThreshold states stickyTracking turboThreshold findNearestPointBy threshold

        member this.Set (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Area.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Spline_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_AllowPointSelect : <code>bool</code></summary>
    type Figure_PlotOptions_Spline_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_AllowPointSelect.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Crisp : <code>bool</code></summary>
    type Figure_PlotOptions_Spline_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Crisp.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_ShowCheckbox : <code>bool</code></summary>
    type Figure_PlotOptions_Spline_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_ShowCheckbox.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Spline_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Spline_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Spline_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Marker_EnabledThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Marker_EnabledThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabledThreshold" (parent.GetPath()))
                |> Option.defaultValue "enabledThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_EnabledThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Spline_Marker_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Marker_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_Radius : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Marker_Radius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radius" (parent.GetPath()))
                |> Option.defaultValue "radius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_Radius.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_Marker_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Spline_Marker_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Spline_Marker_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_Enabled : <code>bool</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Hover_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Hover_Enabled.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Hover_RadiusPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radiusPlus" (parent.GetPath()))
                |> Option.defaultValue "radiusPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Hover_RadiusPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Spline_Marker_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_PlotOptions_Spline_Marker_States_Hover_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
        member this.radiusPlus = Figure_PlotOptions_Spline_Marker_States_Hover_RadiusPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Spline_Marker_States_Hover_LineWidthPlus(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            let animation = Figure_PlotOptions_Spline_Marker_States_Hover_Animation.ToJson o.animation
            let enabled = sprintf "%b" o.enabled
            let radiusPlus = sprintf "%i" o.radiusPlus
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            sprintf "{\\\"animation\\\":%s,\\\"enabled\\\":%s,\\\"radiusPlus\\\":%s,\\\"lineWidthPlus\\\":%s}" animation enabled radiusPlus lineWidthPlus

        member this.Set (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Marker_States_Select_FillColor : <code>string</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Select_FillColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fillColor" (parent.GetPath()))
                |> Option.defaultValue "fillColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Select_FillColor.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Select_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Select_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Select_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Select_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Select_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Select_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
    type Figure_PlotOptions_Spline_Marker_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_Marker_States_Select_FillColor : <code>string</code></summary>
        member this.fillColor = Figure_PlotOptions_Spline_Marker_States_Select_FillColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_States_Select_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Spline_Marker_States_Select_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_States_Select_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Spline_Marker_States_Select_LineWidth(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            let fillColor = sprintf "\\\"%s\\\"" o.fillColor
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            sprintf "{\\\"fillColor\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s}" fillColor lineColor lineWidth

        member this.Set (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
    type Figure_PlotOptions_Spline_Marker_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Spline_Marker_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
        member this.hover = Figure_PlotOptions_Spline_Marker_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
        member this.select = Figure_PlotOptions_Spline_Marker_States_Select(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            let normal = Figure_PlotOptions_Spline_Marker_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Spline_Marker_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Spline_Marker_States_Select.ToJson o.select
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s}" normal hover select

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker_States.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}</code></summary>
    type Figure_PlotOptions_Spline_Marker(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_Marker_EnabledThreshold : <code>int</code></summary>
        member this.enabledThreshold = Figure_PlotOptions_Spline_Marker_EnabledThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Spline_Marker_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Spline_Marker_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_Radius : <code>int</code></summary>
        member this.radius = Figure_PlotOptions_Spline_Marker_Radius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Spline_Marker_States(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}) =
            let enabledThreshold = sprintf "%i" o.enabledThreshold
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            let radius = sprintf "%i" o.radius
            let states = Figure_PlotOptions_Spline_Marker_States.ToJson o.states
            sprintf "{\\\"enabledThreshold\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s,\\\"radius\\\":%s,\\\"states\\\":%s}" enabledThreshold lineColor lineWidth radius states

        member this.Set (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Point_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Spline_Point_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Point_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_Point : <code>{| events: {| dummy:string |} |}</code></summary>
    type Figure_PlotOptions_Spline_Point(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_Point_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Spline_Point_Events(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.point" (parent.GetPath()))
                |> Option.defaultValue "point"

        static member ToJson (o:{| events: {| dummy:string |} |}) =
            let events = Figure_PlotOptions_Spline_Point_Events.ToJson o.events
            sprintf "{\\\"events\\\":%s}" events

        member this.Set (o:{| events: {| dummy:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Point.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_DataLabels_Align : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Align.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Padding : <code>int</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Background : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Background.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Border : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Border.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Color : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Cursor : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Cursor.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_FontFamily : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_FontFamily.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_FontWeight : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_FontWeight.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_FontSize : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_FontSize.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Height : <code>int</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Height.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Padding : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Position : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Position.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_TextAlign : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_TextAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_TextDecoration : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_TextOutline : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_TextOutline.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_TextOverflow : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Top : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Top.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Transition : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Transition.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Width : <code>int</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style_Width.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Background : <code>string</code></summary>
        member this.background = Figure_PlotOptions_Spline_DataLabels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_PlotOptions_Spline_DataLabels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Border : <code>string</code></summary>
        member this.border = Figure_PlotOptions_Spline_DataLabels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Spline_DataLabels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Spline_DataLabels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_PlotOptions_Spline_DataLabels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_PlotOptions_Spline_DataLabels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_PlotOptions_Spline_DataLabels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_PlotOptions_Spline_DataLabels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Height : <code>int</code></summary>
        member this.height = Figure_PlotOptions_Spline_DataLabels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Spline_DataLabels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_PlotOptions_Spline_DataLabels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Position : <code>string</code></summary>
        member this.position = Figure_PlotOptions_Spline_DataLabels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_PlotOptions_Spline_DataLabels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_PlotOptions_Spline_DataLabels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_PlotOptions_Spline_DataLabels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_PlotOptions_Spline_DataLabels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Top : <code>string</code></summary>
        member this.top = Figure_PlotOptions_Spline_DataLabels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_PlotOptions_Spline_DataLabels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_PlotOptions_Spline_DataLabels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style_Width : <code>int</code></summary>
        member this.width = Figure_PlotOptions_Spline_DataLabels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Style.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_DataLabels_VerticalAlign : <code>string</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_VerticalAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_X : <code>int</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_X.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels_Y : <code>int</code></summary>
    type Figure_PlotOptions_Spline_DataLabels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels_Y.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}</code></summary>
    type Figure_PlotOptions_Spline_DataLabels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_DataLabels_Align : <code>string</code></summary>
        member this.align = Figure_PlotOptions_Spline_DataLabels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Padding : <code>int</code></summary>
        member this.padding = Figure_PlotOptions_Spline_DataLabels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_PlotOptions_Spline_DataLabels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_PlotOptions_Spline_DataLabels_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Spline_DataLabels_X(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels_Y : <code>int</code></summary>
        member this.y = Figure_PlotOptions_Spline_DataLabels_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dataLabels" (parent.GetPath()))
                |> Option.defaultValue "dataLabels"

        static member ToJson (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let padding = sprintf "%i" o.padding
            let style = Figure_PlotOptions_Spline_DataLabels_Style.ToJson o.style
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"padding\\\":%s,\\\"style\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align padding style verticalAlign x y

        member this.Set (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_DataLabels.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_CropThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Spline_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_CropThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Spline_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_PointRange : <code>int</code></summary>
    type Figure_PlotOptions_Spline_PointRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointRange" (parent.GetPath()))
                |> Option.defaultValue "pointRange"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_PointRange.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_SoftThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Spline_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_SoftThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Spline_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Spline_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Spline_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Spline_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Spline_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Spline_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Spline_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Spline_States_Hover_Marker(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Hover_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States_Hover_Halo_Size : <code>int</code></summary>
    type Figure_PlotOptions_Spline_States_Hover_Halo_Size(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.size" (parent.GetPath()))
                |> Option.defaultValue "size"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Hover_Halo_Size.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Hover_Halo_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Spline_States_Hover_Halo_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Hover_Halo_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
    type Figure_PlotOptions_Spline_States_Hover_Halo(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Hover_Halo_Size : <code>int</code></summary>
        member this.size = Figure_PlotOptions_Spline_States_Hover_Halo_Size(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States_Hover_Halo_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Spline_States_Hover_Halo_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.halo" (parent.GetPath()))
                |> Option.defaultValue "halo"

        static member ToJson (o:{| size:int; opacity:int |}) =
            let size = sprintf "%i" o.size
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"size\\\":%s,\\\"opacity\\\":%s}" size opacity

        member this.Set (o:{| size:int; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Hover_Halo.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Spline_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Spline_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Spline_States_Hover_LineWidthPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
        member this.marker = Figure_PlotOptions_Spline_States_Hover_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
        member this.halo = Figure_PlotOptions_Spline_States_Hover_Halo(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            let animation = Figure_PlotOptions_Spline_States_Hover_Animation.ToJson o.animation
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            let marker = Figure_PlotOptions_Spline_States_Hover_Marker.ToJson o.marker
            let halo = Figure_PlotOptions_Spline_States_Hover_Halo.ToJson o.halo
            sprintf "{\\\"animation\\\":%s,\\\"lineWidthPlus\\\":%s,\\\"marker\\\":%s,\\\"halo\\\":%s}" animation lineWidthPlus marker halo

        member this.Set (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States_Select_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Spline_States_Select_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Select_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Select_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Spline_States_Select_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Select_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Spline_States_Select_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Select_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
    type Figure_PlotOptions_Spline_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Select_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Spline_States_Select_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| animation: {| duration:int |} |}) =
            let animation = Figure_PlotOptions_Spline_States_Select_Animation.ToJson o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation: {| duration:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States_Inactive_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Spline_States_Inactive_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Inactive_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Spline_States_Inactive_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Inactive_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Spline_States_Inactive_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Inactive_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States_Inactive_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Spline_States_Inactive_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Inactive_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
    type Figure_PlotOptions_Spline_States_Inactive(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Spline_States_Inactive_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States_Inactive_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Spline_States_Inactive_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactive" (parent.GetPath()))
                |> Option.defaultValue "inactive"

        static member ToJson (o:{| animation: {| duration:int |}; opacity:int |}) =
            let animation = Figure_PlotOptions_Spline_States_Inactive_Animation.ToJson o.animation
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"animation\\\":%s,\\\"opacity\\\":%s}" animation opacity

        member this.Set (o:{| animation: {| duration:int |}; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States_Inactive.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Spline_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Spline_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
        member this.hover = Figure_PlotOptions_Spline_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
        member this.select = Figure_PlotOptions_Spline_States_Select(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
        member this.inactive = Figure_PlotOptions_Spline_States_Inactive(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            let normal = Figure_PlotOptions_Spline_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Spline_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Spline_States_Select.ToJson o.select
            let inactive = Figure_PlotOptions_Spline_States_Inactive.ToJson o.inactive
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s,\\\"inactive\\\":%s}" normal hover select inactive

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_States.ToJson o)


    ///<summary>Figure_PlotOptions_Spline_StickyTracking : <code>bool</code></summary>
    type Figure_PlotOptions_Spline_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_StickyTracking.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_TurboThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Spline_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_TurboThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Spline_FindNearestPointBy : <code>string</code></summary>
    type Figure_PlotOptions_Spline_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline_FindNearestPointBy.ToJson o)

    ///<summary>Figure_PlotOptions_Spline : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}</code></summary>
    type Figure_PlotOptions_Spline(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Spline_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Spline_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_PlotOptions_Spline_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_PlotOptions_Spline_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_PlotOptions_Spline_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Spline_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Spline_Events(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}</code></summary>
        member this.marker = Figure_PlotOptions_Spline_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Point : <code>{| events: {| dummy:string |} |}</code></summary>
        member this.point = Figure_PlotOptions_Spline_Point(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}</code></summary>
        member this.dataLabels = Figure_PlotOptions_Spline_DataLabels(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_PlotOptions_Spline_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Spline_Opacity(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_PointRange : <code>int</code></summary>
        member this.pointRange = Figure_PlotOptions_Spline_PointRange(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_PlotOptions_Spline_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Spline_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_PlotOptions_Spline_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_PlotOptions_Spline_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_PlotOptions_Spline_FindNearestPointBy(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.spline" (parent.GetPath()))
                |> Option.defaultValue "spline"

        static member ToJson (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}) =
            let lineWidth = sprintf "%i" o.lineWidth
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let crisp = sprintf "%b" o.crisp
            let showCheckbox = sprintf "%b" o.showCheckbox
            let animation = Figure_PlotOptions_Spline_Animation.ToJson o.animation
            let events = Figure_PlotOptions_Spline_Events.ToJson o.events
            let marker = Figure_PlotOptions_Spline_Marker.ToJson o.marker
            let point = Figure_PlotOptions_Spline_Point.ToJson o.point
            let dataLabels = Figure_PlotOptions_Spline_DataLabels.ToJson o.dataLabels
            let cropThreshold = sprintf "%i" o.cropThreshold
            let opacity = sprintf "%i" o.opacity
            let pointRange = sprintf "%i" o.pointRange
            let softThreshold = sprintf "%b" o.softThreshold
            let states = Figure_PlotOptions_Spline_States.ToJson o.states
            let stickyTracking = sprintf "%b" o.stickyTracking
            let turboThreshold = sprintf "%i" o.turboThreshold
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            sprintf "{\\\"lineWidth\\\":%s,\\\"allowPointSelect\\\":%s,\\\"crisp\\\":%s,\\\"showCheckbox\\\":%s,\\\"animation\\\":%s,\\\"events\\\":%s,\\\"marker\\\":%s,\\\"point\\\":%s,\\\"dataLabels\\\":%s,\\\"cropThreshold\\\":%s,\\\"opacity\\\":%s,\\\"pointRange\\\":%s,\\\"softThreshold\\\":%s,\\\"states\\\":%s,\\\"stickyTracking\\\":%s,\\\"turboThreshold\\\":%s,\\\"findNearestPointBy\\\":%s}" lineWidth allowPointSelect crisp showCheckbox animation events marker point dataLabels cropThreshold opacity pointRange softThreshold states stickyTracking turboThreshold findNearestPointBy

        member this.Set (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Spline.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_AllowPointSelect : <code>bool</code></summary>
    type Figure_PlotOptions_Areaspline_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_AllowPointSelect.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Crisp : <code>bool</code></summary>
    type Figure_PlotOptions_Areaspline_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Crisp.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_ShowCheckbox : <code>bool</code></summary>
    type Figure_PlotOptions_Areaspline_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_ShowCheckbox.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Areaspline_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Areaspline_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Marker_EnabledThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_EnabledThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabledThreshold" (parent.GetPath()))
                |> Option.defaultValue "enabledThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_EnabledThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_Radius : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_Radius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radius" (parent.GetPath()))
                |> Option.defaultValue "radius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_Radius.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Areaspline_Marker_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_Enabled : <code>bool</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Hover_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Hover_Enabled.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Hover_RadiusPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radiusPlus" (parent.GetPath()))
                |> Option.defaultValue "radiusPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Hover_RadiusPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_PlotOptions_Areaspline_Marker_States_Hover_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
        member this.radiusPlus = Figure_PlotOptions_Areaspline_Marker_States_Hover_RadiusPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Areaspline_Marker_States_Hover_LineWidthPlus(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            let animation = Figure_PlotOptions_Areaspline_Marker_States_Hover_Animation.ToJson o.animation
            let enabled = sprintf "%b" o.enabled
            let radiusPlus = sprintf "%i" o.radiusPlus
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            sprintf "{\\\"animation\\\":%s,\\\"enabled\\\":%s,\\\"radiusPlus\\\":%s,\\\"lineWidthPlus\\\":%s}" animation enabled radiusPlus lineWidthPlus

        member this.Set (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Select_FillColor : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Select_FillColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fillColor" (parent.GetPath()))
                |> Option.defaultValue "fillColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Select_FillColor.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Select_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Select_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Select_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Select_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Select_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Select_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Select_FillColor : <code>string</code></summary>
        member this.fillColor = Figure_PlotOptions_Areaspline_Marker_States_Select_FillColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Select_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Areaspline_Marker_States_Select_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Select_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Areaspline_Marker_States_Select_LineWidth(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            let fillColor = sprintf "\\\"%s\\\"" o.fillColor
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            sprintf "{\\\"fillColor\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s}" fillColor lineColor lineWidth

        member this.Set (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
    type Figure_PlotOptions_Areaspline_Marker_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Areaspline_Marker_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
        member this.hover = Figure_PlotOptions_Areaspline_Marker_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
        member this.select = Figure_PlotOptions_Areaspline_Marker_States_Select(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            let normal = Figure_PlotOptions_Areaspline_Marker_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Areaspline_Marker_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Areaspline_Marker_States_Select.ToJson o.select
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s}" normal hover select

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker_States.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}</code></summary>
    type Figure_PlotOptions_Areaspline_Marker(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_Marker_EnabledThreshold : <code>int</code></summary>
        member this.enabledThreshold = Figure_PlotOptions_Areaspline_Marker_EnabledThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Areaspline_Marker_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Areaspline_Marker_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_Radius : <code>int</code></summary>
        member this.radius = Figure_PlotOptions_Areaspline_Marker_Radius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Areaspline_Marker_States(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}) =
            let enabledThreshold = sprintf "%i" o.enabledThreshold
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            let radius = sprintf "%i" o.radius
            let states = Figure_PlotOptions_Areaspline_Marker_States.ToJson o.states
            sprintf "{\\\"enabledThreshold\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s,\\\"radius\\\":%s,\\\"states\\\":%s}" enabledThreshold lineColor lineWidth radius states

        member this.Set (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Point_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Areaspline_Point_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Point_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_Point : <code>{| events: {| dummy:string |} |}</code></summary>
    type Figure_PlotOptions_Areaspline_Point(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_Point_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Areaspline_Point_Events(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.point" (parent.GetPath()))
                |> Option.defaultValue "point"

        static member ToJson (o:{| events: {| dummy:string |} |}) =
            let events = Figure_PlotOptions_Areaspline_Point_Events.ToJson o.events
            sprintf "{\\\"events\\\":%s}" events

        member this.Set (o:{| events: {| dummy:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Point.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Align : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Align.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Padding : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Background : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Background.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Border : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Border.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Color : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Cursor : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Cursor.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_FontFamily : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_FontFamily.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_FontWeight : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_FontWeight.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_FontSize : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_FontSize.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Height : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Height.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Padding : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Position : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Position.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_TextAlign : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_TextAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_TextDecoration : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_TextOutline : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_TextOutline.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_TextOverflow : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Top : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Top.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Transition : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Transition.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Width : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style_Width.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Background : <code>string</code></summary>
        member this.background = Figure_PlotOptions_Areaspline_DataLabels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_PlotOptions_Areaspline_DataLabels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Border : <code>string</code></summary>
        member this.border = Figure_PlotOptions_Areaspline_DataLabels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Areaspline_DataLabels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Areaspline_DataLabels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_PlotOptions_Areaspline_DataLabels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_PlotOptions_Areaspline_DataLabels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_PlotOptions_Areaspline_DataLabels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_PlotOptions_Areaspline_DataLabels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Height : <code>int</code></summary>
        member this.height = Figure_PlotOptions_Areaspline_DataLabels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Areaspline_DataLabels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_PlotOptions_Areaspline_DataLabels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Position : <code>string</code></summary>
        member this.position = Figure_PlotOptions_Areaspline_DataLabels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_PlotOptions_Areaspline_DataLabels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_PlotOptions_Areaspline_DataLabels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_PlotOptions_Areaspline_DataLabels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_PlotOptions_Areaspline_DataLabels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Top : <code>string</code></summary>
        member this.top = Figure_PlotOptions_Areaspline_DataLabels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_PlotOptions_Areaspline_DataLabels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_PlotOptions_Areaspline_DataLabels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style_Width : <code>int</code></summary>
        member this.width = Figure_PlotOptions_Areaspline_DataLabels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Style.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_VerticalAlign : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_VerticalAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_X : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_X.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Y : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels_Y.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_DataLabels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Align : <code>string</code></summary>
        member this.align = Figure_PlotOptions_Areaspline_DataLabels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Padding : <code>int</code></summary>
        member this.padding = Figure_PlotOptions_Areaspline_DataLabels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_PlotOptions_Areaspline_DataLabels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_PlotOptions_Areaspline_DataLabels_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Areaspline_DataLabels_X(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels_Y : <code>int</code></summary>
        member this.y = Figure_PlotOptions_Areaspline_DataLabels_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dataLabels" (parent.GetPath()))
                |> Option.defaultValue "dataLabels"

        static member ToJson (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let padding = sprintf "%i" o.padding
            let style = Figure_PlotOptions_Areaspline_DataLabels_Style.ToJson o.style
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"padding\\\":%s,\\\"style\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align padding style verticalAlign x y

        member this.Set (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_DataLabels.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_CropThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_CropThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_PointRange : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_PointRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointRange" (parent.GetPath()))
                |> Option.defaultValue "pointRange"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_PointRange.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_SoftThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Areaspline_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_SoftThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Areaspline_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Areaspline_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Areaspline_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Hover_Marker(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Hover_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Halo_Size : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_States_Hover_Halo_Size(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.size" (parent.GetPath()))
                |> Option.defaultValue "size"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Hover_Halo_Size.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Halo_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_States_Hover_Halo_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Hover_Halo_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Hover_Halo(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Halo_Size : <code>int</code></summary>
        member this.size = Figure_PlotOptions_Areaspline_States_Hover_Halo_Size(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Halo_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Areaspline_States_Hover_Halo_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.halo" (parent.GetPath()))
                |> Option.defaultValue "halo"

        static member ToJson (o:{| size:int; opacity:int |}) =
            let size = sprintf "%i" o.size
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"size\\\":%s,\\\"opacity\\\":%s}" size opacity

        member this.Set (o:{| size:int; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Hover_Halo.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Areaspline_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Areaspline_States_Hover_LineWidthPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
        member this.marker = Figure_PlotOptions_Areaspline_States_Hover_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
        member this.halo = Figure_PlotOptions_Areaspline_States_Hover_Halo(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            let animation = Figure_PlotOptions_Areaspline_States_Hover_Animation.ToJson o.animation
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            let marker = Figure_PlotOptions_Areaspline_States_Hover_Marker.ToJson o.marker
            let halo = Figure_PlotOptions_Areaspline_States_Hover_Halo.ToJson o.halo
            sprintf "{\\\"animation\\\":%s,\\\"lineWidthPlus\\\":%s,\\\"marker\\\":%s,\\\"halo\\\":%s}" animation lineWidthPlus marker halo

        member this.Set (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States_Select_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_States_Select_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Select_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Select_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Select_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Select_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Areaspline_States_Select_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Select_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Select_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Areaspline_States_Select_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| animation: {| duration:int |} |}) =
            let animation = Figure_PlotOptions_Areaspline_States_Select_Animation.ToJson o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation: {| duration:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States_Inactive_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_States_Inactive_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Inactive_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Inactive_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Inactive_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Areaspline_States_Inactive_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Inactive_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States_Inactive_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_States_Inactive_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Inactive_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
    type Figure_PlotOptions_Areaspline_States_Inactive(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Areaspline_States_Inactive_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States_Inactive_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Areaspline_States_Inactive_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactive" (parent.GetPath()))
                |> Option.defaultValue "inactive"

        static member ToJson (o:{| animation: {| duration:int |}; opacity:int |}) =
            let animation = Figure_PlotOptions_Areaspline_States_Inactive_Animation.ToJson o.animation
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"animation\\\":%s,\\\"opacity\\\":%s}" animation opacity

        member this.Set (o:{| animation: {| duration:int |}; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States_Inactive.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Areaspline_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Areaspline_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
        member this.hover = Figure_PlotOptions_Areaspline_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
        member this.select = Figure_PlotOptions_Areaspline_States_Select(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
        member this.inactive = Figure_PlotOptions_Areaspline_States_Inactive(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            let normal = Figure_PlotOptions_Areaspline_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Areaspline_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Areaspline_States_Select.ToJson o.select
            let inactive = Figure_PlotOptions_Areaspline_States_Inactive.ToJson o.inactive
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s,\\\"inactive\\\":%s}" normal hover select inactive

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_States.ToJson o)


    ///<summary>Figure_PlotOptions_Areaspline_StickyTracking : <code>bool</code></summary>
    type Figure_PlotOptions_Areaspline_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_StickyTracking.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_TurboThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_TurboThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_FindNearestPointBy : <code>string</code></summary>
    type Figure_PlotOptions_Areaspline_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_FindNearestPointBy.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline_Threshold : <code>int</code></summary>
    type Figure_PlotOptions_Areaspline_Threshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.threshold" (parent.GetPath()))
                |> Option.defaultValue "threshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline_Threshold.ToJson o)

    ///<summary>Figure_PlotOptions_Areaspline : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}</code></summary>
    type Figure_PlotOptions_Areaspline(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Areaspline_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Areaspline_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_PlotOptions_Areaspline_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_PlotOptions_Areaspline_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_PlotOptions_Areaspline_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Areaspline_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Areaspline_Events(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}</code></summary>
        member this.marker = Figure_PlotOptions_Areaspline_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Point : <code>{| events: {| dummy:string |} |}</code></summary>
        member this.point = Figure_PlotOptions_Areaspline_Point(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}</code></summary>
        member this.dataLabels = Figure_PlotOptions_Areaspline_DataLabels(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_PlotOptions_Areaspline_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Areaspline_Opacity(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_PointRange : <code>int</code></summary>
        member this.pointRange = Figure_PlotOptions_Areaspline_PointRange(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_PlotOptions_Areaspline_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Areaspline_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_PlotOptions_Areaspline_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_PlotOptions_Areaspline_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_PlotOptions_Areaspline_FindNearestPointBy(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline_Threshold : <code>int</code></summary>
        member this.threshold = Figure_PlotOptions_Areaspline_Threshold(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.areaspline" (parent.GetPath()))
                |> Option.defaultValue "areaspline"

        static member ToJson (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}) =
            let lineWidth = sprintf "%i" o.lineWidth
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let crisp = sprintf "%b" o.crisp
            let showCheckbox = sprintf "%b" o.showCheckbox
            let animation = Figure_PlotOptions_Areaspline_Animation.ToJson o.animation
            let events = Figure_PlotOptions_Areaspline_Events.ToJson o.events
            let marker = Figure_PlotOptions_Areaspline_Marker.ToJson o.marker
            let point = Figure_PlotOptions_Areaspline_Point.ToJson o.point
            let dataLabels = Figure_PlotOptions_Areaspline_DataLabels.ToJson o.dataLabels
            let cropThreshold = sprintf "%i" o.cropThreshold
            let opacity = sprintf "%i" o.opacity
            let pointRange = sprintf "%i" o.pointRange
            let softThreshold = sprintf "%b" o.softThreshold
            let states = Figure_PlotOptions_Areaspline_States.ToJson o.states
            let stickyTracking = sprintf "%b" o.stickyTracking
            let turboThreshold = sprintf "%i" o.turboThreshold
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            let threshold = sprintf "%i" o.threshold
            sprintf "{\\\"lineWidth\\\":%s,\\\"allowPointSelect\\\":%s,\\\"crisp\\\":%s,\\\"showCheckbox\\\":%s,\\\"animation\\\":%s,\\\"events\\\":%s,\\\"marker\\\":%s,\\\"point\\\":%s,\\\"dataLabels\\\":%s,\\\"cropThreshold\\\":%s,\\\"opacity\\\":%s,\\\"pointRange\\\":%s,\\\"softThreshold\\\":%s,\\\"states\\\":%s,\\\"stickyTracking\\\":%s,\\\"turboThreshold\\\":%s,\\\"findNearestPointBy\\\":%s,\\\"threshold\\\":%s}" lineWidth allowPointSelect crisp showCheckbox animation events marker point dataLabels cropThreshold opacity pointRange softThreshold states stickyTracking turboThreshold findNearestPointBy threshold

        member this.Set (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Areaspline.ToJson o)


    ///<summary>Figure_PlotOptions_Column_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Column_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Column_AllowPointSelect : <code>bool</code></summary>
    type Figure_PlotOptions_Column_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_AllowPointSelect.ToJson o)

    ///<summary>Figure_PlotOptions_Column_Crisp : <code>bool</code></summary>
    type Figure_PlotOptions_Column_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Crisp.ToJson o)

    ///<summary>Figure_PlotOptions_Column_ShowCheckbox : <code>bool</code></summary>
    type Figure_PlotOptions_Column_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_ShowCheckbox.ToJson o)

    ///<summary>Figure_PlotOptions_Column_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Column_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Column_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Column_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Column_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Column_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Column_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Column_Marker : <code>string</code></summary>
    type Figure_PlotOptions_Column_Marker(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Marker.ToJson o)

    ///<summary>Figure_PlotOptions_Column_Point_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Column_Point_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Point_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Column_Point : <code>{| events: {| dummy:string |} |}</code></summary>
    type Figure_PlotOptions_Column_Point(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_Point_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Column_Point_Events(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.point" (parent.GetPath()))
                |> Option.defaultValue "point"

        static member ToJson (o:{| events: {| dummy:string |} |}) =
            let events = Figure_PlotOptions_Column_Point_Events.ToJson o.events
            sprintf "{\\\"events\\\":%s}" events

        member this.Set (o:{| events: {| dummy:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Point.ToJson o)


    ///<summary>Figure_PlotOptions_Column_DataLabels_Padding : <code>int</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Background : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Background.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Border : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Border.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Color : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Cursor : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Cursor.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_FontFamily : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_FontFamily.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_FontWeight : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_FontWeight.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_FontSize : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_FontSize.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Height : <code>int</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Height.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Padding : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Position : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Position.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_TextAlign : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_TextAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_TextDecoration : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_TextOutline : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_TextOutline.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_TextOverflow : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Top : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Top.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Transition : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Transition.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Width : <code>int</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style_Width.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_PlotOptions_Column_DataLabels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Background : <code>string</code></summary>
        member this.background = Figure_PlotOptions_Column_DataLabels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_PlotOptions_Column_DataLabels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Border : <code>string</code></summary>
        member this.border = Figure_PlotOptions_Column_DataLabels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Column_DataLabels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Column_DataLabels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_PlotOptions_Column_DataLabels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_PlotOptions_Column_DataLabels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_PlotOptions_Column_DataLabels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_PlotOptions_Column_DataLabels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Height : <code>int</code></summary>
        member this.height = Figure_PlotOptions_Column_DataLabels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Column_DataLabels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_PlotOptions_Column_DataLabels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Position : <code>string</code></summary>
        member this.position = Figure_PlotOptions_Column_DataLabels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_PlotOptions_Column_DataLabels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_PlotOptions_Column_DataLabels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_PlotOptions_Column_DataLabels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_PlotOptions_Column_DataLabels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Top : <code>string</code></summary>
        member this.top = Figure_PlotOptions_Column_DataLabels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_PlotOptions_Column_DataLabels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_PlotOptions_Column_DataLabels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style_Width : <code>int</code></summary>
        member this.width = Figure_PlotOptions_Column_DataLabels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_Style.ToJson o)


    ///<summary>Figure_PlotOptions_Column_DataLabels_X : <code>int</code></summary>
    type Figure_PlotOptions_Column_DataLabels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels_X.ToJson o)

    ///<summary>Figure_PlotOptions_Column_DataLabels : <code>{| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}</code></summary>
    type Figure_PlotOptions_Column_DataLabels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_DataLabels_Padding : <code>int</code></summary>
        member this.padding = Figure_PlotOptions_Column_DataLabels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_PlotOptions_Column_DataLabels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Column_DataLabels_X(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dataLabels" (parent.GetPath()))
                |> Option.defaultValue "dataLabels"

        static member ToJson (o:{| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}) =
            let padding = sprintf "%i" o.padding
            let style = Figure_PlotOptions_Column_DataLabels_Style.ToJson o.style
            let x = sprintf "%i" o.x
            sprintf "{\\\"padding\\\":%s,\\\"style\\\":%s,\\\"x\\\":%s}" padding style x

        member this.Set (o:{| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_DataLabels.ToJson o)


    ///<summary>Figure_PlotOptions_Column_CropThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Column_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_CropThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Column_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Column_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Column_PointRange : <code>string</code></summary>
    type Figure_PlotOptions_Column_PointRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointRange" (parent.GetPath()))
                |> Option.defaultValue "pointRange"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_PointRange.ToJson o)

    ///<summary>Figure_PlotOptions_Column_SoftThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Column_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_SoftThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Column_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Column_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Column_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Column_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Column_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Column_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Column_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Column_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Column_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Column_States_Hover_Marker(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Hover_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Column_States_Hover_Halo : <code>bool</code></summary>
    type Figure_PlotOptions_Column_States_Hover_Halo(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.halo" (parent.GetPath()))
                |> Option.defaultValue "halo"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Hover_Halo.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Hover_Brightness : <code>int</code></summary>
    type Figure_PlotOptions_Column_States_Hover_Brightness(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.brightness" (parent.GetPath()))
                |> Option.defaultValue "brightness"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Hover_Brightness.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}</code></summary>
    type Figure_PlotOptions_Column_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Column_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Column_States_Hover_LineWidthPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
        member this.marker = Figure_PlotOptions_Column_States_Hover_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Hover_Halo : <code>bool</code></summary>
        member this.halo = Figure_PlotOptions_Column_States_Hover_Halo(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Hover_Brightness : <code>int</code></summary>
        member this.brightness = Figure_PlotOptions_Column_States_Hover_Brightness(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}) =
            let animation = Figure_PlotOptions_Column_States_Hover_Animation.ToJson o.animation
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            let marker = Figure_PlotOptions_Column_States_Hover_Marker.ToJson o.marker
            let halo = sprintf "%b" o.halo
            let brightness = sprintf "%i" o.brightness
            sprintf "{\\\"animation\\\":%s,\\\"lineWidthPlus\\\":%s,\\\"marker\\\":%s,\\\"halo\\\":%s,\\\"brightness\\\":%s}" animation lineWidthPlus marker halo brightness

        member this.Set (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Column_States_Select_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Column_States_Select_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Select_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Select_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Column_States_Select_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_States_Select_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Column_States_Select_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Select_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Column_States_Select_Color : <code>string</code></summary>
    type Figure_PlotOptions_Column_States_Select_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Select_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Select_BorderColor : <code>string</code></summary>
    type Figure_PlotOptions_Column_States_Select_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Select_BorderColor.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Select : <code>{| animation: {| duration:int |}; color:string; borderColor:string |}</code></summary>
    type Figure_PlotOptions_Column_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_States_Select_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Column_States_Select_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Select_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Column_States_Select_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Select_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_PlotOptions_Column_States_Select_BorderColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| animation: {| duration:int |}; color:string; borderColor:string |}) =
            let animation = Figure_PlotOptions_Column_States_Select_Animation.ToJson o.animation
            let color = sprintf "\\\"%s\\\"" o.color
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            sprintf "{\\\"animation\\\":%s,\\\"color\\\":%s,\\\"borderColor\\\":%s}" animation color borderColor

        member this.Set (o:{| animation: {| duration:int |}; color:string; borderColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Column_States_Inactive_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Column_States_Inactive_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Inactive_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Column_States_Inactive_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_States_Inactive_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Column_States_Inactive_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Inactive_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Column_States_Inactive_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Column_States_Inactive_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Inactive_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Column_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
    type Figure_PlotOptions_Column_States_Inactive(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Column_States_Inactive_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Inactive_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Column_States_Inactive_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactive" (parent.GetPath()))
                |> Option.defaultValue "inactive"

        static member ToJson (o:{| animation: {| duration:int |}; opacity:int |}) =
            let animation = Figure_PlotOptions_Column_States_Inactive_Animation.ToJson o.animation
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"animation\\\":%s,\\\"opacity\\\":%s}" animation opacity

        member this.Set (o:{| animation: {| duration:int |}; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States_Inactive.ToJson o)


    ///<summary>Figure_PlotOptions_Column_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Column_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Column_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}</code></summary>
        member this.hover = Figure_PlotOptions_Column_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Select : <code>{| animation: {| duration:int |}; color:string; borderColor:string |}</code></summary>
        member this.select = Figure_PlotOptions_Column_States_Select(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
        member this.inactive = Figure_PlotOptions_Column_States_Inactive(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            let normal = Figure_PlotOptions_Column_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Column_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Column_States_Select.ToJson o.select
            let inactive = Figure_PlotOptions_Column_States_Inactive.ToJson o.inactive
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s,\\\"inactive\\\":%s}" normal hover select inactive

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_States.ToJson o)


    ///<summary>Figure_PlotOptions_Column_StickyTracking : <code>bool</code></summary>
    type Figure_PlotOptions_Column_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_StickyTracking.ToJson o)

    ///<summary>Figure_PlotOptions_Column_TurboThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Column_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_TurboThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Column_FindNearestPointBy : <code>string</code></summary>
    type Figure_PlotOptions_Column_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_FindNearestPointBy.ToJson o)

    ///<summary>Figure_PlotOptions_Column_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Column_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Column_CenterInCategory : <code>bool</code></summary>
    type Figure_PlotOptions_Column_CenterInCategory(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.centerInCategory" (parent.GetPath()))
                |> Option.defaultValue "centerInCategory"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_CenterInCategory.ToJson o)

    ///<summary>Figure_PlotOptions_Column_GroupPadding : <code>int</code></summary>
    type Figure_PlotOptions_Column_GroupPadding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.groupPadding" (parent.GetPath()))
                |> Option.defaultValue "groupPadding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_GroupPadding.ToJson o)

    ///<summary>Figure_PlotOptions_Column_PointPadding : <code>int</code></summary>
    type Figure_PlotOptions_Column_PointPadding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointPadding" (parent.GetPath()))
                |> Option.defaultValue "pointPadding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_PointPadding.ToJson o)

    ///<summary>Figure_PlotOptions_Column_MinPointLength : <code>int</code></summary>
    type Figure_PlotOptions_Column_MinPointLength(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minPointLength" (parent.GetPath()))
                |> Option.defaultValue "minPointLength"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_MinPointLength.ToJson o)

    ///<summary>Figure_PlotOptions_Column_StartFromThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Column_StartFromThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.startFromThreshold" (parent.GetPath()))
                |> Option.defaultValue "startFromThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_StartFromThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Column_Threshold : <code>int</code></summary>
    type Figure_PlotOptions_Column_Threshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.threshold" (parent.GetPath()))
                |> Option.defaultValue "threshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_Threshold.ToJson o)

    ///<summary>Figure_PlotOptions_Column_BorderColor : <code>string</code></summary>
    type Figure_PlotOptions_Column_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column_BorderColor.ToJson o)

    ///<summary>Figure_PlotOptions_Column : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}</code></summary>
    type Figure_PlotOptions_Column(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Column_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Column_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_PlotOptions_Column_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_PlotOptions_Column_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_PlotOptions_Column_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Column_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Column_Events(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_Marker : <code>string</code></summary>
        member this.marker = Figure_PlotOptions_Column_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_Point : <code>{| events: {| dummy:string |} |}</code></summary>
        member this.point = Figure_PlotOptions_Column_Point(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_DataLabels : <code>{| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}</code></summary>
        member this.dataLabels = Figure_PlotOptions_Column_DataLabels(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_PlotOptions_Column_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Column_Opacity(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_PointRange : <code>string</code></summary>
        member this.pointRange = Figure_PlotOptions_Column_PointRange(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_PlotOptions_Column_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Column_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_PlotOptions_Column_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_PlotOptions_Column_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_PlotOptions_Column_FindNearestPointBy(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Column_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_CenterInCategory : <code>bool</code></summary>
        member this.centerInCategory = Figure_PlotOptions_Column_CenterInCategory(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_GroupPadding : <code>int</code></summary>
        member this.groupPadding = Figure_PlotOptions_Column_GroupPadding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_PointPadding : <code>int</code></summary>
        member this.pointPadding = Figure_PlotOptions_Column_PointPadding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_MinPointLength : <code>int</code></summary>
        member this.minPointLength = Figure_PlotOptions_Column_MinPointLength(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_StartFromThreshold : <code>bool</code></summary>
        member this.startFromThreshold = Figure_PlotOptions_Column_StartFromThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_Threshold : <code>int</code></summary>
        member this.threshold = Figure_PlotOptions_Column_Threshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_PlotOptions_Column_BorderColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.column" (parent.GetPath()))
                |> Option.defaultValue "column"

        static member ToJson (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}) =
            let lineWidth = sprintf "%i" o.lineWidth
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let crisp = sprintf "%b" o.crisp
            let showCheckbox = sprintf "%b" o.showCheckbox
            let animation = Figure_PlotOptions_Column_Animation.ToJson o.animation
            let events = Figure_PlotOptions_Column_Events.ToJson o.events
            let marker = sprintf "%s" o.marker
            let point = Figure_PlotOptions_Column_Point.ToJson o.point
            let dataLabels = Figure_PlotOptions_Column_DataLabels.ToJson o.dataLabels
            let cropThreshold = sprintf "%i" o.cropThreshold
            let opacity = sprintf "%i" o.opacity
            let pointRange = sprintf "%s" o.pointRange
            let softThreshold = sprintf "%b" o.softThreshold
            let states = Figure_PlotOptions_Column_States.ToJson o.states
            let stickyTracking = sprintf "%b" o.stickyTracking
            let turboThreshold = sprintf "%i" o.turboThreshold
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            let borderRadius = sprintf "%i" o.borderRadius
            let centerInCategory = sprintf "%b" o.centerInCategory
            let groupPadding = sprintf "%i" o.groupPadding
            let pointPadding = sprintf "%i" o.pointPadding
            let minPointLength = sprintf "%i" o.minPointLength
            let startFromThreshold = sprintf "%b" o.startFromThreshold
            let threshold = sprintf "%i" o.threshold
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            sprintf "{\\\"lineWidth\\\":%s,\\\"allowPointSelect\\\":%s,\\\"crisp\\\":%s,\\\"showCheckbox\\\":%s,\\\"animation\\\":%s,\\\"events\\\":%s,\\\"marker\\\":%s,\\\"point\\\":%s,\\\"dataLabels\\\":%s,\\\"cropThreshold\\\":%s,\\\"opacity\\\":%s,\\\"pointRange\\\":%s,\\\"softThreshold\\\":%s,\\\"states\\\":%s,\\\"stickyTracking\\\":%s,\\\"turboThreshold\\\":%s,\\\"findNearestPointBy\\\":%s,\\\"borderRadius\\\":%s,\\\"centerInCategory\\\":%s,\\\"groupPadding\\\":%s,\\\"pointPadding\\\":%s,\\\"minPointLength\\\":%s,\\\"startFromThreshold\\\":%s,\\\"threshold\\\":%s,\\\"borderColor\\\":%s}" lineWidth allowPointSelect crisp showCheckbox animation events marker point dataLabels cropThreshold opacity pointRange softThreshold states stickyTracking turboThreshold findNearestPointBy borderRadius centerInCategory groupPadding pointPadding minPointLength startFromThreshold threshold borderColor

        member this.Set (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Column.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Bar_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_AllowPointSelect : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_AllowPointSelect.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_Crisp : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Crisp.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_ShowCheckbox : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_ShowCheckbox.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Bar_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Bar_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Bar_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Bar_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_Marker : <code>string</code></summary>
    type Figure_PlotOptions_Bar_Marker(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Marker.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_Point_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Bar_Point_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Point_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_Point : <code>{| events: {| dummy:string |} |}</code></summary>
    type Figure_PlotOptions_Bar_Point(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_Point_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Bar_Point_Events(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.point" (parent.GetPath()))
                |> Option.defaultValue "point"

        static member ToJson (o:{| events: {| dummy:string |} |}) =
            let events = Figure_PlotOptions_Bar_Point_Events.ToJson o.events
            sprintf "{\\\"events\\\":%s}" events

        member this.Set (o:{| events: {| dummy:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Point.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_DataLabels_Padding : <code>int</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Background : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Background.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Border : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Border.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Color : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Cursor : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Cursor.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_FontFamily : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_FontFamily.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_FontWeight : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_FontWeight.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_FontSize : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_FontSize.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Height : <code>int</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Height.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Padding : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Position : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Position.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_TextAlign : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_TextAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_TextDecoration : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_TextOutline : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_TextOutline.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_TextOverflow : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Top : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Top.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Transition : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Transition.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Width : <code>int</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style_Width.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Background : <code>string</code></summary>
        member this.background = Figure_PlotOptions_Bar_DataLabels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_PlotOptions_Bar_DataLabels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Border : <code>string</code></summary>
        member this.border = Figure_PlotOptions_Bar_DataLabels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Bar_DataLabels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Bar_DataLabels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_PlotOptions_Bar_DataLabels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_PlotOptions_Bar_DataLabels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_PlotOptions_Bar_DataLabels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_PlotOptions_Bar_DataLabels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Height : <code>int</code></summary>
        member this.height = Figure_PlotOptions_Bar_DataLabels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Bar_DataLabels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_PlotOptions_Bar_DataLabels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Position : <code>string</code></summary>
        member this.position = Figure_PlotOptions_Bar_DataLabels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_PlotOptions_Bar_DataLabels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_PlotOptions_Bar_DataLabels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_PlotOptions_Bar_DataLabels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_PlotOptions_Bar_DataLabels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Top : <code>string</code></summary>
        member this.top = Figure_PlotOptions_Bar_DataLabels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_PlotOptions_Bar_DataLabels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_PlotOptions_Bar_DataLabels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style_Width : <code>int</code></summary>
        member this.width = Figure_PlotOptions_Bar_DataLabels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_Style.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_DataLabels_X : <code>int</code></summary>
    type Figure_PlotOptions_Bar_DataLabels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels_X.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_DataLabels : <code>{| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}</code></summary>
    type Figure_PlotOptions_Bar_DataLabels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_DataLabels_Padding : <code>int</code></summary>
        member this.padding = Figure_PlotOptions_Bar_DataLabels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_PlotOptions_Bar_DataLabels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Bar_DataLabels_X(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dataLabels" (parent.GetPath()))
                |> Option.defaultValue "dataLabels"

        static member ToJson (o:{| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}) =
            let padding = sprintf "%i" o.padding
            let style = Figure_PlotOptions_Bar_DataLabels_Style.ToJson o.style
            let x = sprintf "%i" o.x
            sprintf "{\\\"padding\\\":%s,\\\"style\\\":%s,\\\"x\\\":%s}" padding style x

        member this.Set (o:{| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_DataLabels.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_CropThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Bar_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_CropThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Bar_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_PointRange : <code>string</code></summary>
    type Figure_PlotOptions_Bar_PointRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointRange" (parent.GetPath()))
                |> Option.defaultValue "pointRange"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_PointRange.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_SoftThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_SoftThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Bar_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Bar_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Bar_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Bar_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Bar_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Bar_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Bar_States_Hover_Marker(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Hover_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_States_Hover_Halo : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_States_Hover_Halo(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.halo" (parent.GetPath()))
                |> Option.defaultValue "halo"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Hover_Halo.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Hover_Brightness : <code>int</code></summary>
    type Figure_PlotOptions_Bar_States_Hover_Brightness(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.brightness" (parent.GetPath()))
                |> Option.defaultValue "brightness"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Hover_Brightness.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}</code></summary>
    type Figure_PlotOptions_Bar_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Bar_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Bar_States_Hover_LineWidthPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
        member this.marker = Figure_PlotOptions_Bar_States_Hover_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Hover_Halo : <code>bool</code></summary>
        member this.halo = Figure_PlotOptions_Bar_States_Hover_Halo(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Hover_Brightness : <code>int</code></summary>
        member this.brightness = Figure_PlotOptions_Bar_States_Hover_Brightness(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}) =
            let animation = Figure_PlotOptions_Bar_States_Hover_Animation.ToJson o.animation
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            let marker = Figure_PlotOptions_Bar_States_Hover_Marker.ToJson o.marker
            let halo = sprintf "%b" o.halo
            let brightness = sprintf "%i" o.brightness
            sprintf "{\\\"animation\\\":%s,\\\"lineWidthPlus\\\":%s,\\\"marker\\\":%s,\\\"halo\\\":%s,\\\"brightness\\\":%s}" animation lineWidthPlus marker halo brightness

        member this.Set (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_States_Select_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Bar_States_Select_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Select_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Select_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Bar_States_Select_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_States_Select_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Bar_States_Select_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Select_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_States_Select_Color : <code>string</code></summary>
    type Figure_PlotOptions_Bar_States_Select_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Select_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Select_BorderColor : <code>string</code></summary>
    type Figure_PlotOptions_Bar_States_Select_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Select_BorderColor.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Select : <code>{| animation: {| duration:int |}; color:string; borderColor:string |}</code></summary>
    type Figure_PlotOptions_Bar_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_States_Select_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Bar_States_Select_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Select_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Bar_States_Select_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Select_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_PlotOptions_Bar_States_Select_BorderColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| animation: {| duration:int |}; color:string; borderColor:string |}) =
            let animation = Figure_PlotOptions_Bar_States_Select_Animation.ToJson o.animation
            let color = sprintf "\\\"%s\\\"" o.color
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            sprintf "{\\\"animation\\\":%s,\\\"color\\\":%s,\\\"borderColor\\\":%s}" animation color borderColor

        member this.Set (o:{| animation: {| duration:int |}; color:string; borderColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_States_Inactive_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Bar_States_Inactive_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Inactive_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Bar_States_Inactive_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_States_Inactive_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Bar_States_Inactive_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Inactive_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_States_Inactive_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Bar_States_Inactive_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Inactive_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
    type Figure_PlotOptions_Bar_States_Inactive(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Bar_States_Inactive_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Inactive_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Bar_States_Inactive_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactive" (parent.GetPath()))
                |> Option.defaultValue "inactive"

        static member ToJson (o:{| animation: {| duration:int |}; opacity:int |}) =
            let animation = Figure_PlotOptions_Bar_States_Inactive_Animation.ToJson o.animation
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"animation\\\":%s,\\\"opacity\\\":%s}" animation opacity

        member this.Set (o:{| animation: {| duration:int |}; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States_Inactive.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Bar_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Bar_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}</code></summary>
        member this.hover = Figure_PlotOptions_Bar_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Select : <code>{| animation: {| duration:int |}; color:string; borderColor:string |}</code></summary>
        member this.select = Figure_PlotOptions_Bar_States_Select(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
        member this.inactive = Figure_PlotOptions_Bar_States_Inactive(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            let normal = Figure_PlotOptions_Bar_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Bar_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Bar_States_Select.ToJson o.select
            let inactive = Figure_PlotOptions_Bar_States_Inactive.ToJson o.inactive
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s,\\\"inactive\\\":%s}" normal hover select inactive

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_States.ToJson o)


    ///<summary>Figure_PlotOptions_Bar_StickyTracking : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_StickyTracking.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_TurboThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Bar_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_TurboThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_FindNearestPointBy : <code>string</code></summary>
    type Figure_PlotOptions_Bar_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_FindNearestPointBy.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Bar_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_CenterInCategory : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_CenterInCategory(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.centerInCategory" (parent.GetPath()))
                |> Option.defaultValue "centerInCategory"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_CenterInCategory.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_GroupPadding : <code>int</code></summary>
    type Figure_PlotOptions_Bar_GroupPadding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.groupPadding" (parent.GetPath()))
                |> Option.defaultValue "groupPadding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_GroupPadding.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_PointPadding : <code>int</code></summary>
    type Figure_PlotOptions_Bar_PointPadding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointPadding" (parent.GetPath()))
                |> Option.defaultValue "pointPadding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_PointPadding.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_MinPointLength : <code>int</code></summary>
    type Figure_PlotOptions_Bar_MinPointLength(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minPointLength" (parent.GetPath()))
                |> Option.defaultValue "minPointLength"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_MinPointLength.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_StartFromThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Bar_StartFromThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.startFromThreshold" (parent.GetPath()))
                |> Option.defaultValue "startFromThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_StartFromThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_Threshold : <code>int</code></summary>
    type Figure_PlotOptions_Bar_Threshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.threshold" (parent.GetPath()))
                |> Option.defaultValue "threshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_Threshold.ToJson o)

    ///<summary>Figure_PlotOptions_Bar_BorderColor : <code>string</code></summary>
    type Figure_PlotOptions_Bar_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar_BorderColor.ToJson o)

    ///<summary>Figure_PlotOptions_Bar : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}</code></summary>
    type Figure_PlotOptions_Bar(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Bar_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Bar_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_PlotOptions_Bar_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_PlotOptions_Bar_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_PlotOptions_Bar_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Bar_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Bar_Events(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_Marker : <code>string</code></summary>
        member this.marker = Figure_PlotOptions_Bar_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_Point : <code>{| events: {| dummy:string |} |}</code></summary>
        member this.point = Figure_PlotOptions_Bar_Point(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_DataLabels : <code>{| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}</code></summary>
        member this.dataLabels = Figure_PlotOptions_Bar_DataLabels(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_PlotOptions_Bar_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Bar_Opacity(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_PointRange : <code>string</code></summary>
        member this.pointRange = Figure_PlotOptions_Bar_PointRange(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_PlotOptions_Bar_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Bar_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_PlotOptions_Bar_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_PlotOptions_Bar_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_PlotOptions_Bar_FindNearestPointBy(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Bar_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_CenterInCategory : <code>bool</code></summary>
        member this.centerInCategory = Figure_PlotOptions_Bar_CenterInCategory(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_GroupPadding : <code>int</code></summary>
        member this.groupPadding = Figure_PlotOptions_Bar_GroupPadding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_PointPadding : <code>int</code></summary>
        member this.pointPadding = Figure_PlotOptions_Bar_PointPadding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_MinPointLength : <code>int</code></summary>
        member this.minPointLength = Figure_PlotOptions_Bar_MinPointLength(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_StartFromThreshold : <code>bool</code></summary>
        member this.startFromThreshold = Figure_PlotOptions_Bar_StartFromThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_Threshold : <code>int</code></summary>
        member this.threshold = Figure_PlotOptions_Bar_Threshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_PlotOptions_Bar_BorderColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.bar" (parent.GetPath()))
                |> Option.defaultValue "bar"

        static member ToJson (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}) =
            let lineWidth = sprintf "%i" o.lineWidth
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let crisp = sprintf "%b" o.crisp
            let showCheckbox = sprintf "%b" o.showCheckbox
            let animation = Figure_PlotOptions_Bar_Animation.ToJson o.animation
            let events = Figure_PlotOptions_Bar_Events.ToJson o.events
            let marker = sprintf "%s" o.marker
            let point = Figure_PlotOptions_Bar_Point.ToJson o.point
            let dataLabels = Figure_PlotOptions_Bar_DataLabels.ToJson o.dataLabels
            let cropThreshold = sprintf "%i" o.cropThreshold
            let opacity = sprintf "%i" o.opacity
            let pointRange = sprintf "%s" o.pointRange
            let softThreshold = sprintf "%b" o.softThreshold
            let states = Figure_PlotOptions_Bar_States.ToJson o.states
            let stickyTracking = sprintf "%b" o.stickyTracking
            let turboThreshold = sprintf "%i" o.turboThreshold
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            let borderRadius = sprintf "%i" o.borderRadius
            let centerInCategory = sprintf "%b" o.centerInCategory
            let groupPadding = sprintf "%i" o.groupPadding
            let pointPadding = sprintf "%i" o.pointPadding
            let minPointLength = sprintf "%i" o.minPointLength
            let startFromThreshold = sprintf "%b" o.startFromThreshold
            let threshold = sprintf "%i" o.threshold
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            sprintf "{\\\"lineWidth\\\":%s,\\\"allowPointSelect\\\":%s,\\\"crisp\\\":%s,\\\"showCheckbox\\\":%s,\\\"animation\\\":%s,\\\"events\\\":%s,\\\"marker\\\":%s,\\\"point\\\":%s,\\\"dataLabels\\\":%s,\\\"cropThreshold\\\":%s,\\\"opacity\\\":%s,\\\"pointRange\\\":%s,\\\"softThreshold\\\":%s,\\\"states\\\":%s,\\\"stickyTracking\\\":%s,\\\"turboThreshold\\\":%s,\\\"findNearestPointBy\\\":%s,\\\"borderRadius\\\":%s,\\\"centerInCategory\\\":%s,\\\"groupPadding\\\":%s,\\\"pointPadding\\\":%s,\\\"minPointLength\\\":%s,\\\"startFromThreshold\\\":%s,\\\"threshold\\\":%s,\\\"borderColor\\\":%s}" lineWidth allowPointSelect crisp showCheckbox animation events marker point dataLabels cropThreshold opacity pointRange softThreshold states stickyTracking turboThreshold findNearestPointBy borderRadius centerInCategory groupPadding pointPadding minPointLength startFromThreshold threshold borderColor

        member this.Set (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Bar.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_AllowPointSelect : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_AllowPointSelect.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Crisp : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Crisp.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_ShowCheckbox : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_ShowCheckbox.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Scatter_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Scatter_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Scatter_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Marker_EnabledThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Marker_EnabledThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabledThreshold" (parent.GetPath()))
                |> Option.defaultValue "enabledThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_EnabledThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_Marker_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Marker_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_Radius : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Marker_Radius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radius" (parent.GetPath()))
                |> Option.defaultValue "radius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_Radius.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Scatter_Marker_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Scatter_Marker_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_Enabled : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Hover_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Hover_Enabled.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Hover_RadiusPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radiusPlus" (parent.GetPath()))
                |> Option.defaultValue "radiusPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Hover_RadiusPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Scatter_Marker_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_PlotOptions_Scatter_Marker_States_Hover_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_RadiusPlus : <code>int</code></summary>
        member this.radiusPlus = Figure_PlotOptions_Scatter_Marker_States_Hover_RadiusPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Scatter_Marker_States_Hover_LineWidthPlus(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            let animation = Figure_PlotOptions_Scatter_Marker_States_Hover_Animation.ToJson o.animation
            let enabled = sprintf "%b" o.enabled
            let radiusPlus = sprintf "%i" o.radiusPlus
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            sprintf "{\\\"animation\\\":%s,\\\"enabled\\\":%s,\\\"radiusPlus\\\":%s,\\\"lineWidthPlus\\\":%s}" animation enabled radiusPlus lineWidthPlus

        member this.Set (o:{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Select_FillColor : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Select_FillColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fillColor" (parent.GetPath()))
                |> Option.defaultValue "fillColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Select_FillColor.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Select_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Select_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Select_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Select_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Select_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Select_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Select_FillColor : <code>string</code></summary>
        member this.fillColor = Figure_PlotOptions_Scatter_Marker_States_Select_FillColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Select_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Scatter_Marker_States_Select_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Select_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Scatter_Marker_States_Select_LineWidth(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            let fillColor = sprintf "\\\"%s\\\"" o.fillColor
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            sprintf "{\\\"fillColor\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s}" fillColor lineColor lineWidth

        member this.Set (o:{| fillColor:string; lineColor:string; lineWidth:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
    type Figure_PlotOptions_Scatter_Marker_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Scatter_Marker_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Hover : <code>{| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}</code></summary>
        member this.hover = Figure_PlotOptions_Scatter_Marker_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_States_Select : <code>{| fillColor:string; lineColor:string; lineWidth:int |}</code></summary>
        member this.select = Figure_PlotOptions_Scatter_Marker_States_Select(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            let normal = Figure_PlotOptions_Scatter_Marker_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Scatter_Marker_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Scatter_Marker_States_Select.ToJson o.select
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s}" normal hover select

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_States.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Marker_Enabled : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_Marker_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker_Enabled.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}</code></summary>
    type Figure_PlotOptions_Scatter_Marker(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Marker_EnabledThreshold : <code>int</code></summary>
        member this.enabledThreshold = Figure_PlotOptions_Scatter_Marker_EnabledThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Scatter_Marker_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Scatter_Marker_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_Radius : <code>int</code></summary>
        member this.radius = Figure_PlotOptions_Scatter_Marker_Radius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Scatter_Marker_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_PlotOptions_Scatter_Marker_Enabled(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}) =
            let enabledThreshold = sprintf "%i" o.enabledThreshold
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            let radius = sprintf "%i" o.radius
            let states = Figure_PlotOptions_Scatter_Marker_States.ToJson o.states
            let enabled = sprintf "%b" o.enabled
            sprintf "{\\\"enabledThreshold\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s,\\\"radius\\\":%s,\\\"states\\\":%s,\\\"enabled\\\":%s}" enabledThreshold lineColor lineWidth radius states enabled

        member this.Set (o:{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Point_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Scatter_Point_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Point_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_Point : <code>{| events: {| dummy:string |} |}</code></summary>
    type Figure_PlotOptions_Scatter_Point(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Point_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Scatter_Point_Events(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.point" (parent.GetPath()))
                |> Option.defaultValue "point"

        static member ToJson (o:{| events: {| dummy:string |} |}) =
            let events = Figure_PlotOptions_Scatter_Point_Events.ToJson o.events
            sprintf "{\\\"events\\\":%s}" events

        member this.Set (o:{| events: {| dummy:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Point.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Align : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Align.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Padding : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Background : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Background.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Border : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Border.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Color : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Cursor : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Cursor.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_FontFamily : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_FontFamily.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_FontWeight : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_FontWeight.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_FontSize : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_FontSize.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Height : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Height.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Padding : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Position : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Position.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_TextAlign : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_TextAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_TextDecoration : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_TextOutline : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_TextOutline.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_TextOverflow : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Top : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Top.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Transition : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Transition.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Width : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style_Width.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Background : <code>string</code></summary>
        member this.background = Figure_PlotOptions_Scatter_DataLabels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_PlotOptions_Scatter_DataLabels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Border : <code>string</code></summary>
        member this.border = Figure_PlotOptions_Scatter_DataLabels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Scatter_DataLabels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Scatter_DataLabels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_PlotOptions_Scatter_DataLabels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_PlotOptions_Scatter_DataLabels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_PlotOptions_Scatter_DataLabels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_PlotOptions_Scatter_DataLabels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Height : <code>int</code></summary>
        member this.height = Figure_PlotOptions_Scatter_DataLabels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Scatter_DataLabels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_PlotOptions_Scatter_DataLabels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Position : <code>string</code></summary>
        member this.position = Figure_PlotOptions_Scatter_DataLabels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_PlotOptions_Scatter_DataLabels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_PlotOptions_Scatter_DataLabels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_PlotOptions_Scatter_DataLabels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_PlotOptions_Scatter_DataLabels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Top : <code>string</code></summary>
        member this.top = Figure_PlotOptions_Scatter_DataLabels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_PlotOptions_Scatter_DataLabels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_PlotOptions_Scatter_DataLabels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style_Width : <code>int</code></summary>
        member this.width = Figure_PlotOptions_Scatter_DataLabels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Style.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_DataLabels_VerticalAlign : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_VerticalAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_X : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_X.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels_Y : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels_Y.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}</code></summary>
    type Figure_PlotOptions_Scatter_DataLabels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Align : <code>string</code></summary>
        member this.align = Figure_PlotOptions_Scatter_DataLabels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Padding : <code>int</code></summary>
        member this.padding = Figure_PlotOptions_Scatter_DataLabels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_PlotOptions_Scatter_DataLabels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_PlotOptions_Scatter_DataLabels_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Scatter_DataLabels_X(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels_Y : <code>int</code></summary>
        member this.y = Figure_PlotOptions_Scatter_DataLabels_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dataLabels" (parent.GetPath()))
                |> Option.defaultValue "dataLabels"

        static member ToJson (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let padding = sprintf "%i" o.padding
            let style = Figure_PlotOptions_Scatter_DataLabels_Style.ToJson o.style
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"padding\\\":%s,\\\"style\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align padding style verticalAlign x y

        member this.Set (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_DataLabels.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_CropThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_CropThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_PointRange : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_PointRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointRange" (parent.GetPath()))
                |> Option.defaultValue "pointRange"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_PointRange.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_SoftThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_SoftThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Scatter_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Scatter_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Hover_Marker(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Hover_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States_Hover_Halo_Size : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_States_Hover_Halo_Size(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.size" (parent.GetPath()))
                |> Option.defaultValue "size"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Hover_Halo_Size.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Hover_Halo_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_States_Hover_Halo_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Hover_Halo_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Hover_Halo(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Hover_Halo_Size : <code>int</code></summary>
        member this.size = Figure_PlotOptions_Scatter_States_Hover_Halo_Size(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States_Hover_Halo_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Scatter_States_Hover_Halo_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.halo" (parent.GetPath()))
                |> Option.defaultValue "halo"

        static member ToJson (o:{| size:int; opacity:int |}) =
            let size = sprintf "%i" o.size
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"size\\\":%s,\\\"opacity\\\":%s}" size opacity

        member this.Set (o:{| size:int; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Hover_Halo.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Scatter_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Scatter_States_Hover_LineWidthPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
        member this.marker = Figure_PlotOptions_Scatter_States_Hover_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
        member this.halo = Figure_PlotOptions_Scatter_States_Hover_Halo(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            let animation = Figure_PlotOptions_Scatter_States_Hover_Animation.ToJson o.animation
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            let marker = Figure_PlotOptions_Scatter_States_Hover_Marker.ToJson o.marker
            let halo = Figure_PlotOptions_Scatter_States_Hover_Halo.ToJson o.halo
            sprintf "{\\\"animation\\\":%s,\\\"lineWidthPlus\\\":%s,\\\"marker\\\":%s,\\\"halo\\\":%s}" animation lineWidthPlus marker halo

        member this.Set (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States_Select_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_States_Select_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Select_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Select_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Select_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Select_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Scatter_States_Select_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Select_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Select_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Scatter_States_Select_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| animation: {| duration:int |} |}) =
            let animation = Figure_PlotOptions_Scatter_States_Select_Animation.ToJson o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation: {| duration:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States_Inactive_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_States_Inactive_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Inactive_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Inactive_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Inactive_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Scatter_States_Inactive_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Inactive_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States_Inactive_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_States_Inactive_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Inactive_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
    type Figure_PlotOptions_Scatter_States_Inactive(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Scatter_States_Inactive_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States_Inactive_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Scatter_States_Inactive_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactive" (parent.GetPath()))
                |> Option.defaultValue "inactive"

        static member ToJson (o:{| animation: {| duration:int |}; opacity:int |}) =
            let animation = Figure_PlotOptions_Scatter_States_Inactive_Animation.ToJson o.animation
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"animation\\\":%s,\\\"opacity\\\":%s}" animation opacity

        member this.Set (o:{| animation: {| duration:int |}; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States_Inactive.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Scatter_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Scatter_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}</code></summary>
        member this.hover = Figure_PlotOptions_Scatter_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
        member this.select = Figure_PlotOptions_Scatter_States_Select(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
        member this.inactive = Figure_PlotOptions_Scatter_States_Inactive(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            let normal = Figure_PlotOptions_Scatter_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Scatter_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Scatter_States_Select.ToJson o.select
            let inactive = Figure_PlotOptions_Scatter_States_Inactive.ToJson o.inactive
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s,\\\"inactive\\\":%s}" normal hover select inactive

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_States.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter_StickyTracking : <code>bool</code></summary>
    type Figure_PlotOptions_Scatter_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_StickyTracking.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_TurboThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_TurboThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_FindNearestPointBy : <code>string</code></summary>
    type Figure_PlotOptions_Scatter_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_FindNearestPointBy.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Jitter_X : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Jitter_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Jitter_X.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Jitter_Y : <code>int</code></summary>
    type Figure_PlotOptions_Scatter_Jitter_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Jitter_Y.ToJson o)

    ///<summary>Figure_PlotOptions_Scatter_Jitter : <code>{| x:int; y:int |}</code></summary>
    type Figure_PlotOptions_Scatter_Jitter(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_Jitter_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Scatter_Jitter_X(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Jitter_Y : <code>int</code></summary>
        member this.y = Figure_PlotOptions_Scatter_Jitter_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.jitter" (parent.GetPath()))
                |> Option.defaultValue "jitter"

        static member ToJson (o:{| x:int; y:int |}) =
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"x\\\":%s,\\\"y\\\":%s}" x y

        member this.Set (o:{| x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter_Jitter.ToJson o)


    ///<summary>Figure_PlotOptions_Scatter : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}</code></summary>
    type Figure_PlotOptions_Scatter(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Scatter_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Scatter_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_PlotOptions_Scatter_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_PlotOptions_Scatter_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_PlotOptions_Scatter_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Scatter_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Scatter_Events(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Marker : <code>{| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}</code></summary>
        member this.marker = Figure_PlotOptions_Scatter_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Point : <code>{| events: {| dummy:string |} |}</code></summary>
        member this.point = Figure_PlotOptions_Scatter_Point(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}</code></summary>
        member this.dataLabels = Figure_PlotOptions_Scatter_DataLabels(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_PlotOptions_Scatter_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Scatter_Opacity(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_PointRange : <code>int</code></summary>
        member this.pointRange = Figure_PlotOptions_Scatter_PointRange(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_PlotOptions_Scatter_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Scatter_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_PlotOptions_Scatter_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_PlotOptions_Scatter_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_PlotOptions_Scatter_FindNearestPointBy(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter_Jitter : <code>{| x:int; y:int |}</code></summary>
        member this.jitter = Figure_PlotOptions_Scatter_Jitter(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.scatter" (parent.GetPath()))
                |> Option.defaultValue "scatter"

        static member ToJson (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}) =
            let lineWidth = sprintf "%i" o.lineWidth
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let crisp = sprintf "%b" o.crisp
            let showCheckbox = sprintf "%b" o.showCheckbox
            let animation = Figure_PlotOptions_Scatter_Animation.ToJson o.animation
            let events = Figure_PlotOptions_Scatter_Events.ToJson o.events
            let marker = Figure_PlotOptions_Scatter_Marker.ToJson o.marker
            let point = Figure_PlotOptions_Scatter_Point.ToJson o.point
            let dataLabels = Figure_PlotOptions_Scatter_DataLabels.ToJson o.dataLabels
            let cropThreshold = sprintf "%i" o.cropThreshold
            let opacity = sprintf "%i" o.opacity
            let pointRange = sprintf "%i" o.pointRange
            let softThreshold = sprintf "%b" o.softThreshold
            let states = Figure_PlotOptions_Scatter_States.ToJson o.states
            let stickyTracking = sprintf "%b" o.stickyTracking
            let turboThreshold = sprintf "%i" o.turboThreshold
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            let jitter = Figure_PlotOptions_Scatter_Jitter.ToJson o.jitter
            sprintf "{\\\"lineWidth\\\":%s,\\\"allowPointSelect\\\":%s,\\\"crisp\\\":%s,\\\"showCheckbox\\\":%s,\\\"animation\\\":%s,\\\"events\\\":%s,\\\"marker\\\":%s,\\\"point\\\":%s,\\\"dataLabels\\\":%s,\\\"cropThreshold\\\":%s,\\\"opacity\\\":%s,\\\"pointRange\\\":%s,\\\"softThreshold\\\":%s,\\\"states\\\":%s,\\\"stickyTracking\\\":%s,\\\"turboThreshold\\\":%s,\\\"findNearestPointBy\\\":%s,\\\"jitter\\\":%s}" lineWidth allowPointSelect crisp showCheckbox animation events marker point dataLabels cropThreshold opacity pointRange softThreshold states stickyTracking turboThreshold findNearestPointBy jitter

        member this.Set (o:{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Scatter.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_AllowPointSelect : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_AllowPointSelect.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_Crisp : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Crisp.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_ShowCheckbox : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_ShowCheckbox.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Pie_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Pie_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Pie_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Pie_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_Marker : <code>string</code></summary>
    type Figure_PlotOptions_Pie_Marker(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Marker.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_Point_Events : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Pie_Point_Events(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.events" (parent.GetPath()))
                |> Option.defaultValue "events"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Point_Events.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_Point : <code>{| events: {| dummy:string |} |}</code></summary>
    type Figure_PlotOptions_Pie_Point(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_Point_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Pie_Point_Events(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.point" (parent.GetPath()))
                |> Option.defaultValue "point"

        static member ToJson (o:{| events: {| dummy:string |} |}) =
            let events = Figure_PlotOptions_Pie_Point_Events.ToJson o.events
            sprintf "{\\\"events\\\":%s}" events

        member this.Set (o:{| events: {| dummy:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Point.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_DataLabels_Align : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Align.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Padding : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Background : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Background.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Border : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Border.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_BorderRadius : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Color : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Color.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Cursor : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Cursor.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_FontFamily : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_FontFamily.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_FontWeight : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_FontWeight.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_FontSize : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_FontSize.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Height : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Height.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_LineWidth : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_LineWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Padding : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Padding.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Position : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Position.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_TextAlign : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_TextAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_TextDecoration : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_TextOutline : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_TextOutline.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_TextOverflow : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Top : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Top.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Transition : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Transition.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Width : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style_Width.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Background : <code>string</code></summary>
        member this.background = Figure_PlotOptions_Pie_DataLabels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_PlotOptions_Pie_DataLabels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Border : <code>string</code></summary>
        member this.border = Figure_PlotOptions_Pie_DataLabels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_PlotOptions_Pie_DataLabels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Color : <code>string</code></summary>
        member this.color = Figure_PlotOptions_Pie_DataLabels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_PlotOptions_Pie_DataLabels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_PlotOptions_Pie_DataLabels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_PlotOptions_Pie_DataLabels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_PlotOptions_Pie_DataLabels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Height : <code>int</code></summary>
        member this.height = Figure_PlotOptions_Pie_DataLabels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_PlotOptions_Pie_DataLabels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_PlotOptions_Pie_DataLabels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Position : <code>string</code></summary>
        member this.position = Figure_PlotOptions_Pie_DataLabels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_PlotOptions_Pie_DataLabels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_PlotOptions_Pie_DataLabels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_PlotOptions_Pie_DataLabels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_PlotOptions_Pie_DataLabels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Top : <code>string</code></summary>
        member this.top = Figure_PlotOptions_Pie_DataLabels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_PlotOptions_Pie_DataLabels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_PlotOptions_Pie_DataLabels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style_Width : <code>int</code></summary>
        member this.width = Figure_PlotOptions_Pie_DataLabels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Style.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_DataLabels_VerticalAlign : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_VerticalAlign.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_X : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_X.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Y : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Y.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_AllowOverlap : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_AllowOverlap(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowOverlap" (parent.GetPath()))
                |> Option.defaultValue "allowOverlap"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_AllowOverlap.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_ConnectorPadding : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_ConnectorPadding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.connectorPadding" (parent.GetPath()))
                |> Option.defaultValue "connectorPadding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_ConnectorPadding.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_ConnectorShape : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_ConnectorShape(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.connectorShape" (parent.GetPath()))
                |> Option.defaultValue "connectorShape"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_ConnectorShape.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_CrookDistance : <code>string</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_CrookDistance(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crookDistance" (parent.GetPath()))
                |> Option.defaultValue "crookDistance"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_CrookDistance.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Distance : <code>int</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Distance(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.distance" (parent.GetPath()))
                |> Option.defaultValue "distance"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Distance.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_Enabled : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_Enabled.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels_SoftConnector : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_DataLabels_SoftConnector(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softConnector" (parent.GetPath()))
                |> Option.defaultValue "softConnector"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels_SoftConnector.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}</code></summary>
    type Figure_PlotOptions_Pie_DataLabels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_DataLabels_Align : <code>string</code></summary>
        member this.align = Figure_PlotOptions_Pie_DataLabels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Padding : <code>int</code></summary>
        member this.padding = Figure_PlotOptions_Pie_DataLabels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_PlotOptions_Pie_DataLabels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_PlotOptions_Pie_DataLabels_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_X : <code>int</code></summary>
        member this.x = Figure_PlotOptions_Pie_DataLabels_X(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Y : <code>int</code></summary>
        member this.y = Figure_PlotOptions_Pie_DataLabels_Y(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_AllowOverlap : <code>bool</code></summary>
        member this.allowOverlap = Figure_PlotOptions_Pie_DataLabels_AllowOverlap(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_ConnectorPadding : <code>int</code></summary>
        member this.connectorPadding = Figure_PlotOptions_Pie_DataLabels_ConnectorPadding(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_ConnectorShape : <code>string</code></summary>
        member this.connectorShape = Figure_PlotOptions_Pie_DataLabels_ConnectorShape(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_CrookDistance : <code>string</code></summary>
        member this.crookDistance = Figure_PlotOptions_Pie_DataLabels_CrookDistance(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Distance : <code>int</code></summary>
        member this.distance = Figure_PlotOptions_Pie_DataLabels_Distance(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_PlotOptions_Pie_DataLabels_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels_SoftConnector : <code>bool</code></summary>
        member this.softConnector = Figure_PlotOptions_Pie_DataLabels_SoftConnector(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dataLabels" (parent.GetPath()))
                |> Option.defaultValue "dataLabels"

        static member ToJson (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let padding = sprintf "%i" o.padding
            let style = Figure_PlotOptions_Pie_DataLabels_Style.ToJson o.style
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            let allowOverlap = sprintf "%b" o.allowOverlap
            let connectorPadding = sprintf "%i" o.connectorPadding
            let connectorShape = sprintf "\\\"%s\\\"" o.connectorShape
            let crookDistance = sprintf "\\\"%s\\\"" o.crookDistance
            let distance = sprintf "%i" o.distance
            let enabled = sprintf "%b" o.enabled
            let softConnector = sprintf "%b" o.softConnector
            sprintf "{\\\"align\\\":%s,\\\"padding\\\":%s,\\\"style\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s,\\\"allowOverlap\\\":%s,\\\"connectorPadding\\\":%s,\\\"connectorShape\\\":%s,\\\"crookDistance\\\":%s,\\\"distance\\\":%s,\\\"enabled\\\":%s,\\\"softConnector\\\":%s}" align padding style verticalAlign x y allowOverlap connectorPadding connectorShape crookDistance distance enabled softConnector

        member this.Set (o:{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_DataLabels.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_CropThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Pie_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_CropThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Pie_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_PointRange : <code>int</code></summary>
    type Figure_PlotOptions_Pie_PointRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointRange" (parent.GetPath()))
                |> Option.defaultValue "pointRange"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_PointRange.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_SoftThreshold : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_SoftThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Normal_Animation : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_States_Normal_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Normal_Animation.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Normal : <code>{| animation:bool |}</code></summary>
    type Figure_PlotOptions_Pie_States_Normal(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Normal_Animation : <code>bool</code></summary>
        member this.animation = Figure_PlotOptions_Pie_States_Normal_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.normal" (parent.GetPath()))
                |> Option.defaultValue "normal"

        static member ToJson (o:{| animation:bool |}) =
            let animation = sprintf "%b" o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Normal.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States_Hover_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Pie_States_Hover_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Hover_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Pie_States_Hover_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Hover_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Pie_States_Hover_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States_Hover_LineWidthPlus : <code>int</code></summary>
    type Figure_PlotOptions_Pie_States_Hover_LineWidthPlus(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidthPlus" (parent.GetPath()))
                |> Option.defaultValue "lineWidthPlus"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover_LineWidthPlus.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
    type Figure_PlotOptions_Pie_States_Hover_Marker(parent:IFigureItem option) =
        let parentItem = parent


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| dummy:string |}) =

            sprintf "{\\\"dummy\\\":%s}" o.dummy

        member this.Set (o:{| dummy:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover_Marker.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States_Hover_Halo_Size : <code>int</code></summary>
    type Figure_PlotOptions_Pie_States_Hover_Halo_Size(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.size" (parent.GetPath()))
                |> Option.defaultValue "size"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover_Halo_Size.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Hover_Halo_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Pie_States_Hover_Halo_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover_Halo_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
    type Figure_PlotOptions_Pie_States_Hover_Halo(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Hover_Halo_Size : <code>int</code></summary>
        member this.size = Figure_PlotOptions_Pie_States_Hover_Halo_Size(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Hover_Halo_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Pie_States_Hover_Halo_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.halo" (parent.GetPath()))
                |> Option.defaultValue "halo"

        static member ToJson (o:{| size:int; opacity:int |}) =
            let size = sprintf "%i" o.size
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"size\\\":%s,\\\"opacity\\\":%s}" size opacity

        member this.Set (o:{| size:int; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover_Halo.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States_Hover_Brightness : <code>int</code></summary>
    type Figure_PlotOptions_Pie_States_Hover_Brightness(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.brightness" (parent.GetPath()))
                |> Option.defaultValue "brightness"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover_Brightness.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}</code></summary>
    type Figure_PlotOptions_Pie_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Hover_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Pie_States_Hover_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Hover_LineWidthPlus : <code>int</code></summary>
        member this.lineWidthPlus = Figure_PlotOptions_Pie_States_Hover_LineWidthPlus(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Hover_Marker : <code>{| dummy:string |}</code></summary>
        member this.marker = Figure_PlotOptions_Pie_States_Hover_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Hover_Halo : <code>{| size:int; opacity:int |}</code></summary>
        member this.halo = Figure_PlotOptions_Pie_States_Hover_Halo(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Hover_Brightness : <code>int</code></summary>
        member this.brightness = Figure_PlotOptions_Pie_States_Hover_Brightness(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}) =
            let animation = Figure_PlotOptions_Pie_States_Hover_Animation.ToJson o.animation
            let lineWidthPlus = sprintf "%i" o.lineWidthPlus
            let marker = Figure_PlotOptions_Pie_States_Hover_Marker.ToJson o.marker
            let halo = Figure_PlotOptions_Pie_States_Hover_Halo.ToJson o.halo
            let brightness = sprintf "%i" o.brightness
            sprintf "{\\\"animation\\\":%s,\\\"lineWidthPlus\\\":%s,\\\"marker\\\":%s,\\\"halo\\\":%s,\\\"brightness\\\":%s}" animation lineWidthPlus marker halo brightness

        member this.Set (o:{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Hover.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States_Select_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Pie_States_Select_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Select_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Select_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Pie_States_Select_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Select_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Pie_States_Select_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Select_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
    type Figure_PlotOptions_Pie_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Select_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Pie_States_Select_Animation(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| animation: {| duration:int |} |}) =
            let animation = Figure_PlotOptions_Pie_States_Select_Animation.ToJson o.animation
            sprintf "{\\\"animation\\\":%s}" animation

        member this.Set (o:{| animation: {| duration:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Select.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States_Inactive_Animation_Duration : <code>int</code></summary>
    type Figure_PlotOptions_Pie_States_Inactive_Animation_Duration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.duration" (parent.GetPath()))
                |> Option.defaultValue "duration"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Inactive_Animation_Duration.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
    type Figure_PlotOptions_Pie_States_Inactive_Animation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Inactive_Animation_Duration : <code>int</code></summary>
        member this.duration = Figure_PlotOptions_Pie_States_Inactive_Animation_Duration(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:{| duration:int |}) =
            let duration = sprintf "%i" o.duration
            sprintf "{\\\"duration\\\":%s}" duration

        member this.Set (o:{| duration:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Inactive_Animation.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States_Inactive_Opacity : <code>int</code></summary>
    type Figure_PlotOptions_Pie_States_Inactive_Opacity(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opacity" (parent.GetPath()))
                |> Option.defaultValue "opacity"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Inactive_Opacity.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
    type Figure_PlotOptions_Pie_States_Inactive(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Inactive_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Pie_States_Inactive_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Inactive_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Pie_States_Inactive_Opacity(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactive" (parent.GetPath()))
                |> Option.defaultValue "inactive"

        static member ToJson (o:{| animation: {| duration:int |}; opacity:int |}) =
            let animation = Figure_PlotOptions_Pie_States_Inactive_Animation.ToJson o.animation
            let opacity = sprintf "%i" o.opacity
            sprintf "{\\\"animation\\\":%s,\\\"opacity\\\":%s}" animation opacity

        member this.Set (o:{| animation: {| duration:int |}; opacity:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States_Inactive.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
    type Figure_PlotOptions_Pie_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_States_Normal : <code>{| animation:bool |}</code></summary>
        member this.normal = Figure_PlotOptions_Pie_States_Normal(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Hover : <code>{| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}</code></summary>
        member this.hover = Figure_PlotOptions_Pie_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Select : <code>{| animation: {| duration:int |} |}</code></summary>
        member this.select = Figure_PlotOptions_Pie_States_Select(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States_Inactive : <code>{| animation: {| duration:int |}; opacity:int |}</code></summary>
        member this.inactive = Figure_PlotOptions_Pie_States_Inactive(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            let normal = Figure_PlotOptions_Pie_States_Normal.ToJson o.normal
            let hover = Figure_PlotOptions_Pie_States_Hover.ToJson o.hover
            let select = Figure_PlotOptions_Pie_States_Select.ToJson o.select
            let inactive = Figure_PlotOptions_Pie_States_Inactive.ToJson o.inactive
            sprintf "{\\\"normal\\\":%s,\\\"hover\\\":%s,\\\"select\\\":%s,\\\"inactive\\\":%s}" normal hover select inactive

        member this.Set (o:{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_States.ToJson o)


    ///<summary>Figure_PlotOptions_Pie_StickyTracking : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_StickyTracking.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_TurboThreshold : <code>int</code></summary>
    type Figure_PlotOptions_Pie_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_TurboThreshold.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_FindNearestPointBy : <code>string</code></summary>
    type Figure_PlotOptions_Pie_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_FindNearestPointBy.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_Center_Item : <code>string</code></summary>
    type Figure_PlotOptions_Pie_Center_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Center_Item.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_Center : <code>string seq</code></summary>
    type Figure_PlotOptions_Pie_Center(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_PlotOptions_Pie_Center_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.center" (parent.GetPath()))
                |> Option.defaultValue "center"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_PlotOptions_Pie_Center_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Center.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_PlotOptions_Pie_Clip : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_Clip(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.clip" (parent.GetPath()))
                |> Option.defaultValue "clip"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Clip.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_ColorByPoint : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_ColorByPoint(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.colorByPoint" (parent.GetPath()))
                |> Option.defaultValue "colorByPoint"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_ColorByPoint.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_IgnoreHiddenPoint : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_IgnoreHiddenPoint(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.ignoreHiddenPoint" (parent.GetPath()))
                |> Option.defaultValue "ignoreHiddenPoint"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_IgnoreHiddenPoint.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_InactiveOtherPoints : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_InactiveOtherPoints(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactiveOtherPoints" (parent.GetPath()))
                |> Option.defaultValue "inactiveOtherPoints"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_InactiveOtherPoints.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_LegendType : <code>string</code></summary>
    type Figure_PlotOptions_Pie_LegendType(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.legendType" (parent.GetPath()))
                |> Option.defaultValue "legendType"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_LegendType.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_Size : <code>string</code></summary>
    type Figure_PlotOptions_Pie_Size(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.size" (parent.GetPath()))
                |> Option.defaultValue "size"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_Size.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_ShowInLegend : <code>bool</code></summary>
    type Figure_PlotOptions_Pie_ShowInLegend(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showInLegend" (parent.GetPath()))
                |> Option.defaultValue "showInLegend"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_ShowInLegend.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_SlicedOffset : <code>int</code></summary>
    type Figure_PlotOptions_Pie_SlicedOffset(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.slicedOffset" (parent.GetPath()))
                |> Option.defaultValue "slicedOffset"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_SlicedOffset.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_BorderColor : <code>string</code></summary>
    type Figure_PlotOptions_Pie_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_BorderColor.ToJson o)

    ///<summary>Figure_PlotOptions_Pie_BorderWidth : <code>int</code></summary>
    type Figure_PlotOptions_Pie_BorderWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderWidth" (parent.GetPath()))
                |> Option.defaultValue "borderWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie_BorderWidth.ToJson o)

    ///<summary>Figure_PlotOptions_Pie : <code>{| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}</code></summary>
    type Figure_PlotOptions_Pie(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Pie_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_PlotOptions_Pie_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_PlotOptions_Pie_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_PlotOptions_Pie_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Animation : <code>{| duration:int |}</code></summary>
        member this.animation = Figure_PlotOptions_Pie_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Events : <code>{| dummy:string |}</code></summary>
        member this.events = Figure_PlotOptions_Pie_Events(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Marker : <code>string</code></summary>
        member this.marker = Figure_PlotOptions_Pie_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Point : <code>{| events: {| dummy:string |} |}</code></summary>
        member this.point = Figure_PlotOptions_Pie_Point(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_DataLabels : <code>{| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}</code></summary>
        member this.dataLabels = Figure_PlotOptions_Pie_DataLabels(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_PlotOptions_Pie_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Opacity : <code>int</code></summary>
        member this.opacity = Figure_PlotOptions_Pie_Opacity(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_PointRange : <code>int</code></summary>
        member this.pointRange = Figure_PlotOptions_Pie_PointRange(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_PlotOptions_Pie_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_States : <code>{| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}</code></summary>
        member this.states = Figure_PlotOptions_Pie_States(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_PlotOptions_Pie_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_PlotOptions_Pie_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_PlotOptions_Pie_FindNearestPointBy(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Center : <code>string seq</code></summary>
        member this.center = Figure_PlotOptions_Pie_Center(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Clip : <code>bool</code></summary>
        member this.clip = Figure_PlotOptions_Pie_Clip(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_ColorByPoint : <code>bool</code></summary>
        member this.colorByPoint = Figure_PlotOptions_Pie_ColorByPoint(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_IgnoreHiddenPoint : <code>bool</code></summary>
        member this.ignoreHiddenPoint = Figure_PlotOptions_Pie_IgnoreHiddenPoint(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_InactiveOtherPoints : <code>bool</code></summary>
        member this.inactiveOtherPoints = Figure_PlotOptions_Pie_InactiveOtherPoints(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_LegendType : <code>string</code></summary>
        member this.legendType = Figure_PlotOptions_Pie_LegendType(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_Size : <code>string</code></summary>
        member this.size = Figure_PlotOptions_Pie_Size(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_ShowInLegend : <code>bool</code></summary>
        member this.showInLegend = Figure_PlotOptions_Pie_ShowInLegend(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_SlicedOffset : <code>int</code></summary>
        member this.slicedOffset = Figure_PlotOptions_Pie_SlicedOffset(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_PlotOptions_Pie_BorderColor(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie_BorderWidth : <code>int</code></summary>
        member this.borderWidth = Figure_PlotOptions_Pie_BorderWidth(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pie" (parent.GetPath()))
                |> Option.defaultValue "pie"

        static member ToJson (o:{| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}) =
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let crisp = sprintf "%b" o.crisp
            let showCheckbox = sprintf "%b" o.showCheckbox
            let animation = Figure_PlotOptions_Pie_Animation.ToJson o.animation
            let events = Figure_PlotOptions_Pie_Events.ToJson o.events
            let marker = sprintf "%s" o.marker
            let point = Figure_PlotOptions_Pie_Point.ToJson o.point
            let dataLabels = Figure_PlotOptions_Pie_DataLabels.ToJson o.dataLabels
            let cropThreshold = sprintf "%i" o.cropThreshold
            let opacity = sprintf "%i" o.opacity
            let pointRange = sprintf "%i" o.pointRange
            let softThreshold = sprintf "%b" o.softThreshold
            let states = Figure_PlotOptions_Pie_States.ToJson o.states
            let stickyTracking = sprintf "%b" o.stickyTracking
            let turboThreshold = sprintf "%i" o.turboThreshold
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            let center = Figure_PlotOptions_Pie_Center.ToJson o.center
            let clip = sprintf "%b" o.clip
            let colorByPoint = sprintf "%b" o.colorByPoint
            let ignoreHiddenPoint = sprintf "%b" o.ignoreHiddenPoint
            let inactiveOtherPoints = sprintf "%b" o.inactiveOtherPoints
            let legendType = sprintf "\\\"%s\\\"" o.legendType
            let size = sprintf "%s" o.size
            let showInLegend = sprintf "%b" o.showInLegend
            let slicedOffset = sprintf "%i" o.slicedOffset
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            let borderWidth = sprintf "%i" o.borderWidth
            sprintf "{\\\"allowPointSelect\\\":%s,\\\"crisp\\\":%s,\\\"showCheckbox\\\":%s,\\\"animation\\\":%s,\\\"events\\\":%s,\\\"marker\\\":%s,\\\"point\\\":%s,\\\"dataLabels\\\":%s,\\\"cropThreshold\\\":%s,\\\"opacity\\\":%s,\\\"pointRange\\\":%s,\\\"softThreshold\\\":%s,\\\"states\\\":%s,\\\"stickyTracking\\\":%s,\\\"turboThreshold\\\":%s,\\\"findNearestPointBy\\\":%s,\\\"center\\\":%s,\\\"clip\\\":%s,\\\"colorByPoint\\\":%s,\\\"ignoreHiddenPoint\\\":%s,\\\"inactiveOtherPoints\\\":%s,\\\"legendType\\\":%s,\\\"size\\\":%s,\\\"showInLegend\\\":%s,\\\"slicedOffset\\\":%s,\\\"borderColor\\\":%s,\\\"borderWidth\\\":%s}" allowPointSelect crisp showCheckbox animation events marker point dataLabels cropThreshold opacity pointRange softThreshold states stickyTracking turboThreshold findNearestPointBy center clip colorByPoint ignoreHiddenPoint inactiveOtherPoints legendType size showInLegend slicedOffset borderColor borderWidth

        member this.Set (o:{| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Pie.ToJson o)


    ///<summary>Figure_PlotOptions_Candlestick_LineColor : <code>string</code></summary>
    type Figure_PlotOptions_Candlestick_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Candlestick_LineColor.ToJson o)

    ///<summary>Figure_PlotOptions_Candlestick : <code>{| lineColor:string |}</code></summary>
    type Figure_PlotOptions_Candlestick(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Candlestick_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_PlotOptions_Candlestick_LineColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.candlestick" (parent.GetPath()))
                |> Option.defaultValue "candlestick"

        static member ToJson (o:{| lineColor:string |}) =
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            sprintf "{\\\"lineColor\\\":%s}" lineColor

        member this.Set (o:{| lineColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions_Candlestick.ToJson o)


    ///<summary>Figure_PlotOptions : <code>{| line: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; area: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; spline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; areaspline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; column: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; bar: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; scatter: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}; pie: {| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}; candlestick: {| lineColor:string |} |}</code></summary>
    type Figure_PlotOptions(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_PlotOptions_Line : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}</code></summary>
        member this.line = Figure_PlotOptions_Line(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Area : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}</code></summary>
        member this.area = Figure_PlotOptions_Area(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Spline : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}</code></summary>
        member this.spline = Figure_PlotOptions_Spline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Areaspline : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}</code></summary>
        member this.areaspline = Figure_PlotOptions_Areaspline(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Column : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}</code></summary>
        member this.column = Figure_PlotOptions_Column(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Bar : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}</code></summary>
        member this.bar = Figure_PlotOptions_Bar(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Scatter : <code>{| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}</code></summary>
        member this.scatter = Figure_PlotOptions_Scatter(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Pie : <code>{| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}</code></summary>
        member this.pie = Figure_PlotOptions_Pie(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions_Candlestick : <code>{| lineColor:string |}</code></summary>
        member this.candlestick = Figure_PlotOptions_Candlestick(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.plotOptions" (parent.GetPath()))
                |> Option.defaultValue "plotOptions"

        static member ToJson (o:{| line: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; area: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; spline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; areaspline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; column: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; bar: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; scatter: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}; pie: {| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}; candlestick: {| lineColor:string |} |}) =
            let line = Figure_PlotOptions_Line.ToJson o.line
            let area = Figure_PlotOptions_Area.ToJson o.area
            let spline = Figure_PlotOptions_Spline.ToJson o.spline
            let areaspline = Figure_PlotOptions_Areaspline.ToJson o.areaspline
            let column = Figure_PlotOptions_Column.ToJson o.column
            let bar = Figure_PlotOptions_Bar.ToJson o.bar
            let scatter = Figure_PlotOptions_Scatter.ToJson o.scatter
            let pie = Figure_PlotOptions_Pie.ToJson o.pie
            let candlestick = Figure_PlotOptions_Candlestick.ToJson o.candlestick
            sprintf "{\\\"line\\\":%s,\\\"area\\\":%s,\\\"spline\\\":%s,\\\"areaspline\\\":%s,\\\"column\\\":%s,\\\"bar\\\":%s,\\\"scatter\\\":%s,\\\"pie\\\":%s,\\\"candlestick\\\":%s}" line area spline areaspline column bar scatter pie candlestick

        member this.Set (o:{| line: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; area: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; spline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; areaspline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; column: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; bar: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; scatter: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}; pie: {| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}; candlestick: {| lineColor:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_PlotOptions.ToJson o)


    ///<summary>Figure_Labels_Style_Background : <code>string</code></summary>
    type Figure_Labels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Background.ToJson o)

    ///<summary>Figure_Labels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_Labels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_Labels_Style_Border : <code>string</code></summary>
    type Figure_Labels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Border.ToJson o)

    ///<summary>Figure_Labels_Style_BorderRadius : <code>int</code></summary>
    type Figure_Labels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_Labels_Style_Color : <code>string</code></summary>
    type Figure_Labels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Color.ToJson o)

    ///<summary>Figure_Labels_Style_Cursor : <code>string</code></summary>
    type Figure_Labels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Cursor.ToJson o)

    ///<summary>Figure_Labels_Style_FontFamily : <code>string</code></summary>
    type Figure_Labels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_FontFamily.ToJson o)

    ///<summary>Figure_Labels_Style_FontWeight : <code>string</code></summary>
    type Figure_Labels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_FontWeight.ToJson o)

    ///<summary>Figure_Labels_Style_FontSize : <code>string</code></summary>
    type Figure_Labels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_FontSize.ToJson o)

    ///<summary>Figure_Labels_Style_Height : <code>int</code></summary>
    type Figure_Labels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Height.ToJson o)

    ///<summary>Figure_Labels_Style_LineWidth : <code>int</code></summary>
    type Figure_Labels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_LineWidth.ToJson o)

    ///<summary>Figure_Labels_Style_Padding : <code>string</code></summary>
    type Figure_Labels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Padding.ToJson o)

    ///<summary>Figure_Labels_Style_Position : <code>string</code></summary>
    type Figure_Labels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Position.ToJson o)

    ///<summary>Figure_Labels_Style_TextAlign : <code>string</code></summary>
    type Figure_Labels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_TextAlign.ToJson o)

    ///<summary>Figure_Labels_Style_TextDecoration : <code>string</code></summary>
    type Figure_Labels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_Labels_Style_TextOutline : <code>string</code></summary>
    type Figure_Labels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_TextOutline.ToJson o)

    ///<summary>Figure_Labels_Style_TextOverflow : <code>string</code></summary>
    type Figure_Labels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_Labels_Style_Top : <code>string</code></summary>
    type Figure_Labels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Top.ToJson o)

    ///<summary>Figure_Labels_Style_Transition : <code>string</code></summary>
    type Figure_Labels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Transition.ToJson o)

    ///<summary>Figure_Labels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_Labels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_Labels_Style_Width : <code>int</code></summary>
    type Figure_Labels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style_Width.ToJson o)

    ///<summary>Figure_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_Labels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Labels_Style_Background : <code>string</code></summary>
        member this.background = Figure_Labels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Labels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Border : <code>string</code></summary>
        member this.border = Figure_Labels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Labels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Color : <code>string</code></summary>
        member this.color = Figure_Labels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Labels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_Labels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Labels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Labels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Height : <code>int</code></summary>
        member this.height = Figure_Labels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Labels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_Labels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Position : <code>string</code></summary>
        member this.position = Figure_Labels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_Labels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_Labels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_Labels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Labels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Top : <code>string</code></summary>
        member this.top = Figure_Labels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_Labels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_Labels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_Labels_Style_Width : <code>int</code></summary>
        member this.width = Figure_Labels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels_Style.ToJson o)


    ///<summary>Figure_Labels : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
    type Figure_Labels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_Labels_Style(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.labels" (parent.GetPath()))
                |> Option.defaultValue "labels"

        static member ToJson (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            let style = Figure_Labels_Style.ToJson o.style
            sprintf "{\\\"style\\\":%s}" style

        member this.Set (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Labels.ToJson o)


    ///<summary>Figure_Legend_Enabled : <code>bool</code></summary>
    type Figure_Legend_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Enabled.ToJson o)

    ///<summary>Figure_Legend_Align : <code>string</code></summary>
    type Figure_Legend_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Align.ToJson o)

    ///<summary>Figure_Legend_AlignColumns : <code>bool</code></summary>
    type Figure_Legend_AlignColumns(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.alignColumns" (parent.GetPath()))
                |> Option.defaultValue "alignColumns"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_AlignColumns.ToJson o)

    ///<summary>Figure_Legend_Layout : <code>string</code></summary>
    type Figure_Legend_Layout(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.layout" (parent.GetPath()))
                |> Option.defaultValue "layout"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Layout.ToJson o)

    ///<summary>Figure_Legend_BorderColor : <code>string</code></summary>
    type Figure_Legend_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_BorderColor.ToJson o)

    ///<summary>Figure_Legend_BorderRadius : <code>int</code></summary>
    type Figure_Legend_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_BorderRadius.ToJson o)

    ///<summary>Figure_Legend_Navigation_ActiveColor : <code>string</code></summary>
    type Figure_Legend_Navigation_ActiveColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.activeColor" (parent.GetPath()))
                |> Option.defaultValue "activeColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Navigation_ActiveColor.ToJson o)

    ///<summary>Figure_Legend_Navigation_InactiveColor : <code>string</code></summary>
    type Figure_Legend_Navigation_InactiveColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inactiveColor" (parent.GetPath()))
                |> Option.defaultValue "inactiveColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Navigation_InactiveColor.ToJson o)

    ///<summary>Figure_Legend_Navigation : <code>{| activeColor:string; inactiveColor:string |}</code></summary>
    type Figure_Legend_Navigation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Legend_Navigation_ActiveColor : <code>string</code></summary>
        member this.activeColor = Figure_Legend_Navigation_ActiveColor(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Navigation_InactiveColor : <code>string</code></summary>
        member this.inactiveColor = Figure_Legend_Navigation_InactiveColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.navigation" (parent.GetPath()))
                |> Option.defaultValue "navigation"

        static member ToJson (o:{| activeColor:string; inactiveColor:string |}) =
            let activeColor = sprintf "\\\"%s\\\"" o.activeColor
            let inactiveColor = sprintf "\\\"%s\\\"" o.inactiveColor
            sprintf "{\\\"activeColor\\\":%s,\\\"inactiveColor\\\":%s}" activeColor inactiveColor

        member this.Set (o:{| activeColor:string; inactiveColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Navigation.ToJson o)


    ///<summary>Figure_Legend_ItemStyle_Color : <code>string</code></summary>
    type Figure_Legend_ItemStyle_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemStyle_Color.ToJson o)

    ///<summary>Figure_Legend_ItemStyle_Cursor : <code>string</code></summary>
    type Figure_Legend_ItemStyle_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemStyle_Cursor.ToJson o)

    ///<summary>Figure_Legend_ItemStyle_FontSize : <code>string</code></summary>
    type Figure_Legend_ItemStyle_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemStyle_FontSize.ToJson o)

    ///<summary>Figure_Legend_ItemStyle_FontWeight : <code>string</code></summary>
    type Figure_Legend_ItemStyle_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemStyle_FontWeight.ToJson o)

    ///<summary>Figure_Legend_ItemStyle_TextOverflow : <code>string</code></summary>
    type Figure_Legend_ItemStyle_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemStyle_TextOverflow.ToJson o)

    ///<summary>Figure_Legend_ItemStyle_Font : <code>string</code></summary>
    type Figure_Legend_ItemStyle_Font(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.font" (parent.GetPath()))
                |> Option.defaultValue "font"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemStyle_Font.ToJson o)

    ///<summary>Figure_Legend_ItemStyle : <code>{| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}</code></summary>
    type Figure_Legend_ItemStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Legend_ItemStyle_Color : <code>string</code></summary>
        member this.color = Figure_Legend_ItemStyle_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemStyle_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Legend_ItemStyle_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemStyle_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Legend_ItemStyle_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemStyle_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Legend_ItemStyle_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemStyle_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Legend_ItemStyle_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemStyle_Font : <code>string</code></summary>
        member this.font = Figure_Legend_ItemStyle_Font(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.itemStyle" (parent.GetPath()))
                |> Option.defaultValue "itemStyle"

        static member ToJson (o:{| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}) =
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let font = sprintf "\\\"%s\\\"" o.font
            sprintf "{\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontSize\\\":%s,\\\"fontWeight\\\":%s,\\\"textOverflow\\\":%s,\\\"font\\\":%s}" color cursor fontSize fontWeight textOverflow font

        member this.Set (o:{| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemStyle.ToJson o)


    ///<summary>Figure_Legend_ItemHoverStyle_Color : <code>string</code></summary>
    type Figure_Legend_ItemHoverStyle_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemHoverStyle_Color.ToJson o)

    ///<summary>Figure_Legend_ItemHoverStyle : <code>{| color:string |}</code></summary>
    type Figure_Legend_ItemHoverStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Legend_ItemHoverStyle_Color : <code>string</code></summary>
        member this.color = Figure_Legend_ItemHoverStyle_Color(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.itemHoverStyle" (parent.GetPath()))
                |> Option.defaultValue "itemHoverStyle"

        static member ToJson (o:{| color:string |}) =
            let color = sprintf "\\\"%s\\\"" o.color
            sprintf "{\\\"color\\\":%s}" color

        member this.Set (o:{| color:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemHoverStyle.ToJson o)


    ///<summary>Figure_Legend_ItemHiddenStyle_Color : <code>string</code></summary>
    type Figure_Legend_ItemHiddenStyle_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemHiddenStyle_Color.ToJson o)

    ///<summary>Figure_Legend_ItemHiddenStyle : <code>{| color:string |}</code></summary>
    type Figure_Legend_ItemHiddenStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Legend_ItemHiddenStyle_Color : <code>string</code></summary>
        member this.color = Figure_Legend_ItemHiddenStyle_Color(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.itemHiddenStyle" (parent.GetPath()))
                |> Option.defaultValue "itemHiddenStyle"

        static member ToJson (o:{| color:string |}) =
            let color = sprintf "\\\"%s\\\"" o.color
            sprintf "{\\\"color\\\":%s}" color

        member this.Set (o:{| color:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemHiddenStyle.ToJson o)


    ///<summary>Figure_Legend_Shadow : <code>bool</code></summary>
    type Figure_Legend_Shadow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.shadow" (parent.GetPath()))
                |> Option.defaultValue "shadow"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Shadow.ToJson o)

    ///<summary>Figure_Legend_ItemCheckboxStyle_Position : <code>string</code></summary>
    type Figure_Legend_ItemCheckboxStyle_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemCheckboxStyle_Position.ToJson o)

    ///<summary>Figure_Legend_ItemCheckboxStyle_Width : <code>string</code></summary>
    type Figure_Legend_ItemCheckboxStyle_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemCheckboxStyle_Width.ToJson o)

    ///<summary>Figure_Legend_ItemCheckboxStyle_Height : <code>string</code></summary>
    type Figure_Legend_ItemCheckboxStyle_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemCheckboxStyle_Height.ToJson o)

    ///<summary>Figure_Legend_ItemCheckboxStyle : <code>{| position:string; width:string; height:string |}</code></summary>
    type Figure_Legend_ItemCheckboxStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Legend_ItemCheckboxStyle_Position : <code>string</code></summary>
        member this.position = Figure_Legend_ItemCheckboxStyle_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemCheckboxStyle_Width : <code>string</code></summary>
        member this.width = Figure_Legend_ItemCheckboxStyle_Width(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemCheckboxStyle_Height : <code>string</code></summary>
        member this.height = Figure_Legend_ItemCheckboxStyle_Height(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.itemCheckboxStyle" (parent.GetPath()))
                |> Option.defaultValue "itemCheckboxStyle"

        static member ToJson (o:{| position:string; width:string; height:string |}) =
            let position = sprintf "\\\"%s\\\"" o.position
            let width = sprintf "\\\"%s\\\"" o.width
            let height = sprintf "\\\"%s\\\"" o.height
            sprintf "{\\\"position\\\":%s,\\\"width\\\":%s,\\\"height\\\":%s}" position width height

        member this.Set (o:{| position:string; width:string; height:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_ItemCheckboxStyle.ToJson o)


    ///<summary>Figure_Legend_SquareSymbol : <code>bool</code></summary>
    type Figure_Legend_SquareSymbol(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.squareSymbol" (parent.GetPath()))
                |> Option.defaultValue "squareSymbol"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_SquareSymbol.ToJson o)

    ///<summary>Figure_Legend_SymbolPadding : <code>int</code></summary>
    type Figure_Legend_SymbolPadding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbolPadding" (parent.GetPath()))
                |> Option.defaultValue "symbolPadding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_SymbolPadding.ToJson o)

    ///<summary>Figure_Legend_VerticalAlign : <code>string</code></summary>
    type Figure_Legend_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_VerticalAlign.ToJson o)

    ///<summary>Figure_Legend_X : <code>int</code></summary>
    type Figure_Legend_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_X.ToJson o)

    ///<summary>Figure_Legend_Y : <code>int</code></summary>
    type Figure_Legend_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Y.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Background : <code>string</code></summary>
    type Figure_Legend_Title_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Background.ToJson o)

    ///<summary>Figure_Legend_Title_Style_BackgroundColor : <code>string</code></summary>
    type Figure_Legend_Title_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Border : <code>string</code></summary>
    type Figure_Legend_Title_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Border.ToJson o)

    ///<summary>Figure_Legend_Title_Style_BorderRadius : <code>int</code></summary>
    type Figure_Legend_Title_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_BorderRadius.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Color : <code>string</code></summary>
    type Figure_Legend_Title_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Color.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Cursor : <code>string</code></summary>
    type Figure_Legend_Title_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Cursor.ToJson o)

    ///<summary>Figure_Legend_Title_Style_FontFamily : <code>string</code></summary>
    type Figure_Legend_Title_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_FontFamily.ToJson o)

    ///<summary>Figure_Legend_Title_Style_FontWeight : <code>string</code></summary>
    type Figure_Legend_Title_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_FontWeight.ToJson o)

    ///<summary>Figure_Legend_Title_Style_FontSize : <code>string</code></summary>
    type Figure_Legend_Title_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_FontSize.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Height : <code>int</code></summary>
    type Figure_Legend_Title_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Height.ToJson o)

    ///<summary>Figure_Legend_Title_Style_LineWidth : <code>int</code></summary>
    type Figure_Legend_Title_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_LineWidth.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Padding : <code>string</code></summary>
    type Figure_Legend_Title_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Padding.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Position : <code>string</code></summary>
    type Figure_Legend_Title_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Position.ToJson o)

    ///<summary>Figure_Legend_Title_Style_TextAlign : <code>string</code></summary>
    type Figure_Legend_Title_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_TextAlign.ToJson o)

    ///<summary>Figure_Legend_Title_Style_TextDecoration : <code>string</code></summary>
    type Figure_Legend_Title_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_TextDecoration.ToJson o)

    ///<summary>Figure_Legend_Title_Style_TextOutline : <code>string</code></summary>
    type Figure_Legend_Title_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_TextOutline.ToJson o)

    ///<summary>Figure_Legend_Title_Style_TextOverflow : <code>string</code></summary>
    type Figure_Legend_Title_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_TextOverflow.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Top : <code>string</code></summary>
    type Figure_Legend_Title_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Top.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Transition : <code>string</code></summary>
    type Figure_Legend_Title_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Transition.ToJson o)

    ///<summary>Figure_Legend_Title_Style_WhiteSpace : <code>string</code></summary>
    type Figure_Legend_Title_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_Legend_Title_Style_Width : <code>int</code></summary>
    type Figure_Legend_Title_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style_Width.ToJson o)

    ///<summary>Figure_Legend_Title_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_Legend_Title_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Legend_Title_Style_Background : <code>string</code></summary>
        member this.background = Figure_Legend_Title_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Legend_Title_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Border : <code>string</code></summary>
        member this.border = Figure_Legend_Title_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Legend_Title_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Color : <code>string</code></summary>
        member this.color = Figure_Legend_Title_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Legend_Title_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_Legend_Title_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Legend_Title_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Legend_Title_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Height : <code>int</code></summary>
        member this.height = Figure_Legend_Title_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Legend_Title_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_Legend_Title_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Position : <code>string</code></summary>
        member this.position = Figure_Legend_Title_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_Legend_Title_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_Legend_Title_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_Legend_Title_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Legend_Title_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Top : <code>string</code></summary>
        member this.top = Figure_Legend_Title_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_Legend_Title_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_Legend_Title_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title_Style_Width : <code>int</code></summary>
        member this.width = Figure_Legend_Title_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title_Style.ToJson o)


    ///<summary>Figure_Legend_Title : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
    type Figure_Legend_Title(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Legend_Title_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_Legend_Title_Style(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.title" (parent.GetPath()))
                |> Option.defaultValue "title"

        static member ToJson (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            let style = Figure_Legend_Title_Style.ToJson o.style
            sprintf "{\\\"style\\\":%s}" style

        member this.Set (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_Title.ToJson o)


    ///<summary>Figure_Legend_BackgroundColor : <code>string</code></summary>
    type Figure_Legend_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend_BackgroundColor.ToJson o)

    ///<summary>Figure_Legend : <code>{| enabled:bool; align:string; alignColumns:bool; layout:string; borderColor:string; borderRadius:int; navigation: {| activeColor:string; inactiveColor:string |}; itemStyle: {| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}; itemHoverStyle: {| color:string |}; itemHiddenStyle: {| color:string |}; shadow:bool; itemCheckboxStyle: {| position:string; width:string; height:string |}; squareSymbol:bool; symbolPadding:int; verticalAlign:string; x:int; y:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; backgroundColor:string |}</code></summary>
    type Figure_Legend(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Legend_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_Legend_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Align : <code>string</code></summary>
        member this.align = Figure_Legend_Align(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_AlignColumns : <code>bool</code></summary>
        member this.alignColumns = Figure_Legend_AlignColumns(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Layout : <code>string</code></summary>
        member this.layout = Figure_Legend_Layout(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_Legend_BorderColor(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Legend_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Navigation : <code>{| activeColor:string; inactiveColor:string |}</code></summary>
        member this.navigation = Figure_Legend_Navigation(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemStyle : <code>{| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}</code></summary>
        member this.itemStyle = Figure_Legend_ItemStyle(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemHoverStyle : <code>{| color:string |}</code></summary>
        member this.itemHoverStyle = Figure_Legend_ItemHoverStyle(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemHiddenStyle : <code>{| color:string |}</code></summary>
        member this.itemHiddenStyle = Figure_Legend_ItemHiddenStyle(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Shadow : <code>bool</code></summary>
        member this.shadow = Figure_Legend_Shadow(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_ItemCheckboxStyle : <code>{| position:string; width:string; height:string |}</code></summary>
        member this.itemCheckboxStyle = Figure_Legend_ItemCheckboxStyle(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_SquareSymbol : <code>bool</code></summary>
        member this.squareSymbol = Figure_Legend_SquareSymbol(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_SymbolPadding : <code>int</code></summary>
        member this.symbolPadding = Figure_Legend_SymbolPadding(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_Legend_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_X : <code>int</code></summary>
        member this.x = Figure_Legend_X(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Y : <code>int</code></summary>
        member this.y = Figure_Legend_Y(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_Title : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
        member this.title = Figure_Legend_Title(Some (this :> IFigureItem))

        ///<summary>Figure_Legend_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Legend_BackgroundColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.legend" (parent.GetPath()))
                |> Option.defaultValue "legend"

        static member ToJson (o:{| enabled:bool; align:string; alignColumns:bool; layout:string; borderColor:string; borderRadius:int; navigation: {| activeColor:string; inactiveColor:string |}; itemStyle: {| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}; itemHoverStyle: {| color:string |}; itemHiddenStyle: {| color:string |}; shadow:bool; itemCheckboxStyle: {| position:string; width:string; height:string |}; squareSymbol:bool; symbolPadding:int; verticalAlign:string; x:int; y:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; backgroundColor:string |}) =
            let enabled = sprintf "%b" o.enabled
            let align = sprintf "\\\"%s\\\"" o.align
            let alignColumns = sprintf "%b" o.alignColumns
            let layout = sprintf "\\\"%s\\\"" o.layout
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            let borderRadius = sprintf "%i" o.borderRadius
            let navigation = Figure_Legend_Navigation.ToJson o.navigation
            let itemStyle = Figure_Legend_ItemStyle.ToJson o.itemStyle
            let itemHoverStyle = Figure_Legend_ItemHoverStyle.ToJson o.itemHoverStyle
            let itemHiddenStyle = Figure_Legend_ItemHiddenStyle.ToJson o.itemHiddenStyle
            let shadow = sprintf "%b" o.shadow
            let itemCheckboxStyle = Figure_Legend_ItemCheckboxStyle.ToJson o.itemCheckboxStyle
            let squareSymbol = sprintf "%b" o.squareSymbol
            let symbolPadding = sprintf "%i" o.symbolPadding
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            let title = Figure_Legend_Title.ToJson o.title
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            sprintf "{\\\"enabled\\\":%s,\\\"align\\\":%s,\\\"alignColumns\\\":%s,\\\"layout\\\":%s,\\\"borderColor\\\":%s,\\\"borderRadius\\\":%s,\\\"navigation\\\":%s,\\\"itemStyle\\\":%s,\\\"itemHoverStyle\\\":%s,\\\"itemHiddenStyle\\\":%s,\\\"shadow\\\":%s,\\\"itemCheckboxStyle\\\":%s,\\\"squareSymbol\\\":%s,\\\"symbolPadding\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s,\\\"title\\\":%s,\\\"backgroundColor\\\":%s}" enabled align alignColumns layout borderColor borderRadius navigation itemStyle itemHoverStyle itemHiddenStyle shadow itemCheckboxStyle squareSymbol symbolPadding verticalAlign x y title backgroundColor

        member this.Set (o:{| enabled:bool; align:string; alignColumns:bool; layout:string; borderColor:string; borderRadius:int; navigation: {| activeColor:string; inactiveColor:string |}; itemStyle: {| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}; itemHoverStyle: {| color:string |}; itemHiddenStyle: {| color:string |}; shadow:bool; itemCheckboxStyle: {| position:string; width:string; height:string |}; squareSymbol:bool; symbolPadding:int; verticalAlign:string; x:int; y:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; backgroundColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Legend.ToJson o)


    ///<summary>Figure_Loading_LabelStyle_FontWeight : <code>string</code></summary>
    type Figure_Loading_LabelStyle_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_LabelStyle_FontWeight.ToJson o)

    ///<summary>Figure_Loading_LabelStyle_Position : <code>string</code></summary>
    type Figure_Loading_LabelStyle_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_LabelStyle_Position.ToJson o)

    ///<summary>Figure_Loading_LabelStyle_Top : <code>string</code></summary>
    type Figure_Loading_LabelStyle_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_LabelStyle_Top.ToJson o)

    ///<summary>Figure_Loading_LabelStyle : <code>{| fontWeight:string; position:string; top:string |}</code></summary>
    type Figure_Loading_LabelStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Loading_LabelStyle_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Loading_LabelStyle_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_LabelStyle_Position : <code>string</code></summary>
        member this.position = Figure_Loading_LabelStyle_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_LabelStyle_Top : <code>string</code></summary>
        member this.top = Figure_Loading_LabelStyle_Top(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.labelStyle" (parent.GetPath()))
                |> Option.defaultValue "labelStyle"

        static member ToJson (o:{| fontWeight:string; position:string; top:string |}) =
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let position = sprintf "\\\"%s\\\"" o.position
            let top = sprintf "\\\"%s\\\"" o.top
            sprintf "{\\\"fontWeight\\\":%s,\\\"position\\\":%s,\\\"top\\\":%s}" fontWeight position top

        member this.Set (o:{| fontWeight:string; position:string; top:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_LabelStyle.ToJson o)


    ///<summary>Figure_Loading_Style_Background : <code>string</code></summary>
    type Figure_Loading_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Background.ToJson o)

    ///<summary>Figure_Loading_Style_BackgroundColor : <code>string</code></summary>
    type Figure_Loading_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_Loading_Style_Border : <code>string</code></summary>
    type Figure_Loading_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Border.ToJson o)

    ///<summary>Figure_Loading_Style_BorderRadius : <code>int</code></summary>
    type Figure_Loading_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_BorderRadius.ToJson o)

    ///<summary>Figure_Loading_Style_Color : <code>string</code></summary>
    type Figure_Loading_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Color.ToJson o)

    ///<summary>Figure_Loading_Style_Cursor : <code>string</code></summary>
    type Figure_Loading_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Cursor.ToJson o)

    ///<summary>Figure_Loading_Style_FontFamily : <code>string</code></summary>
    type Figure_Loading_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_FontFamily.ToJson o)

    ///<summary>Figure_Loading_Style_FontWeight : <code>string</code></summary>
    type Figure_Loading_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_FontWeight.ToJson o)

    ///<summary>Figure_Loading_Style_FontSize : <code>string</code></summary>
    type Figure_Loading_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_FontSize.ToJson o)

    ///<summary>Figure_Loading_Style_Height : <code>int</code></summary>
    type Figure_Loading_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Height.ToJson o)

    ///<summary>Figure_Loading_Style_LineWidth : <code>int</code></summary>
    type Figure_Loading_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_LineWidth.ToJson o)

    ///<summary>Figure_Loading_Style_Padding : <code>string</code></summary>
    type Figure_Loading_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Padding.ToJson o)

    ///<summary>Figure_Loading_Style_Position : <code>string</code></summary>
    type Figure_Loading_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Position.ToJson o)

    ///<summary>Figure_Loading_Style_TextAlign : <code>string</code></summary>
    type Figure_Loading_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_TextAlign.ToJson o)

    ///<summary>Figure_Loading_Style_TextDecoration : <code>string</code></summary>
    type Figure_Loading_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_TextDecoration.ToJson o)

    ///<summary>Figure_Loading_Style_TextOutline : <code>string</code></summary>
    type Figure_Loading_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_TextOutline.ToJson o)

    ///<summary>Figure_Loading_Style_TextOverflow : <code>string</code></summary>
    type Figure_Loading_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_TextOverflow.ToJson o)

    ///<summary>Figure_Loading_Style_Top : <code>string</code></summary>
    type Figure_Loading_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Top.ToJson o)

    ///<summary>Figure_Loading_Style_Transition : <code>string</code></summary>
    type Figure_Loading_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Transition.ToJson o)

    ///<summary>Figure_Loading_Style_WhiteSpace : <code>string</code></summary>
    type Figure_Loading_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_Loading_Style_Width : <code>int</code></summary>
    type Figure_Loading_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style_Width.ToJson o)

    ///<summary>Figure_Loading_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_Loading_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Loading_Style_Background : <code>string</code></summary>
        member this.background = Figure_Loading_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Loading_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Border : <code>string</code></summary>
        member this.border = Figure_Loading_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Loading_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Color : <code>string</code></summary>
        member this.color = Figure_Loading_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Loading_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_Loading_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Loading_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Loading_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Height : <code>int</code></summary>
        member this.height = Figure_Loading_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Loading_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_Loading_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Position : <code>string</code></summary>
        member this.position = Figure_Loading_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_Loading_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_Loading_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_Loading_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Loading_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Top : <code>string</code></summary>
        member this.top = Figure_Loading_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_Loading_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_Loading_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style_Width : <code>int</code></summary>
        member this.width = Figure_Loading_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading_Style.ToJson o)


    ///<summary>Figure_Loading : <code>{| labelStyle: {| fontWeight:string; position:string; top:string |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
    type Figure_Loading(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Loading_LabelStyle : <code>{| fontWeight:string; position:string; top:string |}</code></summary>
        member this.labelStyle = Figure_Loading_LabelStyle(Some (this :> IFigureItem))

        ///<summary>Figure_Loading_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_Loading_Style(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.loading" (parent.GetPath()))
                |> Option.defaultValue "loading"

        static member ToJson (o:{| labelStyle: {| fontWeight:string; position:string; top:string |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            let labelStyle = Figure_Loading_LabelStyle.ToJson o.labelStyle
            let style = Figure_Loading_Style.ToJson o.style
            sprintf "{\\\"labelStyle\\\":%s,\\\"style\\\":%s}" labelStyle style

        member this.Set (o:{| labelStyle: {| fontWeight:string; position:string; top:string |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Loading.ToJson o)


    ///<summary>Figure_Tooltip_Enabled : <code>bool</code></summary>
    type Figure_Tooltip_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Enabled.ToJson o)

    ///<summary>Figure_Tooltip_Animation : <code>bool</code></summary>
    type Figure_Tooltip_Animation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animation" (parent.GetPath()))
                |> Option.defaultValue "animation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Animation.ToJson o)

    ///<summary>Figure_Tooltip_BorderRadius : <code>int</code></summary>
    type Figure_Tooltip_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_BorderRadius.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats_Millisecond : <code>string</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats_Millisecond(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.millisecond" (parent.GetPath()))
                |> Option.defaultValue "millisecond"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats_Millisecond.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats_Second : <code>string</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats_Second(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.second" (parent.GetPath()))
                |> Option.defaultValue "second"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats_Second.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats_Minute : <code>string</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats_Minute(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minute" (parent.GetPath()))
                |> Option.defaultValue "minute"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats_Minute.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats_Hour : <code>string</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats_Hour(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hour" (parent.GetPath()))
                |> Option.defaultValue "hour"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats_Hour.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats_Day : <code>string</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats_Day(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.day" (parent.GetPath()))
                |> Option.defaultValue "day"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats_Day.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats_Week : <code>string</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats_Week(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.week" (parent.GetPath()))
                |> Option.defaultValue "week"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats_Week.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats_Month : <code>string</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats_Month(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.month" (parent.GetPath()))
                |> Option.defaultValue "month"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats_Month.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats_Year : <code>string</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats_Year(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.year" (parent.GetPath()))
                |> Option.defaultValue "year"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats_Year.ToJson o)

    ///<summary>Figure_Tooltip_DateTimeLabelFormats : <code>{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}</code></summary>
    type Figure_Tooltip_DateTimeLabelFormats(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Tooltip_DateTimeLabelFormats_Millisecond : <code>string</code></summary>
        member this.millisecond = Figure_Tooltip_DateTimeLabelFormats_Millisecond(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_DateTimeLabelFormats_Second : <code>string</code></summary>
        member this.second = Figure_Tooltip_DateTimeLabelFormats_Second(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_DateTimeLabelFormats_Minute : <code>string</code></summary>
        member this.minute = Figure_Tooltip_DateTimeLabelFormats_Minute(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_DateTimeLabelFormats_Hour : <code>string</code></summary>
        member this.hour = Figure_Tooltip_DateTimeLabelFormats_Hour(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_DateTimeLabelFormats_Day : <code>string</code></summary>
        member this.day = Figure_Tooltip_DateTimeLabelFormats_Day(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_DateTimeLabelFormats_Week : <code>string</code></summary>
        member this.week = Figure_Tooltip_DateTimeLabelFormats_Week(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_DateTimeLabelFormats_Month : <code>string</code></summary>
        member this.month = Figure_Tooltip_DateTimeLabelFormats_Month(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_DateTimeLabelFormats_Year : <code>string</code></summary>
        member this.year = Figure_Tooltip_DateTimeLabelFormats_Year(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dateTimeLabelFormats" (parent.GetPath()))
                |> Option.defaultValue "dateTimeLabelFormats"

        static member ToJson (o:{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}) =
            let millisecond = sprintf "\\\"%s\\\"" o.millisecond
            let second = sprintf "\\\"%s\\\"" o.second
            let minute = sprintf "\\\"%s\\\"" o.minute
            let hour = sprintf "\\\"%s\\\"" o.hour
            let day = sprintf "\\\"%s\\\"" o.day
            let week = sprintf "\\\"%s\\\"" o.week
            let month = sprintf "\\\"%s\\\"" o.month
            let year = sprintf "\\\"%s\\\"" o.year
            sprintf "{\\\"millisecond\\\":%s,\\\"second\\\":%s,\\\"minute\\\":%s,\\\"hour\\\":%s,\\\"day\\\":%s,\\\"week\\\":%s,\\\"month\\\":%s,\\\"year\\\":%s}" millisecond second minute hour day week month year

        member this.Set (o:{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_DateTimeLabelFormats.ToJson o)


    ///<summary>Figure_Tooltip_FooterFormat : <code>string</code></summary>
    type Figure_Tooltip_FooterFormat(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.footerFormat" (parent.GetPath()))
                |> Option.defaultValue "footerFormat"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_FooterFormat.ToJson o)

    ///<summary>Figure_Tooltip_Padding : <code>int</code></summary>
    type Figure_Tooltip_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Padding.ToJson o)

    ///<summary>Figure_Tooltip_Snap : <code>int</code></summary>
    type Figure_Tooltip_Snap(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.snap" (parent.GetPath()))
                |> Option.defaultValue "snap"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Snap.ToJson o)

    ///<summary>Figure_Tooltip_HeaderFormat : <code>string</code></summary>
    type Figure_Tooltip_HeaderFormat(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.headerFormat" (parent.GetPath()))
                |> Option.defaultValue "headerFormat"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_HeaderFormat.ToJson o)

    ///<summary>Figure_Tooltip_PointFormat : <code>string</code></summary>
    type Figure_Tooltip_PointFormat(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointFormat" (parent.GetPath()))
                |> Option.defaultValue "pointFormat"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_PointFormat.ToJson o)

    ///<summary>Figure_Tooltip_BackgroundColor : <code>string</code></summary>
    type Figure_Tooltip_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_BackgroundColor.ToJson o)

    ///<summary>Figure_Tooltip_BorderWidth : <code>int</code></summary>
    type Figure_Tooltip_BorderWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderWidth" (parent.GetPath()))
                |> Option.defaultValue "borderWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_BorderWidth.ToJson o)

    ///<summary>Figure_Tooltip_Shadow : <code>bool</code></summary>
    type Figure_Tooltip_Shadow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.shadow" (parent.GetPath()))
                |> Option.defaultValue "shadow"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Shadow.ToJson o)

    ///<summary>Figure_Tooltip_Style_Background : <code>string</code></summary>
    type Figure_Tooltip_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Background.ToJson o)

    ///<summary>Figure_Tooltip_Style_BackgroundColor : <code>string</code></summary>
    type Figure_Tooltip_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_Tooltip_Style_Border : <code>string</code></summary>
    type Figure_Tooltip_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Border.ToJson o)

    ///<summary>Figure_Tooltip_Style_BorderRadius : <code>int</code></summary>
    type Figure_Tooltip_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_BorderRadius.ToJson o)

    ///<summary>Figure_Tooltip_Style_Color : <code>string</code></summary>
    type Figure_Tooltip_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Color.ToJson o)

    ///<summary>Figure_Tooltip_Style_Cursor : <code>string</code></summary>
    type Figure_Tooltip_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Cursor.ToJson o)

    ///<summary>Figure_Tooltip_Style_FontFamily : <code>string</code></summary>
    type Figure_Tooltip_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_FontFamily.ToJson o)

    ///<summary>Figure_Tooltip_Style_FontWeight : <code>string</code></summary>
    type Figure_Tooltip_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_FontWeight.ToJson o)

    ///<summary>Figure_Tooltip_Style_FontSize : <code>string</code></summary>
    type Figure_Tooltip_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_FontSize.ToJson o)

    ///<summary>Figure_Tooltip_Style_Height : <code>int</code></summary>
    type Figure_Tooltip_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Height.ToJson o)

    ///<summary>Figure_Tooltip_Style_LineWidth : <code>int</code></summary>
    type Figure_Tooltip_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_LineWidth.ToJson o)

    ///<summary>Figure_Tooltip_Style_Padding : <code>string</code></summary>
    type Figure_Tooltip_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Padding.ToJson o)

    ///<summary>Figure_Tooltip_Style_Position : <code>string</code></summary>
    type Figure_Tooltip_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Position.ToJson o)

    ///<summary>Figure_Tooltip_Style_TextAlign : <code>string</code></summary>
    type Figure_Tooltip_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_TextAlign.ToJson o)

    ///<summary>Figure_Tooltip_Style_TextDecoration : <code>string</code></summary>
    type Figure_Tooltip_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_TextDecoration.ToJson o)

    ///<summary>Figure_Tooltip_Style_TextOutline : <code>string</code></summary>
    type Figure_Tooltip_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_TextOutline.ToJson o)

    ///<summary>Figure_Tooltip_Style_TextOverflow : <code>string</code></summary>
    type Figure_Tooltip_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_TextOverflow.ToJson o)

    ///<summary>Figure_Tooltip_Style_Top : <code>string</code></summary>
    type Figure_Tooltip_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Top.ToJson o)

    ///<summary>Figure_Tooltip_Style_Transition : <code>string</code></summary>
    type Figure_Tooltip_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Transition.ToJson o)

    ///<summary>Figure_Tooltip_Style_WhiteSpace : <code>string</code></summary>
    type Figure_Tooltip_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_Tooltip_Style_Width : <code>int</code></summary>
    type Figure_Tooltip_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style_Width.ToJson o)

    ///<summary>Figure_Tooltip_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_Tooltip_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Tooltip_Style_Background : <code>string</code></summary>
        member this.background = Figure_Tooltip_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Tooltip_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Border : <code>string</code></summary>
        member this.border = Figure_Tooltip_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Tooltip_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Color : <code>string</code></summary>
        member this.color = Figure_Tooltip_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Tooltip_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_Tooltip_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Tooltip_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Tooltip_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Height : <code>int</code></summary>
        member this.height = Figure_Tooltip_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Tooltip_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_Tooltip_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Position : <code>string</code></summary>
        member this.position = Figure_Tooltip_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_Tooltip_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_Tooltip_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_Tooltip_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Tooltip_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Top : <code>string</code></summary>
        member this.top = Figure_Tooltip_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_Tooltip_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_Tooltip_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style_Width : <code>int</code></summary>
        member this.width = Figure_Tooltip_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip_Style.ToJson o)


    ///<summary>Figure_Tooltip : <code>{| enabled:bool; animation:bool; borderRadius:int; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; footerFormat:string; padding:int; snap:int; headerFormat:string; pointFormat:string; backgroundColor:string; borderWidth:int; shadow:bool; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
    type Figure_Tooltip(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Tooltip_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_Tooltip_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Animation : <code>bool</code></summary>
        member this.animation = Figure_Tooltip_Animation(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Tooltip_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_DateTimeLabelFormats : <code>{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}</code></summary>
        member this.dateTimeLabelFormats = Figure_Tooltip_DateTimeLabelFormats(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_FooterFormat : <code>string</code></summary>
        member this.footerFormat = Figure_Tooltip_FooterFormat(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Padding : <code>int</code></summary>
        member this.padding = Figure_Tooltip_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Snap : <code>int</code></summary>
        member this.snap = Figure_Tooltip_Snap(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_HeaderFormat : <code>string</code></summary>
        member this.headerFormat = Figure_Tooltip_HeaderFormat(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_PointFormat : <code>string</code></summary>
        member this.pointFormat = Figure_Tooltip_PointFormat(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Tooltip_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_BorderWidth : <code>int</code></summary>
        member this.borderWidth = Figure_Tooltip_BorderWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Shadow : <code>bool</code></summary>
        member this.shadow = Figure_Tooltip_Shadow(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_Tooltip_Style(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tooltip" (parent.GetPath()))
                |> Option.defaultValue "tooltip"

        static member ToJson (o:{| enabled:bool; animation:bool; borderRadius:int; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; footerFormat:string; padding:int; snap:int; headerFormat:string; pointFormat:string; backgroundColor:string; borderWidth:int; shadow:bool; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            let enabled = sprintf "%b" o.enabled
            let animation = sprintf "%b" o.animation
            let borderRadius = sprintf "%i" o.borderRadius
            let dateTimeLabelFormats = Figure_Tooltip_DateTimeLabelFormats.ToJson o.dateTimeLabelFormats
            let footerFormat = sprintf "\\\"%s\\\"" o.footerFormat
            let padding = sprintf "%i" o.padding
            let snap = sprintf "%i" o.snap
            let headerFormat = sprintf "\\\"%s\\\"" o.headerFormat
            let pointFormat = sprintf "\\\"%s\\\"" o.pointFormat
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let borderWidth = sprintf "%i" o.borderWidth
            let shadow = sprintf "%b" o.shadow
            let style = Figure_Tooltip_Style.ToJson o.style
            sprintf "{\\\"enabled\\\":%s,\\\"animation\\\":%s,\\\"borderRadius\\\":%s,\\\"dateTimeLabelFormats\\\":%s,\\\"footerFormat\\\":%s,\\\"padding\\\":%s,\\\"snap\\\":%s,\\\"headerFormat\\\":%s,\\\"pointFormat\\\":%s,\\\"backgroundColor\\\":%s,\\\"borderWidth\\\":%s,\\\"shadow\\\":%s,\\\"style\\\":%s}" enabled animation borderRadius dateTimeLabelFormats footerFormat padding snap headerFormat pointFormat backgroundColor borderWidth shadow style

        member this.Set (o:{| enabled:bool; animation:bool; borderRadius:int; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; footerFormat:string; padding:int; snap:int; headerFormat:string; pointFormat:string; backgroundColor:string; borderWidth:int; shadow:bool; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Tooltip.ToJson o)


    ///<summary>Figure_Credits_Enabled : <code>bool</code></summary>
    type Figure_Credits_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Enabled.ToJson o)

    ///<summary>Figure_Credits_Href : <code>string</code></summary>
    type Figure_Credits_Href(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.href" (parent.GetPath()))
                |> Option.defaultValue "href"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Href.ToJson o)

    ///<summary>Figure_Credits_Position_Align : <code>string</code></summary>
    type Figure_Credits_Position_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Position_Align.ToJson o)

    ///<summary>Figure_Credits_Position_X : <code>int</code></summary>
    type Figure_Credits_Position_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Position_X.ToJson o)

    ///<summary>Figure_Credits_Position_VerticalAlign : <code>string</code></summary>
    type Figure_Credits_Position_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Position_VerticalAlign.ToJson o)

    ///<summary>Figure_Credits_Position_Y : <code>int</code></summary>
    type Figure_Credits_Position_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Position_Y.ToJson o)

    ///<summary>Figure_Credits_Position : <code>{| align:string; x:int; verticalAlign:string; y:int |}</code></summary>
    type Figure_Credits_Position(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Credits_Position_Align : <code>string</code></summary>
        member this.align = Figure_Credits_Position_Align(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Position_X : <code>int</code></summary>
        member this.x = Figure_Credits_Position_X(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Position_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_Credits_Position_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Position_Y : <code>int</code></summary>
        member this.y = Figure_Credits_Position_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:{| align:string; x:int; verticalAlign:string; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let x = sprintf "%i" o.x
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"x\\\":%s,\\\"verticalAlign\\\":%s,\\\"y\\\":%s}" align x verticalAlign y

        member this.Set (o:{| align:string; x:int; verticalAlign:string; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Position.ToJson o)


    ///<summary>Figure_Credits_Style_Background : <code>string</code></summary>
    type Figure_Credits_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Background.ToJson o)

    ///<summary>Figure_Credits_Style_BackgroundColor : <code>string</code></summary>
    type Figure_Credits_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_Credits_Style_Border : <code>string</code></summary>
    type Figure_Credits_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Border.ToJson o)

    ///<summary>Figure_Credits_Style_BorderRadius : <code>int</code></summary>
    type Figure_Credits_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_BorderRadius.ToJson o)

    ///<summary>Figure_Credits_Style_Color : <code>string</code></summary>
    type Figure_Credits_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Color.ToJson o)

    ///<summary>Figure_Credits_Style_Cursor : <code>string</code></summary>
    type Figure_Credits_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Cursor.ToJson o)

    ///<summary>Figure_Credits_Style_FontFamily : <code>string</code></summary>
    type Figure_Credits_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_FontFamily.ToJson o)

    ///<summary>Figure_Credits_Style_FontWeight : <code>string</code></summary>
    type Figure_Credits_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_FontWeight.ToJson o)

    ///<summary>Figure_Credits_Style_FontSize : <code>string</code></summary>
    type Figure_Credits_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_FontSize.ToJson o)

    ///<summary>Figure_Credits_Style_Height : <code>int</code></summary>
    type Figure_Credits_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Height.ToJson o)

    ///<summary>Figure_Credits_Style_LineWidth : <code>int</code></summary>
    type Figure_Credits_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_LineWidth.ToJson o)

    ///<summary>Figure_Credits_Style_Padding : <code>string</code></summary>
    type Figure_Credits_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Padding.ToJson o)

    ///<summary>Figure_Credits_Style_Position : <code>string</code></summary>
    type Figure_Credits_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Position.ToJson o)

    ///<summary>Figure_Credits_Style_TextAlign : <code>string</code></summary>
    type Figure_Credits_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_TextAlign.ToJson o)

    ///<summary>Figure_Credits_Style_TextDecoration : <code>string</code></summary>
    type Figure_Credits_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_TextDecoration.ToJson o)

    ///<summary>Figure_Credits_Style_TextOutline : <code>string</code></summary>
    type Figure_Credits_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_TextOutline.ToJson o)

    ///<summary>Figure_Credits_Style_TextOverflow : <code>string</code></summary>
    type Figure_Credits_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_TextOverflow.ToJson o)

    ///<summary>Figure_Credits_Style_Top : <code>string</code></summary>
    type Figure_Credits_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Top.ToJson o)

    ///<summary>Figure_Credits_Style_Transition : <code>string</code></summary>
    type Figure_Credits_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Transition.ToJson o)

    ///<summary>Figure_Credits_Style_WhiteSpace : <code>string</code></summary>
    type Figure_Credits_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_Credits_Style_Width : <code>int</code></summary>
    type Figure_Credits_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style_Width.ToJson o)

    ///<summary>Figure_Credits_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_Credits_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Credits_Style_Background : <code>string</code></summary>
        member this.background = Figure_Credits_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Credits_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Border : <code>string</code></summary>
        member this.border = Figure_Credits_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_Credits_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Color : <code>string</code></summary>
        member this.color = Figure_Credits_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Credits_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_Credits_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_Credits_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Credits_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Height : <code>int</code></summary>
        member this.height = Figure_Credits_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Credits_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_Credits_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Position : <code>string</code></summary>
        member this.position = Figure_Credits_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_Credits_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_Credits_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_Credits_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_Credits_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Top : <code>string</code></summary>
        member this.top = Figure_Credits_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_Credits_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_Credits_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style_Width : <code>int</code></summary>
        member this.width = Figure_Credits_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Style.ToJson o)


    ///<summary>Figure_Credits_Text : <code>string</code></summary>
    type Figure_Credits_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits_Text.ToJson o)

    ///<summary>Figure_Credits : <code>{| enabled:bool; href:string; position: {| align:string; x:int; verticalAlign:string; y:int |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}</code></summary>
    type Figure_Credits(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Credits_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_Credits_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Href : <code>string</code></summary>
        member this.href = Figure_Credits_Href(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Position : <code>{| align:string; x:int; verticalAlign:string; y:int |}</code></summary>
        member this.position = Figure_Credits_Position(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_Credits_Style(Some (this :> IFigureItem))

        ///<summary>Figure_Credits_Text : <code>string</code></summary>
        member this.text = Figure_Credits_Text(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.credits" (parent.GetPath()))
                |> Option.defaultValue "credits"

        static member ToJson (o:{| enabled:bool; href:string; position: {| align:string; x:int; verticalAlign:string; y:int |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}) =
            let enabled = sprintf "%b" o.enabled
            let href = sprintf "\\\"%s\\\"" o.href
            let position = Figure_Credits_Position.ToJson o.position
            let style = Figure_Credits_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            sprintf "{\\\"enabled\\\":%s,\\\"href\\\":%s,\\\"position\\\":%s,\\\"style\\\":%s,\\\"text\\\":%s}" enabled href position style text

        member this.Set (o:{| enabled:bool; href:string; position: {| align:string; x:int; verticalAlign:string; y:int |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Credits.ToJson o)


    ///<summary>Figure_Navigation_ButtonOptions_Theme_Padding : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Padding.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X1 : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x1" (parent.GetPath()))
                |> Option.defaultValue "x1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X1.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y1 : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y1" (parent.GetPath()))
                |> Option.defaultValue "y1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y1.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X2 : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x2" (parent.GetPath()))
                |> Option.defaultValue "x2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X2.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y2 : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y2" (parent.GetPath()))
                |> Option.defaultValue "y2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y2.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X1 : <code>int</code></summary>
        member this.x1 = Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X1(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y1 : <code>int</code></summary>
        member this.y1 = Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y1(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X2 : <code>int</code></summary>
        member this.x2 = Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_X2(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y2 : <code>int</code></summary>
        member this.y2 = Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient_Y2(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linearGradient" (parent.GetPath()))
                |> Option.defaultValue "linearGradient"

        static member ToJson (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            let x1 = sprintf "%i" o.x1
            let y1 = sprintf "%i" o.y1
            let x2 = sprintf "%i" o.x2
            let y2 = sprintf "%i" o.y2
            sprintf "{\\\"x1\\\":%s,\\\"y1\\\":%s,\\\"x2\\\":%s,\\\"y2\\\":%s}" x1 y1 x2 y2

        member this.Set (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient.ToJson o)


    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item_Item : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item_Item.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item : <code>int seq</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_Stops : <code>int seq seq</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Navigation_ButtonOptions_Theme_Fill_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Fill(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
        member this.linearGradient = Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_Navigation_ButtonOptions_Theme_Fill_Stops(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fill" (parent.GetPath()))
                |> Option.defaultValue "fill"

        static member ToJson (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            let linearGradient = Figure_Navigation_ButtonOptions_Theme_Fill_LinearGradient.ToJson o.linearGradient
            let stops = Figure_Navigation_ButtonOptions_Theme_Fill_Stops.ToJson o.stops
            sprintf "{\\\"linearGradient\\\":%s,\\\"stops\\\":%s}" linearGradient stops

        member this.Set (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Fill.ToJson o)


    ///<summary>Figure_Navigation_ButtonOptions_Theme_Stroke : <code>string</code></summary>
    type Figure_Navigation_ButtonOptions_Theme_Stroke(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stroke" (parent.GetPath()))
                |> Option.defaultValue "stroke"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme_Stroke.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Theme : <code>{| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}</code></summary>
    type Figure_Navigation_ButtonOptions_Theme(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigation_ButtonOptions_Theme_Padding : <code>int</code></summary>
        member this.padding = Figure_Navigation_ButtonOptions_Theme_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Theme_Fill : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
        member this.fill = Figure_Navigation_ButtonOptions_Theme_Fill(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Theme_Stroke : <code>string</code></summary>
        member this.stroke = Figure_Navigation_ButtonOptions_Theme_Stroke(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.theme" (parent.GetPath()))
                |> Option.defaultValue "theme"

        static member ToJson (o:{| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}) =
            let padding = sprintf "%i" o.padding
            let fill = Figure_Navigation_ButtonOptions_Theme_Fill.ToJson o.fill
            let stroke = sprintf "\\\"%s\\\"" o.stroke
            sprintf "{\\\"padding\\\":%s,\\\"fill\\\":%s,\\\"stroke\\\":%s}" padding fill stroke

        member this.Set (o:{| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Theme.ToJson o)


    ///<summary>Figure_Navigation_ButtonOptions_SymbolSize : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_SymbolSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbolSize" (parent.GetPath()))
                |> Option.defaultValue "symbolSize"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_SymbolSize.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_SymbolX : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_SymbolX(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbolX" (parent.GetPath()))
                |> Option.defaultValue "symbolX"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_SymbolX.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_SymbolY : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_SymbolY(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbolY" (parent.GetPath()))
                |> Option.defaultValue "symbolY"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_SymbolY.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Align : <code>string</code></summary>
    type Figure_Navigation_ButtonOptions_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Align.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_ButtonSpacing : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_ButtonSpacing(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.buttonSpacing" (parent.GetPath()))
                |> Option.defaultValue "buttonSpacing"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_ButtonSpacing.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Height : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Height.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_VerticalAlign : <code>string</code></summary>
    type Figure_Navigation_ButtonOptions_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_VerticalAlign.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_Width : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_Width.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_SymbolFill : <code>string</code></summary>
    type Figure_Navigation_ButtonOptions_SymbolFill(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbolFill" (parent.GetPath()))
                |> Option.defaultValue "symbolFill"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_SymbolFill.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_SymbolStroke : <code>string</code></summary>
    type Figure_Navigation_ButtonOptions_SymbolStroke(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbolStroke" (parent.GetPath()))
                |> Option.defaultValue "symbolStroke"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_SymbolStroke.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions_SymbolStrokeWidth : <code>int</code></summary>
    type Figure_Navigation_ButtonOptions_SymbolStrokeWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbolStrokeWidth" (parent.GetPath()))
                |> Option.defaultValue "symbolStrokeWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions_SymbolStrokeWidth.ToJson o)

    ///<summary>Figure_Navigation_ButtonOptions : <code>{| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}</code></summary>
    type Figure_Navigation_ButtonOptions(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigation_ButtonOptions_Theme : <code>{| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}</code></summary>
        member this.theme = Figure_Navigation_ButtonOptions_Theme(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_SymbolSize : <code>int</code></summary>
        member this.symbolSize = Figure_Navigation_ButtonOptions_SymbolSize(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_SymbolX : <code>int</code></summary>
        member this.symbolX = Figure_Navigation_ButtonOptions_SymbolX(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_SymbolY : <code>int</code></summary>
        member this.symbolY = Figure_Navigation_ButtonOptions_SymbolY(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Align : <code>string</code></summary>
        member this.align = Figure_Navigation_ButtonOptions_Align(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_ButtonSpacing : <code>int</code></summary>
        member this.buttonSpacing = Figure_Navigation_ButtonOptions_ButtonSpacing(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Height : <code>int</code></summary>
        member this.height = Figure_Navigation_ButtonOptions_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_Navigation_ButtonOptions_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_Width : <code>int</code></summary>
        member this.width = Figure_Navigation_ButtonOptions_Width(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_SymbolFill : <code>string</code></summary>
        member this.symbolFill = Figure_Navigation_ButtonOptions_SymbolFill(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_SymbolStroke : <code>string</code></summary>
        member this.symbolStroke = Figure_Navigation_ButtonOptions_SymbolStroke(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_ButtonOptions_SymbolStrokeWidth : <code>int</code></summary>
        member this.symbolStrokeWidth = Figure_Navigation_ButtonOptions_SymbolStrokeWidth(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.buttonOptions" (parent.GetPath()))
                |> Option.defaultValue "buttonOptions"

        static member ToJson (o:{| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}) =
            let theme = Figure_Navigation_ButtonOptions_Theme.ToJson o.theme
            let symbolSize = sprintf "%i" o.symbolSize
            let symbolX = sprintf "%i" o.symbolX
            let symbolY = sprintf "%i" o.symbolY
            let align = sprintf "\\\"%s\\\"" o.align
            let buttonSpacing = sprintf "%i" o.buttonSpacing
            let height = sprintf "%i" o.height
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let width = sprintf "%i" o.width
            let symbolFill = sprintf "\\\"%s\\\"" o.symbolFill
            let symbolStroke = sprintf "\\\"%s\\\"" o.symbolStroke
            let symbolStrokeWidth = sprintf "%i" o.symbolStrokeWidth
            sprintf "{\\\"theme\\\":%s,\\\"symbolSize\\\":%s,\\\"symbolX\\\":%s,\\\"symbolY\\\":%s,\\\"align\\\":%s,\\\"buttonSpacing\\\":%s,\\\"height\\\":%s,\\\"verticalAlign\\\":%s,\\\"width\\\":%s,\\\"symbolFill\\\":%s,\\\"symbolStroke\\\":%s,\\\"symbolStrokeWidth\\\":%s}" theme symbolSize symbolX symbolY align buttonSpacing height verticalAlign width symbolFill symbolStroke symbolStrokeWidth

        member this.Set (o:{| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_ButtonOptions.ToJson o)


    ///<summary>Figure_Navigation_MenuStyle_Border : <code>string</code></summary>
    type Figure_Navigation_MenuStyle_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuStyle_Border.ToJson o)

    ///<summary>Figure_Navigation_MenuStyle_Background : <code>string</code></summary>
    type Figure_Navigation_MenuStyle_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuStyle_Background.ToJson o)

    ///<summary>Figure_Navigation_MenuStyle_Padding : <code>string</code></summary>
    type Figure_Navigation_MenuStyle_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuStyle_Padding.ToJson o)

    ///<summary>Figure_Navigation_MenuStyle : <code>{| border:string; background:string; padding:string |}</code></summary>
    type Figure_Navigation_MenuStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigation_MenuStyle_Border : <code>string</code></summary>
        member this.border = Figure_Navigation_MenuStyle_Border(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuStyle_Background : <code>string</code></summary>
        member this.background = Figure_Navigation_MenuStyle_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuStyle_Padding : <code>string</code></summary>
        member this.padding = Figure_Navigation_MenuStyle_Padding(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.menuStyle" (parent.GetPath()))
                |> Option.defaultValue "menuStyle"

        static member ToJson (o:{| border:string; background:string; padding:string |}) =
            let border = sprintf "\\\"%s\\\"" o.border
            let background = sprintf "\\\"%s\\\"" o.background
            let padding = sprintf "\\\"%s\\\"" o.padding
            sprintf "{\\\"border\\\":%s,\\\"background\\\":%s,\\\"padding\\\":%s}" border background padding

        member this.Set (o:{| border:string; background:string; padding:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuStyle.ToJson o)


    ///<summary>Figure_Navigation_MenuItemStyle_Padding : <code>string</code></summary>
    type Figure_Navigation_MenuItemStyle_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemStyle_Padding.ToJson o)

    ///<summary>Figure_Navigation_MenuItemStyle_Color : <code>string</code></summary>
    type Figure_Navigation_MenuItemStyle_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemStyle_Color.ToJson o)

    ///<summary>Figure_Navigation_MenuItemStyle_Background : <code>string</code></summary>
    type Figure_Navigation_MenuItemStyle_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemStyle_Background.ToJson o)

    ///<summary>Figure_Navigation_MenuItemStyle_FontSize : <code>string</code></summary>
    type Figure_Navigation_MenuItemStyle_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemStyle_FontSize.ToJson o)

    ///<summary>Figure_Navigation_MenuItemStyle_Transition : <code>string</code></summary>
    type Figure_Navigation_MenuItemStyle_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemStyle_Transition.ToJson o)

    ///<summary>Figure_Navigation_MenuItemStyle : <code>{| padding:string; color:string; background:string; fontSize:string; transition:string |}</code></summary>
    type Figure_Navigation_MenuItemStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigation_MenuItemStyle_Padding : <code>string</code></summary>
        member this.padding = Figure_Navigation_MenuItemStyle_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuItemStyle_Color : <code>string</code></summary>
        member this.color = Figure_Navigation_MenuItemStyle_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuItemStyle_Background : <code>string</code></summary>
        member this.background = Figure_Navigation_MenuItemStyle_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuItemStyle_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_Navigation_MenuItemStyle_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuItemStyle_Transition : <code>string</code></summary>
        member this.transition = Figure_Navigation_MenuItemStyle_Transition(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.menuItemStyle" (parent.GetPath()))
                |> Option.defaultValue "menuItemStyle"

        static member ToJson (o:{| padding:string; color:string; background:string; fontSize:string; transition:string |}) =
            let padding = sprintf "\\\"%s\\\"" o.padding
            let color = sprintf "\\\"%s\\\"" o.color
            let background = sprintf "\\\"%s\\\"" o.background
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let transition = sprintf "\\\"%s\\\"" o.transition
            sprintf "{\\\"padding\\\":%s,\\\"color\\\":%s,\\\"background\\\":%s,\\\"fontSize\\\":%s,\\\"transition\\\":%s}" padding color background fontSize transition

        member this.Set (o:{| padding:string; color:string; background:string; fontSize:string; transition:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemStyle.ToJson o)


    ///<summary>Figure_Navigation_MenuItemHoverStyle_Background : <code>string</code></summary>
    type Figure_Navigation_MenuItemHoverStyle_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemHoverStyle_Background.ToJson o)

    ///<summary>Figure_Navigation_MenuItemHoverStyle_Color : <code>string</code></summary>
    type Figure_Navigation_MenuItemHoverStyle_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemHoverStyle_Color.ToJson o)

    ///<summary>Figure_Navigation_MenuItemHoverStyle : <code>{| background:string; color:string |}</code></summary>
    type Figure_Navigation_MenuItemHoverStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigation_MenuItemHoverStyle_Background : <code>string</code></summary>
        member this.background = Figure_Navigation_MenuItemHoverStyle_Background(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuItemHoverStyle_Color : <code>string</code></summary>
        member this.color = Figure_Navigation_MenuItemHoverStyle_Color(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.menuItemHoverStyle" (parent.GetPath()))
                |> Option.defaultValue "menuItemHoverStyle"

        static member ToJson (o:{| background:string; color:string |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let color = sprintf "\\\"%s\\\"" o.color
            sprintf "{\\\"background\\\":%s,\\\"color\\\":%s}" background color

        member this.Set (o:{| background:string; color:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation_MenuItemHoverStyle.ToJson o)


    ///<summary>Figure_Navigation : <code>{| buttonOptions: {| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}; menuStyle: {| border:string; background:string; padding:string |}; menuItemStyle: {| padding:string; color:string; background:string; fontSize:string; transition:string |}; menuItemHoverStyle: {| background:string; color:string |} |}</code></summary>
    type Figure_Navigation(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigation_ButtonOptions : <code>{| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}</code></summary>
        member this.buttonOptions = Figure_Navigation_ButtonOptions(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuStyle : <code>{| border:string; background:string; padding:string |}</code></summary>
        member this.menuStyle = Figure_Navigation_MenuStyle(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuItemStyle : <code>{| padding:string; color:string; background:string; fontSize:string; transition:string |}</code></summary>
        member this.menuItemStyle = Figure_Navigation_MenuItemStyle(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation_MenuItemHoverStyle : <code>{| background:string; color:string |}</code></summary>
        member this.menuItemHoverStyle = Figure_Navigation_MenuItemHoverStyle(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.navigation" (parent.GetPath()))
                |> Option.defaultValue "navigation"

        static member ToJson (o:{| buttonOptions: {| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}; menuStyle: {| border:string; background:string; padding:string |}; menuItemStyle: {| padding:string; color:string; background:string; fontSize:string; transition:string |}; menuItemHoverStyle: {| background:string; color:string |} |}) =
            let buttonOptions = Figure_Navigation_ButtonOptions.ToJson o.buttonOptions
            let menuStyle = Figure_Navigation_MenuStyle.ToJson o.menuStyle
            let menuItemStyle = Figure_Navigation_MenuItemStyle.ToJson o.menuItemStyle
            let menuItemHoverStyle = Figure_Navigation_MenuItemHoverStyle.ToJson o.menuItemHoverStyle
            sprintf "{\\\"buttonOptions\\\":%s,\\\"menuStyle\\\":%s,\\\"menuItemStyle\\\":%s,\\\"menuItemHoverStyle\\\":%s}" buttonOptions menuStyle menuItemStyle menuItemHoverStyle

        member this.Set (o:{| buttonOptions: {| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}; menuStyle: {| border:string; background:string; padding:string |}; menuItemStyle: {| padding:string; color:string; background:string; fontSize:string; transition:string |}; menuItemHoverStyle: {| background:string; color:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigation.ToJson o)


    ///<summary>Figure_Exporting_Type : <code>string</code></summary>
    type Figure_Exporting_Type(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.type" (parent.GetPath()))
                |> Option.defaultValue "type"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Type.ToJson o)

    ///<summary>Figure_Exporting_Url : <code>string</code></summary>
    type Figure_Exporting_Url(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.url" (parent.GetPath()))
                |> Option.defaultValue "url"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Url.ToJson o)

    ///<summary>Figure_Exporting_PrintMaxWidth : <code>int</code></summary>
    type Figure_Exporting_PrintMaxWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.printMaxWidth" (parent.GetPath()))
                |> Option.defaultValue "printMaxWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_PrintMaxWidth.ToJson o)

    ///<summary>Figure_Exporting_Scale : <code>int</code></summary>
    type Figure_Exporting_Scale(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.scale" (parent.GetPath()))
                |> Option.defaultValue "scale"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Scale.ToJson o)

    ///<summary>Figure_Exporting_Buttons_ContextButton_ClassName : <code>string</code></summary>
    type Figure_Exporting_Buttons_ContextButton_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Buttons_ContextButton_ClassName.ToJson o)

    ///<summary>Figure_Exporting_Buttons_ContextButton_MenuClassName : <code>string</code></summary>
    type Figure_Exporting_Buttons_ContextButton_MenuClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.menuClassName" (parent.GetPath()))
                |> Option.defaultValue "menuClassName"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Buttons_ContextButton_MenuClassName.ToJson o)

    ///<summary>Figure_Exporting_Buttons_ContextButton_Symbol : <code>string</code></summary>
    type Figure_Exporting_Buttons_ContextButton_Symbol(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbol" (parent.GetPath()))
                |> Option.defaultValue "symbol"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Buttons_ContextButton_Symbol.ToJson o)

    ///<summary>Figure_Exporting_Buttons_ContextButton_TitleKey : <code>string</code></summary>
    type Figure_Exporting_Buttons_ContextButton_TitleKey(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.titleKey" (parent.GetPath()))
                |> Option.defaultValue "titleKey"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Buttons_ContextButton_TitleKey.ToJson o)

    ///<summary>Figure_Exporting_Buttons_ContextButton_MenuItems_Item : <code>string</code></summary>
    type Figure_Exporting_Buttons_ContextButton_MenuItems_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Buttons_ContextButton_MenuItems_Item.ToJson o)

    ///<summary>Figure_Exporting_Buttons_ContextButton_MenuItems : <code>string seq</code></summary>
    type Figure_Exporting_Buttons_ContextButton_MenuItems(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Exporting_Buttons_ContextButton_MenuItems_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.menuItems" (parent.GetPath()))
                |> Option.defaultValue "menuItems"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Exporting_Buttons_ContextButton_MenuItems_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Buttons_ContextButton_MenuItems.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Exporting_Buttons_ContextButton : <code>{| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |}</code></summary>
    type Figure_Exporting_Buttons_ContextButton(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_Buttons_ContextButton_ClassName : <code>string</code></summary>
        member this.className = Figure_Exporting_Buttons_ContextButton_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_Buttons_ContextButton_MenuClassName : <code>string</code></summary>
        member this.menuClassName = Figure_Exporting_Buttons_ContextButton_MenuClassName(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_Buttons_ContextButton_Symbol : <code>string</code></summary>
        member this.symbol = Figure_Exporting_Buttons_ContextButton_Symbol(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_Buttons_ContextButton_TitleKey : <code>string</code></summary>
        member this.titleKey = Figure_Exporting_Buttons_ContextButton_TitleKey(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_Buttons_ContextButton_MenuItems : <code>string seq</code></summary>
        member this.menuItems = Figure_Exporting_Buttons_ContextButton_MenuItems(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.contextButton" (parent.GetPath()))
                |> Option.defaultValue "contextButton"

        static member ToJson (o:{| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |}) =
            let className = sprintf "\\\"%s\\\"" o.className
            let menuClassName = sprintf "\\\"%s\\\"" o.menuClassName
            let symbol = sprintf "\\\"%s\\\"" o.symbol
            let titleKey = sprintf "\\\"%s\\\"" o.titleKey
            let menuItems = Figure_Exporting_Buttons_ContextButton_MenuItems.ToJson o.menuItems
            sprintf "{\\\"className\\\":%s,\\\"menuClassName\\\":%s,\\\"symbol\\\":%s,\\\"titleKey\\\":%s,\\\"menuItems\\\":%s}" className menuClassName symbol titleKey menuItems

        member this.Set (o:{| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Buttons_ContextButton.ToJson o)


    ///<summary>Figure_Exporting_Buttons : <code>{| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}</code></summary>
    type Figure_Exporting_Buttons(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_Buttons_ContextButton : <code>{| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |}</code></summary>
        member this.contextButton = Figure_Exporting_Buttons_ContextButton(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.buttons" (parent.GetPath()))
                |> Option.defaultValue "buttons"

        static member ToJson (o:{| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}) =
            let contextButton = Figure_Exporting_Buttons_ContextButton.ToJson o.contextButton
            sprintf "{\\\"contextButton\\\":%s}" contextButton

        member this.Set (o:{| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_Buttons.ToJson o)


    ///<summary>Figure_Exporting_MenuItemDefinitions_ViewFullscreen_TextKey : <code>string</code></summary>
    type Figure_Exporting_MenuItemDefinitions_ViewFullscreen_TextKey(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textKey" (parent.GetPath()))
                |> Option.defaultValue "textKey"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_ViewFullscreen_TextKey.ToJson o)

    ///<summary>Figure_Exporting_MenuItemDefinitions_ViewFullscreen : <code>{| textKey:string |}</code></summary>
    type Figure_Exporting_MenuItemDefinitions_ViewFullscreen(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_MenuItemDefinitions_ViewFullscreen_TextKey : <code>string</code></summary>
        member this.textKey = Figure_Exporting_MenuItemDefinitions_ViewFullscreen_TextKey(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.viewFullscreen" (parent.GetPath()))
                |> Option.defaultValue "viewFullscreen"

        static member ToJson (o:{| textKey:string |}) =
            let textKey = sprintf "\\\"%s\\\"" o.textKey
            sprintf "{\\\"textKey\\\":%s}" textKey

        member this.Set (o:{| textKey:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_ViewFullscreen.ToJson o)


    ///<summary>Figure_Exporting_MenuItemDefinitions_PrintChart_TextKey : <code>string</code></summary>
    type Figure_Exporting_MenuItemDefinitions_PrintChart_TextKey(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textKey" (parent.GetPath()))
                |> Option.defaultValue "textKey"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_PrintChart_TextKey.ToJson o)

    ///<summary>Figure_Exporting_MenuItemDefinitions_PrintChart : <code>{| textKey:string |}</code></summary>
    type Figure_Exporting_MenuItemDefinitions_PrintChart(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_MenuItemDefinitions_PrintChart_TextKey : <code>string</code></summary>
        member this.textKey = Figure_Exporting_MenuItemDefinitions_PrintChart_TextKey(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.printChart" (parent.GetPath()))
                |> Option.defaultValue "printChart"

        static member ToJson (o:{| textKey:string |}) =
            let textKey = sprintf "\\\"%s\\\"" o.textKey
            sprintf "{\\\"textKey\\\":%s}" textKey

        member this.Set (o:{| textKey:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_PrintChart.ToJson o)


    ///<summary>Figure_Exporting_MenuItemDefinitions_Separator_Separator : <code>bool</code></summary>
    type Figure_Exporting_MenuItemDefinitions_Separator_Separator(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.separator" (parent.GetPath()))
                |> Option.defaultValue "separator"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_Separator_Separator.ToJson o)

    ///<summary>Figure_Exporting_MenuItemDefinitions_Separator : <code>{| separator:bool |}</code></summary>
    type Figure_Exporting_MenuItemDefinitions_Separator(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_MenuItemDefinitions_Separator_Separator : <code>bool</code></summary>
        member this.separator = Figure_Exporting_MenuItemDefinitions_Separator_Separator(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.separator" (parent.GetPath()))
                |> Option.defaultValue "separator"

        static member ToJson (o:{| separator:bool |}) =
            let separator = sprintf "%b" o.separator
            sprintf "{\\\"separator\\\":%s}" separator

        member this.Set (o:{| separator:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_Separator.ToJson o)


    ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadPNG_TextKey : <code>string</code></summary>
    type Figure_Exporting_MenuItemDefinitions_DownloadPNG_TextKey(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textKey" (parent.GetPath()))
                |> Option.defaultValue "textKey"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_DownloadPNG_TextKey.ToJson o)

    ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadPNG : <code>{| textKey:string |}</code></summary>
    type Figure_Exporting_MenuItemDefinitions_DownloadPNG(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadPNG_TextKey : <code>string</code></summary>
        member this.textKey = Figure_Exporting_MenuItemDefinitions_DownloadPNG_TextKey(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.downloadPNG" (parent.GetPath()))
                |> Option.defaultValue "downloadPNG"

        static member ToJson (o:{| textKey:string |}) =
            let textKey = sprintf "\\\"%s\\\"" o.textKey
            sprintf "{\\\"textKey\\\":%s}" textKey

        member this.Set (o:{| textKey:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_DownloadPNG.ToJson o)


    ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadJPEG_TextKey : <code>string</code></summary>
    type Figure_Exporting_MenuItemDefinitions_DownloadJPEG_TextKey(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textKey" (parent.GetPath()))
                |> Option.defaultValue "textKey"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_DownloadJPEG_TextKey.ToJson o)

    ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadJPEG : <code>{| textKey:string |}</code></summary>
    type Figure_Exporting_MenuItemDefinitions_DownloadJPEG(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadJPEG_TextKey : <code>string</code></summary>
        member this.textKey = Figure_Exporting_MenuItemDefinitions_DownloadJPEG_TextKey(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.downloadJPEG" (parent.GetPath()))
                |> Option.defaultValue "downloadJPEG"

        static member ToJson (o:{| textKey:string |}) =
            let textKey = sprintf "\\\"%s\\\"" o.textKey
            sprintf "{\\\"textKey\\\":%s}" textKey

        member this.Set (o:{| textKey:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_DownloadJPEG.ToJson o)


    ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadPDF_TextKey : <code>string</code></summary>
    type Figure_Exporting_MenuItemDefinitions_DownloadPDF_TextKey(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textKey" (parent.GetPath()))
                |> Option.defaultValue "textKey"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_DownloadPDF_TextKey.ToJson o)

    ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadPDF : <code>{| textKey:string |}</code></summary>
    type Figure_Exporting_MenuItemDefinitions_DownloadPDF(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadPDF_TextKey : <code>string</code></summary>
        member this.textKey = Figure_Exporting_MenuItemDefinitions_DownloadPDF_TextKey(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.downloadPDF" (parent.GetPath()))
                |> Option.defaultValue "downloadPDF"

        static member ToJson (o:{| textKey:string |}) =
            let textKey = sprintf "\\\"%s\\\"" o.textKey
            sprintf "{\\\"textKey\\\":%s}" textKey

        member this.Set (o:{| textKey:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_DownloadPDF.ToJson o)


    ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadSVG_TextKey : <code>string</code></summary>
    type Figure_Exporting_MenuItemDefinitions_DownloadSVG_TextKey(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textKey" (parent.GetPath()))
                |> Option.defaultValue "textKey"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_DownloadSVG_TextKey.ToJson o)

    ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadSVG : <code>{| textKey:string |}</code></summary>
    type Figure_Exporting_MenuItemDefinitions_DownloadSVG(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadSVG_TextKey : <code>string</code></summary>
        member this.textKey = Figure_Exporting_MenuItemDefinitions_DownloadSVG_TextKey(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.downloadSVG" (parent.GetPath()))
                |> Option.defaultValue "downloadSVG"

        static member ToJson (o:{| textKey:string |}) =
            let textKey = sprintf "\\\"%s\\\"" o.textKey
            sprintf "{\\\"textKey\\\":%s}" textKey

        member this.Set (o:{| textKey:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions_DownloadSVG.ToJson o)


    ///<summary>Figure_Exporting_MenuItemDefinitions : <code>{| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |}</code></summary>
    type Figure_Exporting_MenuItemDefinitions(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_MenuItemDefinitions_ViewFullscreen : <code>{| textKey:string |}</code></summary>
        member this.viewFullscreen = Figure_Exporting_MenuItemDefinitions_ViewFullscreen(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_MenuItemDefinitions_PrintChart : <code>{| textKey:string |}</code></summary>
        member this.printChart = Figure_Exporting_MenuItemDefinitions_PrintChart(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_MenuItemDefinitions_Separator : <code>{| separator:bool |}</code></summary>
        member this.separator = Figure_Exporting_MenuItemDefinitions_Separator(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadPNG : <code>{| textKey:string |}</code></summary>
        member this.downloadPNG = Figure_Exporting_MenuItemDefinitions_DownloadPNG(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadJPEG : <code>{| textKey:string |}</code></summary>
        member this.downloadJPEG = Figure_Exporting_MenuItemDefinitions_DownloadJPEG(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadPDF : <code>{| textKey:string |}</code></summary>
        member this.downloadPDF = Figure_Exporting_MenuItemDefinitions_DownloadPDF(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_MenuItemDefinitions_DownloadSVG : <code>{| textKey:string |}</code></summary>
        member this.downloadSVG = Figure_Exporting_MenuItemDefinitions_DownloadSVG(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.menuItemDefinitions" (parent.GetPath()))
                |> Option.defaultValue "menuItemDefinitions"

        static member ToJson (o:{| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |}) =
            let viewFullscreen = Figure_Exporting_MenuItemDefinitions_ViewFullscreen.ToJson o.viewFullscreen
            let printChart = Figure_Exporting_MenuItemDefinitions_PrintChart.ToJson o.printChart
            let separator = Figure_Exporting_MenuItemDefinitions_Separator.ToJson o.separator
            let downloadPNG = Figure_Exporting_MenuItemDefinitions_DownloadPNG.ToJson o.downloadPNG
            let downloadJPEG = Figure_Exporting_MenuItemDefinitions_DownloadJPEG.ToJson o.downloadJPEG
            let downloadPDF = Figure_Exporting_MenuItemDefinitions_DownloadPDF.ToJson o.downloadPDF
            let downloadSVG = Figure_Exporting_MenuItemDefinitions_DownloadSVG.ToJson o.downloadSVG
            sprintf "{\\\"viewFullscreen\\\":%s,\\\"printChart\\\":%s,\\\"separator\\\":%s,\\\"downloadPNG\\\":%s,\\\"downloadJPEG\\\":%s,\\\"downloadPDF\\\":%s,\\\"downloadSVG\\\":%s}" viewFullscreen printChart separator downloadPNG downloadJPEG downloadPDF downloadSVG

        member this.Set (o:{| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting_MenuItemDefinitions.ToJson o)


    ///<summary>Figure_Exporting : <code>{| _type:string; url:string; printMaxWidth:int; scale:int; buttons: {| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}; menuItemDefinitions: {| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |} |}</code></summary>
    type Figure_Exporting(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Exporting_Type : <code>string</code></summary>
        member this._type = Figure_Exporting_Type(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_Url : <code>string</code></summary>
        member this.url = Figure_Exporting_Url(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_PrintMaxWidth : <code>int</code></summary>
        member this.printMaxWidth = Figure_Exporting_PrintMaxWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_Scale : <code>int</code></summary>
        member this.scale = Figure_Exporting_Scale(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_Buttons : <code>{| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}</code></summary>
        member this.buttons = Figure_Exporting_Buttons(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting_MenuItemDefinitions : <code>{| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |}</code></summary>
        member this.menuItemDefinitions = Figure_Exporting_MenuItemDefinitions(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.exporting" (parent.GetPath()))
                |> Option.defaultValue "exporting"

        static member ToJson (o:{| _type:string; url:string; printMaxWidth:int; scale:int; buttons: {| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}; menuItemDefinitions: {| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |} |}) =
            let _type = sprintf "\\\"%s\\\"" o._type
            let url = sprintf "\\\"%s\\\"" o.url
            let printMaxWidth = sprintf "%i" o.printMaxWidth
            let scale = sprintf "%i" o.scale
            let buttons = Figure_Exporting_Buttons.ToJson o.buttons
            let menuItemDefinitions = Figure_Exporting_MenuItemDefinitions.ToJson o.menuItemDefinitions
            sprintf "{\\\"_type\\\":%s,\\\"url\\\":%s,\\\"printMaxWidth\\\":%s,\\\"scale\\\":%s,\\\"buttons\\\":%s,\\\"menuItemDefinitions\\\":%s}" _type url printMaxWidth scale buttons menuItemDefinitions

        member this.Set (o:{| _type:string; url:string; printMaxWidth:int; scale:int; buttons: {| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}; menuItemDefinitions: {| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Exporting.ToJson o)


    ///<summary>Figure_XAxis_Item_AlignTicks : <code>bool</code></summary>
    type Figure_XAxis_Item_AlignTicks(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.alignTicks" (parent.GetPath()))
                |> Option.defaultValue "alignTicks"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_AlignTicks.ToJson o)

    ///<summary>Figure_XAxis_Item_AllowDecimals : <code>bool</code></summary>
    type Figure_XAxis_Item_AllowDecimals(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowDecimals" (parent.GetPath()))
                |> Option.defaultValue "allowDecimals"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_AllowDecimals.ToJson o)

    ///<summary>Figure_XAxis_Item_AlternateGridColor : <code>string</code></summary>
    type Figure_XAxis_Item_AlternateGridColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.alternateGridColor" (parent.GetPath()))
                |> Option.defaultValue "alternateGridColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_AlternateGridColor.ToJson o)

    ///<summary>Figure_XAxis_Item_Angle : <code>int</code></summary>
    type Figure_XAxis_Item_Angle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.angle" (parent.GetPath()))
                |> Option.defaultValue "angle"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Angle.ToJson o)

    ///<summary>Figure_XAxis_Item_Categories_Item : <code>string</code></summary>
    type Figure_XAxis_Item_Categories_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Categories_Item.ToJson o)

    ///<summary>Figure_XAxis_Item_Categories : <code>string seq</code></summary>
    type Figure_XAxis_Item_Categories(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_XAxis_Item_Categories_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.categories" (parent.GetPath()))
                |> Option.defaultValue "categories"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_XAxis_Item_Categories_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Categories.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_XAxis_Item_Ceiling : <code>int</code></summary>
    type Figure_XAxis_Item_Ceiling(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.ceiling" (parent.GetPath()))
                |> Option.defaultValue "ceiling"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Ceiling.ToJson o)

    ///<summary>Figure_XAxis_Item_ClassName : <code>string</code></summary>
    type Figure_XAxis_Item_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_ClassName.ToJson o)

    ///<summary>Figure_XAxis_Item_Crosshair : <code>bool</code></summary>
    type Figure_XAxis_Item_Crosshair(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crosshair" (parent.GetPath()))
                |> Option.defaultValue "crosshair"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Crosshair.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Millisecond : <code>string</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats_Millisecond(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.millisecond" (parent.GetPath()))
                |> Option.defaultValue "millisecond"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats_Millisecond.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Second : <code>string</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats_Second(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.second" (parent.GetPath()))
                |> Option.defaultValue "second"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats_Second.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Minute : <code>string</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats_Minute(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minute" (parent.GetPath()))
                |> Option.defaultValue "minute"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats_Minute.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Hour : <code>string</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats_Hour(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hour" (parent.GetPath()))
                |> Option.defaultValue "hour"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats_Hour.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Day : <code>string</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats_Day(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.day" (parent.GetPath()))
                |> Option.defaultValue "day"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats_Day.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Week : <code>string</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats_Week(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.week" (parent.GetPath()))
                |> Option.defaultValue "week"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats_Week.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Month : <code>string</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats_Month(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.month" (parent.GetPath()))
                |> Option.defaultValue "month"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats_Month.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Year : <code>string</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats_Year(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.year" (parent.GetPath()))
                |> Option.defaultValue "year"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats_Year.ToJson o)

    ///<summary>Figure_XAxis_Item_DateTimeLabelFormats : <code>{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}</code></summary>
    type Figure_XAxis_Item_DateTimeLabelFormats(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Millisecond : <code>string</code></summary>
        member this.millisecond = Figure_XAxis_Item_DateTimeLabelFormats_Millisecond(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Second : <code>string</code></summary>
        member this.second = Figure_XAxis_Item_DateTimeLabelFormats_Second(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Minute : <code>string</code></summary>
        member this.minute = Figure_XAxis_Item_DateTimeLabelFormats_Minute(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Hour : <code>string</code></summary>
        member this.hour = Figure_XAxis_Item_DateTimeLabelFormats_Hour(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Day : <code>string</code></summary>
        member this.day = Figure_XAxis_Item_DateTimeLabelFormats_Day(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Week : <code>string</code></summary>
        member this.week = Figure_XAxis_Item_DateTimeLabelFormats_Week(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Month : <code>string</code></summary>
        member this.month = Figure_XAxis_Item_DateTimeLabelFormats_Month(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats_Year : <code>string</code></summary>
        member this.year = Figure_XAxis_Item_DateTimeLabelFormats_Year(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dateTimeLabelFormats" (parent.GetPath()))
                |> Option.defaultValue "dateTimeLabelFormats"

        static member ToJson (o:{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}) =
            let millisecond = sprintf "\\\"%s\\\"" o.millisecond
            let second = sprintf "\\\"%s\\\"" o.second
            let minute = sprintf "\\\"%s\\\"" o.minute
            let hour = sprintf "\\\"%s\\\"" o.hour
            let day = sprintf "\\\"%s\\\"" o.day
            let week = sprintf "\\\"%s\\\"" o.week
            let month = sprintf "\\\"%s\\\"" o.month
            let year = sprintf "\\\"%s\\\"" o.year
            sprintf "{\\\"millisecond\\\":%s,\\\"second\\\":%s,\\\"minute\\\":%s,\\\"hour\\\":%s,\\\"day\\\":%s,\\\"week\\\":%s,\\\"month\\\":%s,\\\"year\\\":%s}" millisecond second minute hour day week month year

        member this.Set (o:{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_DateTimeLabelFormats.ToJson o)


    ///<summary>Figure_XAxis_Item_EndOnTick : <code>bool</code></summary>
    type Figure_XAxis_Item_EndOnTick(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.endOnTick" (parent.GetPath()))
                |> Option.defaultValue "endOnTick"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_EndOnTick.ToJson o)

    ///<summary>Figure_XAxis_Item_Floor : <code>int</code></summary>
    type Figure_XAxis_Item_Floor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.floor" (parent.GetPath()))
                |> Option.defaultValue "floor"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Floor.ToJson o)

    ///<summary>Figure_XAxis_Item_GridLineColor : <code>string</code></summary>
    type Figure_XAxis_Item_GridLineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridLineColor" (parent.GetPath()))
                |> Option.defaultValue "gridLineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_GridLineColor.ToJson o)

    ///<summary>Figure_XAxis_Item_GridLineDashStyle : <code>string</code></summary>
    type Figure_XAxis_Item_GridLineDashStyle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridLineDashStyle" (parent.GetPath()))
                |> Option.defaultValue "gridLineDashStyle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_GridLineDashStyle.ToJson o)

    ///<summary>Figure_XAxis_Item_GridLineInterpolation : <code>string</code></summary>
    type Figure_XAxis_Item_GridLineInterpolation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridLineInterpolation" (parent.GetPath()))
                |> Option.defaultValue "gridLineInterpolation"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_GridLineInterpolation.ToJson o)

    ///<summary>Figure_XAxis_Item_GridLineWidth : <code>int</code></summary>
    type Figure_XAxis_Item_GridLineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridLineWidth" (parent.GetPath()))
                |> Option.defaultValue "gridLineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_GridLineWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_GridZIndex : <code>int</code></summary>
    type Figure_XAxis_Item_GridZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridZIndex" (parent.GetPath()))
                |> Option.defaultValue "gridZIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_GridZIndex.ToJson o)

    ///<summary>Figure_XAxis_Item_Height : <code>int</code></summary>
    type Figure_XAxis_Item_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Height.ToJson o)

    ///<summary>Figure_XAxis_Item_Id : <code>string</code></summary>
    type Figure_XAxis_Item_Id(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.id" (parent.GetPath()))
                |> Option.defaultValue "id"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Id.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Align : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Align.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_AutoRotation : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_AutoRotation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.autoRotation" (parent.GetPath()))
                |> Option.defaultValue "autoRotation"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_AutoRotation.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_AutoRotationLimit : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_AutoRotationLimit(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.autoRotationLimit" (parent.GetPath()))
                |> Option.defaultValue "autoRotationLimit"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_AutoRotationLimit.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Distance : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Distance(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.distance" (parent.GetPath()))
                |> Option.defaultValue "distance"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Distance.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Enabled : <code>bool</code></summary>
    type Figure_XAxis_Item_Labels_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Enabled.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Format : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Format(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.format" (parent.GetPath()))
                |> Option.defaultValue "format"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Format.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Overflow : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Overflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.overflow" (parent.GetPath()))
                |> Option.defaultValue "overflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Overflow.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Padding : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Padding.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_ReserveSpace : <code>bool</code></summary>
    type Figure_XAxis_Item_Labels_ReserveSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.reserveSpace" (parent.GetPath()))
                |> Option.defaultValue "reserveSpace"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_ReserveSpace.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Rotation : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Rotation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.rotation" (parent.GetPath()))
                |> Option.defaultValue "rotation"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Rotation.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_StaggerLines : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_StaggerLines(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.staggerLines" (parent.GetPath()))
                |> Option.defaultValue "staggerLines"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_StaggerLines.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Step : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Step(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.step" (parent.GetPath()))
                |> Option.defaultValue "step"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Step.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Background : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Background.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Border : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Border.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_BorderRadius : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Color : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Color.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Cursor : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Cursor.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_FontFamily : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_FontFamily.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_FontWeight : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_FontWeight.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_FontSize : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_FontSize.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Height : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Height.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_LineWidth : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_LineWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Padding : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Padding.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Position : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Position.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_TextAlign : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_TextAlign.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_TextDecoration : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_TextOutline : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_TextOutline.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_TextOverflow : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Top : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Top.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Transition : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Transition.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_XAxis_Item_Labels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style_Width : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style_Width.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_XAxis_Item_Labels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_Labels_Style_Background : <code>string</code></summary>
        member this.background = Figure_XAxis_Item_Labels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_XAxis_Item_Labels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Border : <code>string</code></summary>
        member this.border = Figure_XAxis_Item_Labels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_XAxis_Item_Labels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Color : <code>string</code></summary>
        member this.color = Figure_XAxis_Item_Labels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_XAxis_Item_Labels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_XAxis_Item_Labels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_XAxis_Item_Labels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_XAxis_Item_Labels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Height : <code>int</code></summary>
        member this.height = Figure_XAxis_Item_Labels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_XAxis_Item_Labels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_XAxis_Item_Labels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Position : <code>string</code></summary>
        member this.position = Figure_XAxis_Item_Labels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_XAxis_Item_Labels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_XAxis_Item_Labels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_XAxis_Item_Labels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_XAxis_Item_Labels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Top : <code>string</code></summary>
        member this.top = Figure_XAxis_Item_Labels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_XAxis_Item_Labels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_XAxis_Item_Labels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style_Width : <code>int</code></summary>
        member this.width = Figure_XAxis_Item_Labels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Style.ToJson o)


    ///<summary>Figure_XAxis_Item_Labels_UseHtml : <code>bool</code></summary>
    type Figure_XAxis_Item_Labels_UseHtml(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.useHtml" (parent.GetPath()))
                |> Option.defaultValue "useHtml"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_UseHtml.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_X : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_X.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_Y : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_Y.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels_ZIndex : <code>int</code></summary>
    type Figure_XAxis_Item_Labels_ZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zIndex" (parent.GetPath()))
                |> Option.defaultValue "zIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels_ZIndex.ToJson o)

    ///<summary>Figure_XAxis_Item_Labels : <code>{| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}</code></summary>
    type Figure_XAxis_Item_Labels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_Labels_Align : <code>string</code></summary>
        member this.align = Figure_XAxis_Item_Labels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_AutoRotation : <code>int</code></summary>
        member this.autoRotation = Figure_XAxis_Item_Labels_AutoRotation(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_AutoRotationLimit : <code>int</code></summary>
        member this.autoRotationLimit = Figure_XAxis_Item_Labels_AutoRotationLimit(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Distance : <code>int</code></summary>
        member this.distance = Figure_XAxis_Item_Labels_Distance(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_XAxis_Item_Labels_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Format : <code>string</code></summary>
        member this.format = Figure_XAxis_Item_Labels_Format(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Overflow : <code>string</code></summary>
        member this.overflow = Figure_XAxis_Item_Labels_Overflow(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Padding : <code>int</code></summary>
        member this.padding = Figure_XAxis_Item_Labels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_ReserveSpace : <code>bool</code></summary>
        member this.reserveSpace = Figure_XAxis_Item_Labels_ReserveSpace(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Rotation : <code>int</code></summary>
        member this.rotation = Figure_XAxis_Item_Labels_Rotation(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_StaggerLines : <code>int</code></summary>
        member this.staggerLines = Figure_XAxis_Item_Labels_StaggerLines(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Step : <code>int</code></summary>
        member this.step = Figure_XAxis_Item_Labels_Step(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_XAxis_Item_Labels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_UseHtml : <code>bool</code></summary>
        member this.useHtml = Figure_XAxis_Item_Labels_UseHtml(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_X : <code>int</code></summary>
        member this.x = Figure_XAxis_Item_Labels_X(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_Y : <code>int</code></summary>
        member this.y = Figure_XAxis_Item_Labels_Y(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels_ZIndex : <code>int</code></summary>
        member this.zIndex = Figure_XAxis_Item_Labels_ZIndex(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.labels" (parent.GetPath()))
                |> Option.defaultValue "labels"

        static member ToJson (o:{| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let autoRotation = sprintf "%i" o.autoRotation
            let autoRotationLimit = sprintf "%i" o.autoRotationLimit
            let distance = sprintf "%i" o.distance
            let enabled = sprintf "%b" o.enabled
            let format = sprintf "\\\"%s\\\"" o.format
            let overflow = sprintf "\\\"%s\\\"" o.overflow
            let padding = sprintf "%i" o.padding
            let reserveSpace = sprintf "%b" o.reserveSpace
            let rotation = sprintf "%i" o.rotation
            let staggerLines = sprintf "%i" o.staggerLines
            let step = sprintf "%i" o.step
            let style = Figure_XAxis_Item_Labels_Style.ToJson o.style
            let useHtml = sprintf "%b" o.useHtml
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            let zIndex = sprintf "%i" o.zIndex
            sprintf "{\\\"align\\\":%s,\\\"autoRotation\\\":%s,\\\"autoRotationLimit\\\":%s,\\\"distance\\\":%s,\\\"enabled\\\":%s,\\\"format\\\":%s,\\\"overflow\\\":%s,\\\"padding\\\":%s,\\\"reserveSpace\\\":%s,\\\"rotation\\\":%s,\\\"staggerLines\\\":%s,\\\"step\\\":%s,\\\"style\\\":%s,\\\"useHtml\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s,\\\"zIndex\\\":%s}" align autoRotation autoRotationLimit distance enabled format overflow padding reserveSpace rotation staggerLines step style useHtml x y zIndex

        member this.Set (o:{| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Labels.ToJson o)


    ///<summary>Figure_XAxis_Item_Left : <code>int</code></summary>
    type Figure_XAxis_Item_Left(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.left" (parent.GetPath()))
                |> Option.defaultValue "left"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Left.ToJson o)

    ///<summary>Figure_XAxis_Item_LineColor : <code>string</code></summary>
    type Figure_XAxis_Item_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_LineColor.ToJson o)

    ///<summary>Figure_XAxis_Item_LineWidth : <code>int</code></summary>
    type Figure_XAxis_Item_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_LineWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_LinkedTo : <code>int</code></summary>
    type Figure_XAxis_Item_LinkedTo(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linkedTo" (parent.GetPath()))
                |> Option.defaultValue "linkedTo"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_LinkedTo.ToJson o)

    ///<summary>Figure_XAxis_Item_Margin : <code>int</code></summary>
    type Figure_XAxis_Item_Margin(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.margin" (parent.GetPath()))
                |> Option.defaultValue "margin"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Margin.ToJson o)

    ///<summary>Figure_XAxis_Item_Max : <code>int</code></summary>
    type Figure_XAxis_Item_Max(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.max" (parent.GetPath()))
                |> Option.defaultValue "max"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Max.ToJson o)

    ///<summary>Figure_XAxis_Item_MaxColor : <code>string</code></summary>
    type Figure_XAxis_Item_MaxColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.maxColor" (parent.GetPath()))
                |> Option.defaultValue "maxColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MaxColor.ToJson o)

    ///<summary>Figure_XAxis_Item_MaxPadding : <code>int</code></summary>
    type Figure_XAxis_Item_MaxPadding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.maxPadding" (parent.GetPath()))
                |> Option.defaultValue "maxPadding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MaxPadding.ToJson o)

    ///<summary>Figure_XAxis_Item_Min : <code>int</code></summary>
    type Figure_XAxis_Item_Min(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.min" (parent.GetPath()))
                |> Option.defaultValue "min"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Min.ToJson o)

    ///<summary>Figure_XAxis_Item_MinColor : <code>string</code></summary>
    type Figure_XAxis_Item_MinColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minColor" (parent.GetPath()))
                |> Option.defaultValue "minColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinColor.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorGridLineColor : <code>string</code></summary>
    type Figure_XAxis_Item_MinorGridLineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorGridLineColor" (parent.GetPath()))
                |> Option.defaultValue "minorGridLineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorGridLineColor.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorGridLineDashStyle : <code>string</code></summary>
    type Figure_XAxis_Item_MinorGridLineDashStyle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorGridLineDashStyle" (parent.GetPath()))
                |> Option.defaultValue "minorGridLineDashStyle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorGridLineDashStyle.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorGridLineWidth : <code>int</code></summary>
    type Figure_XAxis_Item_MinorGridLineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorGridLineWidth" (parent.GetPath()))
                |> Option.defaultValue "minorGridLineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorGridLineWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorTickColor : <code>string</code></summary>
    type Figure_XAxis_Item_MinorTickColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickColor" (parent.GetPath()))
                |> Option.defaultValue "minorTickColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorTickColor.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorTickInterval : <code>int</code></summary>
    type Figure_XAxis_Item_MinorTickInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickInterval" (parent.GetPath()))
                |> Option.defaultValue "minorTickInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorTickInterval.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorTickLength : <code>int</code></summary>
    type Figure_XAxis_Item_MinorTickLength(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickLength" (parent.GetPath()))
                |> Option.defaultValue "minorTickLength"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorTickLength.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorTickPosition : <code>string</code></summary>
    type Figure_XAxis_Item_MinorTickPosition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickPosition" (parent.GetPath()))
                |> Option.defaultValue "minorTickPosition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorTickPosition.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorTicks : <code>bool</code></summary>
    type Figure_XAxis_Item_MinorTicks(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTicks" (parent.GetPath()))
                |> Option.defaultValue "minorTicks"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorTicks.ToJson o)

    ///<summary>Figure_XAxis_Item_MinorTickWidth : <code>int</code></summary>
    type Figure_XAxis_Item_MinorTickWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickWidth" (parent.GetPath()))
                |> Option.defaultValue "minorTickWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinorTickWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_MinRange : <code>int</code></summary>
    type Figure_XAxis_Item_MinRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minRange" (parent.GetPath()))
                |> Option.defaultValue "minRange"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinRange.ToJson o)

    ///<summary>Figure_XAxis_Item_MinTickInterval : <code>int</code></summary>
    type Figure_XAxis_Item_MinTickInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minTickInterval" (parent.GetPath()))
                |> Option.defaultValue "minTickInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_MinTickInterval.ToJson o)

    ///<summary>Figure_XAxis_Item_Offset : <code>int</code></summary>
    type Figure_XAxis_Item_Offset(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.offset" (parent.GetPath()))
                |> Option.defaultValue "offset"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Offset.ToJson o)

    ///<summary>Figure_XAxis_Item_Opposite : <code>bool</code></summary>
    type Figure_XAxis_Item_Opposite(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opposite" (parent.GetPath()))
                |> Option.defaultValue "opposite"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Opposite.ToJson o)

    ///<summary>Figure_XAxis_Item_Pane : <code>int</code></summary>
    type Figure_XAxis_Item_Pane(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pane" (parent.GetPath()))
                |> Option.defaultValue "pane"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Pane.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_BorderColor : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_BorderColor.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_BorderWidth : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_BorderWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderWidth" (parent.GetPath()))
                |> Option.defaultValue "borderWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_BorderWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_ClassName : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_ClassName.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Color : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Color.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_From : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_From(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.from" (parent.GetPath()))
                |> Option.defaultValue "from"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_From.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Id : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Id(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.id" (parent.GetPath()))
                |> Option.defaultValue "id"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Id.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_InnerRadius : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_InnerRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.innerRadius" (parent.GetPath()))
                |> Option.defaultValue "innerRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_InnerRadius.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Align : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Align.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Rotation : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Rotation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.rotation" (parent.GetPath()))
                |> Option.defaultValue "rotation"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Rotation.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Background : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Background.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Border : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Border.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_BorderRadius : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Color : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Color.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Cursor : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Cursor.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontFamily : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontFamily.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontWeight : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontWeight.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontSize : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontSize.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Height : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Height.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_LineWidth : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_LineWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Padding : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Padding.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Position : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Position.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextAlign : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextAlign.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextDecoration : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOutline : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOutline.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOverflow : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Top : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Top.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Transition : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Transition.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Width : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style_Width.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Background : <code>string</code></summary>
        member this.background = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_XAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Border : <code>string</code></summary>
        member this.border = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_XAxis_Item_PlotBands_Item_Labels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Color : <code>string</code></summary>
        member this.color = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_XAxis_Item_PlotBands_Item_Labels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Height : <code>int</code></summary>
        member this.height = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_XAxis_Item_PlotBands_Item_Labels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Position : <code>string</code></summary>
        member this.position = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_XAxis_Item_PlotBands_Item_Labels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Top : <code>string</code></summary>
        member this.top = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_XAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style_Width : <code>int</code></summary>
        member this.width = Figure_XAxis_Item_PlotBands_Item_Labels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Style.ToJson o)


    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Text : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Text.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_TextAlign : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_TextAlign.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_UseHtml : <code>bool</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_UseHtml(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.useHtml" (parent.GetPath()))
                |> Option.defaultValue "useHtml"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_UseHtml.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_VerticalAlign : <code>string</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_VerticalAlign.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_X : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_X.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Y : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels_Y.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels : <code>{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Labels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Align : <code>string</code></summary>
        member this.align = Figure_XAxis_Item_PlotBands_Item_Labels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Rotation : <code>int</code></summary>
        member this.rotation = Figure_XAxis_Item_PlotBands_Item_Labels_Rotation(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_XAxis_Item_PlotBands_Item_Labels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Text : <code>string</code></summary>
        member this.text = Figure_XAxis_Item_PlotBands_Item_Labels_Text(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_XAxis_Item_PlotBands_Item_Labels_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_UseHtml : <code>bool</code></summary>
        member this.useHtml = Figure_XAxis_Item_PlotBands_Item_Labels_UseHtml(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_XAxis_Item_PlotBands_Item_Labels_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_X : <code>int</code></summary>
        member this.x = Figure_XAxis_Item_PlotBands_Item_Labels_X(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels_Y : <code>int</code></summary>
        member this.y = Figure_XAxis_Item_PlotBands_Item_Labels_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.labels" (parent.GetPath()))
                |> Option.defaultValue "labels"

        static member ToJson (o:{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let rotation = sprintf "%i" o.rotation
            let style = Figure_XAxis_Item_PlotBands_Item_Labels_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let useHtml = sprintf "%b" o.useHtml
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"rotation\\\":%s,\\\"style\\\":%s,\\\"text\\\":%s,\\\"textAlign\\\":%s,\\\"useHtml\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align rotation style text textAlign useHtml verticalAlign x y

        member this.Set (o:{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Labels.ToJson o)


    ///<summary>Figure_XAxis_Item_PlotBands_Item_OuterRadius : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_OuterRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.outerRadius" (parent.GetPath()))
                |> Option.defaultValue "outerRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_OuterRadius.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_Thickness : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_Thickness(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.thickness" (parent.GetPath()))
                |> Option.defaultValue "thickness"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_Thickness.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_To : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_To(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.to" (parent.GetPath()))
                |> Option.defaultValue "to"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_To.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item_ZIndex : <code>int</code></summary>
    type Figure_XAxis_Item_PlotBands_Item_ZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zIndex" (parent.GetPath()))
                |> Option.defaultValue "zIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item_ZIndex.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotBands_Item : <code>{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |}</code></summary>
    type Figure_XAxis_Item_PlotBands_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0


        ///<summary>Figure_XAxis_Item_PlotBands_Item_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_XAxis_Item_PlotBands_Item_BorderColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_BorderWidth : <code>int</code></summary>
        member this.borderWidth = Figure_XAxis_Item_PlotBands_Item_BorderWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_ClassName : <code>string</code></summary>
        member this.className = Figure_XAxis_Item_PlotBands_Item_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Color : <code>string</code></summary>
        member this.color = Figure_XAxis_Item_PlotBands_Item_Color(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_From : <code>int</code></summary>
        member this._from = Figure_XAxis_Item_PlotBands_Item_From(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Id : <code>string</code></summary>
        member this.id = Figure_XAxis_Item_PlotBands_Item_Id(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_InnerRadius : <code>int</code></summary>
        member this.innerRadius = Figure_XAxis_Item_PlotBands_Item_InnerRadius(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Labels : <code>{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}</code></summary>
        member this.labels = Figure_XAxis_Item_PlotBands_Item_Labels(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_OuterRadius : <code>int</code></summary>
        member this.outerRadius = Figure_XAxis_Item_PlotBands_Item_OuterRadius(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_Thickness : <code>int</code></summary>
        member this.thickness = Figure_XAxis_Item_PlotBands_Item_Thickness(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_To : <code>int</code></summary>
        member this._to = Figure_XAxis_Item_PlotBands_Item_To(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands_Item_ZIndex : <code>int</code></summary>
        member this.zIndex = Figure_XAxis_Item_PlotBands_Item_ZIndex(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |}) =
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            let borderWidth = sprintf "%i" o.borderWidth
            let className = sprintf "\\\"%s\\\"" o.className
            let color = sprintf "\\\"%s\\\"" o.color
            let _from = sprintf "%i" o._from
            let id = sprintf "\\\"%s\\\"" o.id
            let innerRadius = sprintf "%i" o.innerRadius
            let labels = Figure_XAxis_Item_PlotBands_Item_Labels.ToJson o.labels
            let outerRadius = sprintf "%i" o.outerRadius
            let thickness = sprintf "%i" o.thickness
            let _to = sprintf "%i" o._to
            let zIndex = sprintf "%i" o.zIndex
            sprintf "{\\\"borderColor\\\":%s,\\\"borderWidth\\\":%s,\\\"className\\\":%s,\\\"color\\\":%s,\\\"_from\\\":%s,\\\"id\\\":%s,\\\"innerRadius\\\":%s,\\\"labels\\\":%s,\\\"outerRadius\\\":%s,\\\"thickness\\\":%s,\\\"_to\\\":%s,\\\"zIndex\\\":%s}" borderColor borderWidth className color _from id innerRadius labels outerRadius thickness _to zIndex

        member this.Set (o:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands_Item.ToJson o)


    ///<summary>Figure_XAxis_Item_PlotBands : <code>{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq</code></summary>
    type Figure_XAxis_Item_PlotBands(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_XAxis_Item_PlotBands_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.plotBands" (parent.GetPath()))
                |> Option.defaultValue "plotBands"

        static member ToJson (o:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_XAxis_Item_PlotBands_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotBands.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_XAxis_Item_PlotLines_Item_ClassName : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_ClassName.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Color : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Color.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_DashStyle : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_DashStyle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dashStyle" (parent.GetPath()))
                |> Option.defaultValue "dashStyle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_DashStyle.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Id : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Id(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.id" (parent.GetPath()))
                |> Option.defaultValue "id"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Id.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Align : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Align.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Rotation : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Rotation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.rotation" (parent.GetPath()))
                |> Option.defaultValue "rotation"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Rotation.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Background : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Background.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_BackgroundColor : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Border : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Border.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_BorderRadius : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_BorderRadius.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Color : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Color.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Cursor : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Cursor.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_FontFamily : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_FontFamily.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_FontWeight : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_FontWeight.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_FontSize : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_FontSize.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Height : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Height.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_LineWidth : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_LineWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Padding : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Padding.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Position : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Position.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_TextAlign : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_TextAlign.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_TextDecoration : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_TextDecoration.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOutline : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOutline.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOverflow : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOverflow.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Top : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Top.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Transition : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Transition.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_WhiteSpace : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Width : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style_Width.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Background : <code>string</code></summary>
        member this.background = Figure_XAxis_Item_PlotLines_Item_Label_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_XAxis_Item_PlotLines_Item_Label_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Border : <code>string</code></summary>
        member this.border = Figure_XAxis_Item_PlotLines_Item_Label_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_XAxis_Item_PlotLines_Item_Label_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Color : <code>string</code></summary>
        member this.color = Figure_XAxis_Item_PlotLines_Item_Label_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_XAxis_Item_PlotLines_Item_Label_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_XAxis_Item_PlotLines_Item_Label_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_XAxis_Item_PlotLines_Item_Label_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_XAxis_Item_PlotLines_Item_Label_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Height : <code>int</code></summary>
        member this.height = Figure_XAxis_Item_PlotLines_Item_Label_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_XAxis_Item_PlotLines_Item_Label_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_XAxis_Item_PlotLines_Item_Label_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Position : <code>string</code></summary>
        member this.position = Figure_XAxis_Item_PlotLines_Item_Label_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_XAxis_Item_PlotLines_Item_Label_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_XAxis_Item_PlotLines_Item_Label_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_XAxis_Item_PlotLines_Item_Label_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Top : <code>string</code></summary>
        member this.top = Figure_XAxis_Item_PlotLines_Item_Label_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_XAxis_Item_PlotLines_Item_Label_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_XAxis_Item_PlotLines_Item_Label_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style_Width : <code>int</code></summary>
        member this.width = Figure_XAxis_Item_PlotLines_Item_Label_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Style.ToJson o)


    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Text : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Text.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_TextAlign : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_TextAlign.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_UseHtml : <code>bool</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_UseHtml(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.useHtml" (parent.GetPath()))
                |> Option.defaultValue "useHtml"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_UseHtml.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_VerticalAlign : <code>string</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_VerticalAlign.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_X : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_X.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Y : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label_Y.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Label : <code>{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Label(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Align : <code>string</code></summary>
        member this.align = Figure_XAxis_Item_PlotLines_Item_Label_Align(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Rotation : <code>int</code></summary>
        member this.rotation = Figure_XAxis_Item_PlotLines_Item_Label_Rotation(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_XAxis_Item_PlotLines_Item_Label_Style(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Text : <code>string</code></summary>
        member this.text = Figure_XAxis_Item_PlotLines_Item_Label_Text(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_XAxis_Item_PlotLines_Item_Label_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_UseHtml : <code>bool</code></summary>
        member this.useHtml = Figure_XAxis_Item_PlotLines_Item_Label_UseHtml(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_XAxis_Item_PlotLines_Item_Label_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_X : <code>int</code></summary>
        member this.x = Figure_XAxis_Item_PlotLines_Item_Label_X(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label_Y : <code>int</code></summary>
        member this.y = Figure_XAxis_Item_PlotLines_Item_Label_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.label" (parent.GetPath()))
                |> Option.defaultValue "label"

        static member ToJson (o:{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let rotation = sprintf "%i" o.rotation
            let style = Figure_XAxis_Item_PlotLines_Item_Label_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let useHtml = sprintf "%b" o.useHtml
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"rotation\\\":%s,\\\"style\\\":%s,\\\"text\\\":%s,\\\"textAlign\\\":%s,\\\"useHtml\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align rotation style text textAlign useHtml verticalAlign x y

        member this.Set (o:{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Label.ToJson o)


    ///<summary>Figure_XAxis_Item_PlotLines_Item_Value : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Value(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.value" (parent.GetPath()))
                |> Option.defaultValue "value"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Value.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_Width : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_Width.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item_ZIndex : <code>int</code></summary>
    type Figure_XAxis_Item_PlotLines_Item_ZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zIndex" (parent.GetPath()))
                |> Option.defaultValue "zIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item_ZIndex.ToJson o)

    ///<summary>Figure_XAxis_Item_PlotLines_Item : <code>{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |}</code></summary>
    type Figure_XAxis_Item_PlotLines_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0


        ///<summary>Figure_XAxis_Item_PlotLines_Item_ClassName : <code>string</code></summary>
        member this.className = Figure_XAxis_Item_PlotLines_Item_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Color : <code>string</code></summary>
        member this.color = Figure_XAxis_Item_PlotLines_Item_Color(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_DashStyle : <code>string</code></summary>
        member this.dashStyle = Figure_XAxis_Item_PlotLines_Item_DashStyle(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Id : <code>string</code></summary>
        member this.id = Figure_XAxis_Item_PlotLines_Item_Id(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Label : <code>{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}</code></summary>
        member this.label = Figure_XAxis_Item_PlotLines_Item_Label(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Value : <code>int</code></summary>
        member this.value = Figure_XAxis_Item_PlotLines_Item_Value(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_Width : <code>int</code></summary>
        member this.width = Figure_XAxis_Item_PlotLines_Item_Width(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines_Item_ZIndex : <code>int</code></summary>
        member this.zIndex = Figure_XAxis_Item_PlotLines_Item_ZIndex(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |}) =
            let className = sprintf "\\\"%s\\\"" o.className
            let color = sprintf "\\\"%s\\\"" o.color
            let dashStyle = sprintf "\\\"%s\\\"" o.dashStyle
            let id = sprintf "\\\"%s\\\"" o.id
            let label = Figure_XAxis_Item_PlotLines_Item_Label.ToJson o.label
            let value = sprintf "%i" o.value
            let width = sprintf "%i" o.width
            let zIndex = sprintf "%i" o.zIndex
            sprintf "{\\\"className\\\":%s,\\\"color\\\":%s,\\\"dashStyle\\\":%s,\\\"id\\\":%s,\\\"label\\\":%s,\\\"value\\\":%s,\\\"width\\\":%s,\\\"zIndex\\\":%s}" className color dashStyle id label value width zIndex

        member this.Set (o:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines_Item.ToJson o)


    ///<summary>Figure_XAxis_Item_PlotLines : <code>{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq</code></summary>
    type Figure_XAxis_Item_PlotLines(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_XAxis_Item_PlotLines_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.plotLines" (parent.GetPath()))
                |> Option.defaultValue "plotLines"

        static member ToJson (o:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_XAxis_Item_PlotLines_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_PlotLines.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_XAxis_Item_Reversed : <code>bool</code></summary>
    type Figure_XAxis_Item_Reversed(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.reversed" (parent.GetPath()))
                |> Option.defaultValue "reversed"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Reversed.ToJson o)

    ///<summary>Figure_XAxis_Item_ReversedStacks : <code>bool</code></summary>
    type Figure_XAxis_Item_ReversedStacks(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.reversedStacks" (parent.GetPath()))
                |> Option.defaultValue "reversedStacks"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_ReversedStacks.ToJson o)

    ///<summary>Figure_XAxis_Item_ShowEmpty : <code>bool</code></summary>
    type Figure_XAxis_Item_ShowEmpty(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showEmpty" (parent.GetPath()))
                |> Option.defaultValue "showEmpty"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_ShowEmpty.ToJson o)

    ///<summary>Figure_XAxis_Item_ShowFirstLabel : <code>bool</code></summary>
    type Figure_XAxis_Item_ShowFirstLabel(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showFirstLabel" (parent.GetPath()))
                |> Option.defaultValue "showFirstLabel"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_ShowFirstLabel.ToJson o)

    ///<summary>Figure_XAxis_Item_ShowLastLabel : <code>bool</code></summary>
    type Figure_XAxis_Item_ShowLastLabel(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showLastLabel" (parent.GetPath()))
                |> Option.defaultValue "showLastLabel"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_ShowLastLabel.ToJson o)

    ///<summary>Figure_XAxis_Item_SoftMax : <code>int</code></summary>
    type Figure_XAxis_Item_SoftMax(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softMax" (parent.GetPath()))
                |> Option.defaultValue "softMax"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_SoftMax.ToJson o)

    ///<summary>Figure_XAxis_Item_SoftMin : <code>int</code></summary>
    type Figure_XAxis_Item_SoftMin(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softMin" (parent.GetPath()))
                |> Option.defaultValue "softMin"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_SoftMin.ToJson o)

    ///<summary>Figure_XAxis_Item_StartOfWeek : <code>int</code></summary>
    type Figure_XAxis_Item_StartOfWeek(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.startOfWeek" (parent.GetPath()))
                |> Option.defaultValue "startOfWeek"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_StartOfWeek.ToJson o)

    ///<summary>Figure_XAxis_Item_StartOnTick : <code>bool</code></summary>
    type Figure_XAxis_Item_StartOnTick(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.startOnTick" (parent.GetPath()))
                |> Option.defaultValue "startOnTick"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_StartOnTick.ToJson o)

    ///<summary>Figure_XAxis_Item_Stops_Item_Item : <code>int</code></summary>
    type Figure_XAxis_Item_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Stops_Item_Item.ToJson o)

    ///<summary>Figure_XAxis_Item_Stops_Item : <code>int seq</code></summary>
    type Figure_XAxis_Item_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_XAxis_Item_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_XAxis_Item_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_XAxis_Item_Stops : <code>int seq seq</code></summary>
    type Figure_XAxis_Item_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_XAxis_Item_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_XAxis_Item_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_XAxis_Item_TickAmount : <code>int</code></summary>
    type Figure_XAxis_Item_TickAmount(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickAmount" (parent.GetPath()))
                |> Option.defaultValue "tickAmount"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickAmount.ToJson o)

    ///<summary>Figure_XAxis_Item_TickColor : <code>string</code></summary>
    type Figure_XAxis_Item_TickColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickColor" (parent.GetPath()))
                |> Option.defaultValue "tickColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickColor.ToJson o)

    ///<summary>Figure_XAxis_Item_TickInterval : <code>int</code></summary>
    type Figure_XAxis_Item_TickInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickInterval" (parent.GetPath()))
                |> Option.defaultValue "tickInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickInterval.ToJson o)

    ///<summary>Figure_XAxis_Item_TickLength : <code>int</code></summary>
    type Figure_XAxis_Item_TickLength(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickLength" (parent.GetPath()))
                |> Option.defaultValue "tickLength"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickLength.ToJson o)

    ///<summary>Figure_XAxis_Item_TickmarkPlacement : <code>string</code></summary>
    type Figure_XAxis_Item_TickmarkPlacement(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickmarkPlacement" (parent.GetPath()))
                |> Option.defaultValue "tickmarkPlacement"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickmarkPlacement.ToJson o)

    ///<summary>Figure_XAxis_Item_TickPixelInterval : <code>int</code></summary>
    type Figure_XAxis_Item_TickPixelInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickPixelInterval" (parent.GetPath()))
                |> Option.defaultValue "tickPixelInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickPixelInterval.ToJson o)

    ///<summary>Figure_XAxis_Item_TickPosition : <code>string</code></summary>
    type Figure_XAxis_Item_TickPosition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickPosition" (parent.GetPath()))
                |> Option.defaultValue "tickPosition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickPosition.ToJson o)

    ///<summary>Figure_XAxis_Item_TickPositions_Item : <code>int</code></summary>
    type Figure_XAxis_Item_TickPositions_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickPositions_Item.ToJson o)

    ///<summary>Figure_XAxis_Item_TickPositions : <code>int seq</code></summary>
    type Figure_XAxis_Item_TickPositions(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_XAxis_Item_TickPositions_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickPositions" (parent.GetPath()))
                |> Option.defaultValue "tickPositions"

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_XAxis_Item_TickPositions_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickPositions.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_XAxis_Item_TickWidth : <code>int</code></summary>
    type Figure_XAxis_Item_TickWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickWidth" (parent.GetPath()))
                |> Option.defaultValue "tickWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TickWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Background : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Background.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_BackgroundColor : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Border : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Border.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_BorderRadius : <code>int</code></summary>
    type Figure_XAxis_Item_Title_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_BorderRadius.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Color : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Color.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Cursor : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Cursor.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_FontFamily : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_FontFamily.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_FontWeight : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_FontWeight.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_FontSize : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_FontSize.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Height : <code>int</code></summary>
    type Figure_XAxis_Item_Title_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Height.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_LineWidth : <code>int</code></summary>
    type Figure_XAxis_Item_Title_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_LineWidth.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Padding : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Padding.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Position : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Position.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_TextAlign : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_TextAlign.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_TextDecoration : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_TextDecoration.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_TextOutline : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_TextOutline.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_TextOverflow : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_TextOverflow.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Top : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Top.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Transition : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Transition.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_WhiteSpace : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style_Width : <code>int</code></summary>
    type Figure_XAxis_Item_Title_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style_Width.ToJson o)

    ///<summary>Figure_XAxis_Item_Title_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_XAxis_Item_Title_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_Title_Style_Background : <code>string</code></summary>
        member this.background = Figure_XAxis_Item_Title_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_XAxis_Item_Title_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Border : <code>string</code></summary>
        member this.border = Figure_XAxis_Item_Title_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_XAxis_Item_Title_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Color : <code>string</code></summary>
        member this.color = Figure_XAxis_Item_Title_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_XAxis_Item_Title_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_XAxis_Item_Title_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_XAxis_Item_Title_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_XAxis_Item_Title_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Height : <code>int</code></summary>
        member this.height = Figure_XAxis_Item_Title_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_XAxis_Item_Title_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_XAxis_Item_Title_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Position : <code>string</code></summary>
        member this.position = Figure_XAxis_Item_Title_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_XAxis_Item_Title_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_XAxis_Item_Title_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_XAxis_Item_Title_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_XAxis_Item_Title_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Top : <code>string</code></summary>
        member this.top = Figure_XAxis_Item_Title_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_XAxis_Item_Title_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_XAxis_Item_Title_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Style_Width : <code>int</code></summary>
        member this.width = Figure_XAxis_Item_Title_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Style.ToJson o)


    ///<summary>Figure_XAxis_Item_Title_Text : <code>string</code></summary>
    type Figure_XAxis_Item_Title_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title_Text.ToJson o)

    ///<summary>Figure_XAxis_Item_Title : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}</code></summary>
    type Figure_XAxis_Item_Title(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_XAxis_Item_Title_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_XAxis_Item_Title_Style(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title_Text : <code>string</code></summary>
        member this.text = Figure_XAxis_Item_Title_Text(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.title" (parent.GetPath()))
                |> Option.defaultValue "title"

        static member ToJson (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}) =
            let style = Figure_XAxis_Item_Title_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            sprintf "{\\\"style\\\":%s,\\\"text\\\":%s}" style text

        member this.Set (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Title.ToJson o)


    ///<summary>Figure_XAxis_Item_TooltipValueFormat : <code>string</code></summary>
    type Figure_XAxis_Item_TooltipValueFormat(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tooltipValueFormat" (parent.GetPath()))
                |> Option.defaultValue "tooltipValueFormat"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_TooltipValueFormat.ToJson o)

    ///<summary>Figure_XAxis_Item_Top : <code>int</code></summary>
    type Figure_XAxis_Item_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Top.ToJson o)

    ///<summary>Figure_XAxis_Item_Type : <code>string</code></summary>
    type Figure_XAxis_Item_Type(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.type" (parent.GetPath()))
                |> Option.defaultValue "type"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Type.ToJson o)

    ///<summary>Figure_XAxis_Item_UniqueNames : <code>bool</code></summary>
    type Figure_XAxis_Item_UniqueNames(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.uniqueNames" (parent.GetPath()))
                |> Option.defaultValue "uniqueNames"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_UniqueNames.ToJson o)

    ///<summary>Figure_XAxis_Item_Visible : <code>bool</code></summary>
    type Figure_XAxis_Item_Visible(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.visible" (parent.GetPath()))
                |> Option.defaultValue "visible"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Visible.ToJson o)

    ///<summary>Figure_XAxis_Item_Width : <code>int</code></summary>
    type Figure_XAxis_Item_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_Width.ToJson o)

    ///<summary>Figure_XAxis_Item_ZoomEnabled : <code>bool</code></summary>
    type Figure_XAxis_Item_ZoomEnabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zoomEnabled" (parent.GetPath()))
                |> Option.defaultValue "zoomEnabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item_ZoomEnabled.ToJson o)

    ///<summary>Figure_XAxis_Item : <code>{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |}</code></summary>
    type Figure_XAxis_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0


        ///<summary>Figure_XAxis_Item_AlignTicks : <code>bool</code></summary>
        member this.alignTicks = Figure_XAxis_Item_AlignTicks(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_AllowDecimals : <code>bool</code></summary>
        member this.allowDecimals = Figure_XAxis_Item_AllowDecimals(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_AlternateGridColor : <code>string</code></summary>
        member this.alternateGridColor = Figure_XAxis_Item_AlternateGridColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Angle : <code>int</code></summary>
        member this.angle = Figure_XAxis_Item_Angle(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Categories : <code>string seq</code></summary>
        member this.categories = Figure_XAxis_Item_Categories(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Ceiling : <code>int</code></summary>
        member this.ceiling = Figure_XAxis_Item_Ceiling(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_ClassName : <code>string</code></summary>
        member this.className = Figure_XAxis_Item_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Crosshair : <code>bool</code></summary>
        member this.crosshair = Figure_XAxis_Item_Crosshair(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_DateTimeLabelFormats : <code>{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}</code></summary>
        member this.dateTimeLabelFormats = Figure_XAxis_Item_DateTimeLabelFormats(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_EndOnTick : <code>bool</code></summary>
        member this.endOnTick = Figure_XAxis_Item_EndOnTick(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Floor : <code>int</code></summary>
        member this.floor = Figure_XAxis_Item_Floor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_GridLineColor : <code>string</code></summary>
        member this.gridLineColor = Figure_XAxis_Item_GridLineColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_GridLineDashStyle : <code>string</code></summary>
        member this.gridLineDashStyle = Figure_XAxis_Item_GridLineDashStyle(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_GridLineInterpolation : <code>string</code></summary>
        member this.gridLineInterpolation = Figure_XAxis_Item_GridLineInterpolation(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_GridLineWidth : <code>int</code></summary>
        member this.gridLineWidth = Figure_XAxis_Item_GridLineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_GridZIndex : <code>int</code></summary>
        member this.gridZIndex = Figure_XAxis_Item_GridZIndex(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Height : <code>int</code></summary>
        member this.height = Figure_XAxis_Item_Height(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Id : <code>string</code></summary>
        member this.id = Figure_XAxis_Item_Id(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Labels : <code>{| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}</code></summary>
        member this.labels = Figure_XAxis_Item_Labels(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Left : <code>int</code></summary>
        member this.left = Figure_XAxis_Item_Left(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_XAxis_Item_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_XAxis_Item_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_LinkedTo : <code>int</code></summary>
        member this.linkedTo = Figure_XAxis_Item_LinkedTo(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Margin : <code>int</code></summary>
        member this.margin = Figure_XAxis_Item_Margin(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Max : <code>int</code></summary>
        member this.max = Figure_XAxis_Item_Max(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MaxColor : <code>string</code></summary>
        member this.maxColor = Figure_XAxis_Item_MaxColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MaxPadding : <code>int</code></summary>
        member this.maxPadding = Figure_XAxis_Item_MaxPadding(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Min : <code>int</code></summary>
        member this.min = Figure_XAxis_Item_Min(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinColor : <code>string</code></summary>
        member this.minColor = Figure_XAxis_Item_MinColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorGridLineColor : <code>string</code></summary>
        member this.minorGridLineColor = Figure_XAxis_Item_MinorGridLineColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorGridLineDashStyle : <code>string</code></summary>
        member this.minorGridLineDashStyle = Figure_XAxis_Item_MinorGridLineDashStyle(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorGridLineWidth : <code>int</code></summary>
        member this.minorGridLineWidth = Figure_XAxis_Item_MinorGridLineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorTickColor : <code>string</code></summary>
        member this.minorTickColor = Figure_XAxis_Item_MinorTickColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorTickInterval : <code>int</code></summary>
        member this.minorTickInterval = Figure_XAxis_Item_MinorTickInterval(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorTickLength : <code>int</code></summary>
        member this.minorTickLength = Figure_XAxis_Item_MinorTickLength(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorTickPosition : <code>string</code></summary>
        member this.minorTickPosition = Figure_XAxis_Item_MinorTickPosition(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorTicks : <code>bool</code></summary>
        member this.minorTicks = Figure_XAxis_Item_MinorTicks(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinorTickWidth : <code>int</code></summary>
        member this.minorTickWidth = Figure_XAxis_Item_MinorTickWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinRange : <code>int</code></summary>
        member this.minRange = Figure_XAxis_Item_MinRange(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_MinTickInterval : <code>int</code></summary>
        member this.minTickInterval = Figure_XAxis_Item_MinTickInterval(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Offset : <code>int</code></summary>
        member this.offset = Figure_XAxis_Item_Offset(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Opposite : <code>bool</code></summary>
        member this.opposite = Figure_XAxis_Item_Opposite(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Pane : <code>int</code></summary>
        member this.pane = Figure_XAxis_Item_Pane(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotBands : <code>{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq</code></summary>
        member this.plotBands = Figure_XAxis_Item_PlotBands(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_PlotLines : <code>{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq</code></summary>
        member this.plotLines = Figure_XAxis_Item_PlotLines(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Reversed : <code>bool</code></summary>
        member this.reversed = Figure_XAxis_Item_Reversed(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_ReversedStacks : <code>bool</code></summary>
        member this.reversedStacks = Figure_XAxis_Item_ReversedStacks(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_ShowEmpty : <code>bool</code></summary>
        member this.showEmpty = Figure_XAxis_Item_ShowEmpty(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_ShowFirstLabel : <code>bool</code></summary>
        member this.showFirstLabel = Figure_XAxis_Item_ShowFirstLabel(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_ShowLastLabel : <code>bool</code></summary>
        member this.showLastLabel = Figure_XAxis_Item_ShowLastLabel(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_SoftMax : <code>int</code></summary>
        member this.softMax = Figure_XAxis_Item_SoftMax(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_SoftMin : <code>int</code></summary>
        member this.softMin = Figure_XAxis_Item_SoftMin(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_StartOfWeek : <code>int</code></summary>
        member this.startOfWeek = Figure_XAxis_Item_StartOfWeek(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_StartOnTick : <code>bool</code></summary>
        member this.startOnTick = Figure_XAxis_Item_StartOnTick(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_XAxis_Item_Stops(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickAmount : <code>int</code></summary>
        member this.tickAmount = Figure_XAxis_Item_TickAmount(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickColor : <code>string</code></summary>
        member this.tickColor = Figure_XAxis_Item_TickColor(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickInterval : <code>int</code></summary>
        member this.tickInterval = Figure_XAxis_Item_TickInterval(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickLength : <code>int</code></summary>
        member this.tickLength = Figure_XAxis_Item_TickLength(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickmarkPlacement : <code>string</code></summary>
        member this.tickmarkPlacement = Figure_XAxis_Item_TickmarkPlacement(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickPixelInterval : <code>int</code></summary>
        member this.tickPixelInterval = Figure_XAxis_Item_TickPixelInterval(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickPosition : <code>string</code></summary>
        member this.tickPosition = Figure_XAxis_Item_TickPosition(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickPositions : <code>int seq</code></summary>
        member this.tickPositions = Figure_XAxis_Item_TickPositions(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TickWidth : <code>int</code></summary>
        member this.tickWidth = Figure_XAxis_Item_TickWidth(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Title : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}</code></summary>
        member this.title = Figure_XAxis_Item_Title(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_TooltipValueFormat : <code>string</code></summary>
        member this.tooltipValueFormat = Figure_XAxis_Item_TooltipValueFormat(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Top : <code>int</code></summary>
        member this.top = Figure_XAxis_Item_Top(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Type : <code>string</code></summary>
        member this._type = Figure_XAxis_Item_Type(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_UniqueNames : <code>bool</code></summary>
        member this.uniqueNames = Figure_XAxis_Item_UniqueNames(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Visible : <code>bool</code></summary>
        member this.visible = Figure_XAxis_Item_Visible(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_Width : <code>int</code></summary>
        member this.width = Figure_XAxis_Item_Width(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis_Item_ZoomEnabled : <code>bool</code></summary>
        member this.zoomEnabled = Figure_XAxis_Item_ZoomEnabled(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |}) =
            let alignTicks = sprintf "%b" o.alignTicks
            let allowDecimals = sprintf "%b" o.allowDecimals
            let alternateGridColor = sprintf "\\\"%s\\\"" o.alternateGridColor
            let angle = sprintf "%i" o.angle
            let categories = Figure_XAxis_Item_Categories.ToJson o.categories
            let ceiling = sprintf "%i" o.ceiling
            let className = sprintf "\\\"%s\\\"" o.className
            let crosshair = sprintf "%b" o.crosshair
            let dateTimeLabelFormats = Figure_XAxis_Item_DateTimeLabelFormats.ToJson o.dateTimeLabelFormats
            let endOnTick = sprintf "%b" o.endOnTick
            let floor = sprintf "%i" o.floor
            let gridLineColor = sprintf "\\\"%s\\\"" o.gridLineColor
            let gridLineDashStyle = sprintf "\\\"%s\\\"" o.gridLineDashStyle
            let gridLineInterpolation = sprintf "\\\"%s\\\"" o.gridLineInterpolation
            let gridLineWidth = sprintf "%i" o.gridLineWidth
            let gridZIndex = sprintf "%i" o.gridZIndex
            let height = sprintf "%i" o.height
            let id = sprintf "\\\"%s\\\"" o.id
            let labels = Figure_XAxis_Item_Labels.ToJson o.labels
            let left = sprintf "%i" o.left
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            let linkedTo = sprintf "%i" o.linkedTo
            let margin = sprintf "%i" o.margin
            let max = sprintf "%i" o.max
            let maxColor = sprintf "\\\"%s\\\"" o.maxColor
            let maxPadding = sprintf "%i" o.maxPadding
            let min = sprintf "%i" o.min
            let minColor = sprintf "\\\"%s\\\"" o.minColor
            let minorGridLineColor = sprintf "\\\"%s\\\"" o.minorGridLineColor
            let minorGridLineDashStyle = sprintf "\\\"%s\\\"" o.minorGridLineDashStyle
            let minorGridLineWidth = sprintf "%i" o.minorGridLineWidth
            let minorTickColor = sprintf "\\\"%s\\\"" o.minorTickColor
            let minorTickInterval = sprintf "%i" o.minorTickInterval
            let minorTickLength = sprintf "%i" o.minorTickLength
            let minorTickPosition = sprintf "\\\"%s\\\"" o.minorTickPosition
            let minorTicks = sprintf "%b" o.minorTicks
            let minorTickWidth = sprintf "%i" o.minorTickWidth
            let minRange = sprintf "%i" o.minRange
            let minTickInterval = sprintf "%i" o.minTickInterval
            let offset = sprintf "%i" o.offset
            let opposite = sprintf "%b" o.opposite
            let pane = sprintf "%i" o.pane
            let plotBands = Figure_XAxis_Item_PlotBands.ToJson o.plotBands
            let plotLines = Figure_XAxis_Item_PlotLines.ToJson o.plotLines
            let reversed = sprintf "%b" o.reversed
            let reversedStacks = sprintf "%b" o.reversedStacks
            let showEmpty = sprintf "%b" o.showEmpty
            let showFirstLabel = sprintf "%b" o.showFirstLabel
            let showLastLabel = sprintf "%b" o.showLastLabel
            let softMax = sprintf "%i" o.softMax
            let softMin = sprintf "%i" o.softMin
            let startOfWeek = sprintf "%i" o.startOfWeek
            let startOnTick = sprintf "%b" o.startOnTick
            let stops = Figure_XAxis_Item_Stops.ToJson o.stops
            let tickAmount = sprintf "%i" o.tickAmount
            let tickColor = sprintf "\\\"%s\\\"" o.tickColor
            let tickInterval = sprintf "%i" o.tickInterval
            let tickLength = sprintf "%i" o.tickLength
            let tickmarkPlacement = sprintf "\\\"%s\\\"" o.tickmarkPlacement
            let tickPixelInterval = sprintf "%i" o.tickPixelInterval
            let tickPosition = sprintf "\\\"%s\\\"" o.tickPosition
            let tickPositions = Figure_XAxis_Item_TickPositions.ToJson o.tickPositions
            let tickWidth = sprintf "%i" o.tickWidth
            let title = Figure_XAxis_Item_Title.ToJson o.title
            let tooltipValueFormat = sprintf "\\\"%s\\\"" o.tooltipValueFormat
            let top = sprintf "%i" o.top
            let _type = sprintf "\\\"%s\\\"" o._type
            let uniqueNames = sprintf "%b" o.uniqueNames
            let visible = sprintf "%b" o.visible
            let width = sprintf "%i" o.width
            let zoomEnabled = sprintf "%b" o.zoomEnabled
            sprintf "{\\\"alignTicks\\\":%s,\\\"allowDecimals\\\":%s,\\\"alternateGridColor\\\":%s,\\\"angle\\\":%s,\\\"categories\\\":%s,\\\"ceiling\\\":%s,\\\"className\\\":%s,\\\"crosshair\\\":%s,\\\"dateTimeLabelFormats\\\":%s,\\\"endOnTick\\\":%s,\\\"floor\\\":%s,\\\"gridLineColor\\\":%s,\\\"gridLineDashStyle\\\":%s,\\\"gridLineInterpolation\\\":%s,\\\"gridLineWidth\\\":%s,\\\"gridZIndex\\\":%s,\\\"height\\\":%s,\\\"id\\\":%s,\\\"labels\\\":%s,\\\"left\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s,\\\"linkedTo\\\":%s,\\\"margin\\\":%s,\\\"max\\\":%s,\\\"maxColor\\\":%s,\\\"maxPadding\\\":%s,\\\"min\\\":%s,\\\"minColor\\\":%s,\\\"minorGridLineColor\\\":%s,\\\"minorGridLineDashStyle\\\":%s,\\\"minorGridLineWidth\\\":%s,\\\"minorTickColor\\\":%s,\\\"minorTickInterval\\\":%s,\\\"minorTickLength\\\":%s,\\\"minorTickPosition\\\":%s,\\\"minorTicks\\\":%s,\\\"minorTickWidth\\\":%s,\\\"minRange\\\":%s,\\\"minTickInterval\\\":%s,\\\"offset\\\":%s,\\\"opposite\\\":%s,\\\"pane\\\":%s,\\\"plotBands\\\":%s,\\\"plotLines\\\":%s,\\\"reversed\\\":%s,\\\"reversedStacks\\\":%s,\\\"showEmpty\\\":%s,\\\"showFirstLabel\\\":%s,\\\"showLastLabel\\\":%s,\\\"softMax\\\":%s,\\\"softMin\\\":%s,\\\"startOfWeek\\\":%s,\\\"startOnTick\\\":%s,\\\"stops\\\":%s,\\\"tickAmount\\\":%s,\\\"tickColor\\\":%s,\\\"tickInterval\\\":%s,\\\"tickLength\\\":%s,\\\"tickmarkPlacement\\\":%s,\\\"tickPixelInterval\\\":%s,\\\"tickPosition\\\":%s,\\\"tickPositions\\\":%s,\\\"tickWidth\\\":%s,\\\"title\\\":%s,\\\"tooltipValueFormat\\\":%s,\\\"top\\\":%s,\\\"_type\\\":%s,\\\"uniqueNames\\\":%s,\\\"visible\\\":%s,\\\"width\\\":%s,\\\"zoomEnabled\\\":%s}" alignTicks allowDecimals alternateGridColor angle categories ceiling className crosshair dateTimeLabelFormats endOnTick floor gridLineColor gridLineDashStyle gridLineInterpolation gridLineWidth gridZIndex height id labels left lineColor lineWidth linkedTo margin max maxColor maxPadding min minColor minorGridLineColor minorGridLineDashStyle minorGridLineWidth minorTickColor minorTickInterval minorTickLength minorTickPosition minorTicks minorTickWidth minRange minTickInterval offset opposite pane plotBands plotLines reversed reversedStacks showEmpty showFirstLabel showLastLabel softMax softMin startOfWeek startOnTick stops tickAmount tickColor tickInterval tickLength tickmarkPlacement tickPixelInterval tickPosition tickPositions tickWidth title tooltipValueFormat top _type uniqueNames visible width zoomEnabled

        member this.Set (o:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis_Item.ToJson o)


    ///<summary>Figure_XAxis : <code>{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq</code></summary>
    type Figure_XAxis(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_XAxis_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.xAxis" (parent.GetPath()))
                |> Option.defaultValue "xAxis"

        static member ToJson (o:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_XAxis_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_XAxis.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_YAxis_Item_AlignTicks : <code>bool</code></summary>
    type Figure_YAxis_Item_AlignTicks(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.alignTicks" (parent.GetPath()))
                |> Option.defaultValue "alignTicks"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_AlignTicks.ToJson o)

    ///<summary>Figure_YAxis_Item_AllowDecimals : <code>bool</code></summary>
    type Figure_YAxis_Item_AllowDecimals(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowDecimals" (parent.GetPath()))
                |> Option.defaultValue "allowDecimals"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_AllowDecimals.ToJson o)

    ///<summary>Figure_YAxis_Item_AlternateGridColor : <code>string</code></summary>
    type Figure_YAxis_Item_AlternateGridColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.alternateGridColor" (parent.GetPath()))
                |> Option.defaultValue "alternateGridColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_AlternateGridColor.ToJson o)

    ///<summary>Figure_YAxis_Item_Angle : <code>int</code></summary>
    type Figure_YAxis_Item_Angle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.angle" (parent.GetPath()))
                |> Option.defaultValue "angle"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Angle.ToJson o)

    ///<summary>Figure_YAxis_Item_Categories_Item : <code>string</code></summary>
    type Figure_YAxis_Item_Categories_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Categories_Item.ToJson o)

    ///<summary>Figure_YAxis_Item_Categories : <code>string seq</code></summary>
    type Figure_YAxis_Item_Categories(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_YAxis_Item_Categories_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.categories" (parent.GetPath()))
                |> Option.defaultValue "categories"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_YAxis_Item_Categories_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Categories.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_YAxis_Item_Ceiling : <code>int</code></summary>
    type Figure_YAxis_Item_Ceiling(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.ceiling" (parent.GetPath()))
                |> Option.defaultValue "ceiling"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Ceiling.ToJson o)

    ///<summary>Figure_YAxis_Item_ClassName : <code>string</code></summary>
    type Figure_YAxis_Item_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_ClassName.ToJson o)

    ///<summary>Figure_YAxis_Item_Crosshair : <code>bool</code></summary>
    type Figure_YAxis_Item_Crosshair(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crosshair" (parent.GetPath()))
                |> Option.defaultValue "crosshair"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Crosshair.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Millisecond : <code>string</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats_Millisecond(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.millisecond" (parent.GetPath()))
                |> Option.defaultValue "millisecond"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats_Millisecond.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Second : <code>string</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats_Second(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.second" (parent.GetPath()))
                |> Option.defaultValue "second"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats_Second.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Minute : <code>string</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats_Minute(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minute" (parent.GetPath()))
                |> Option.defaultValue "minute"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats_Minute.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Hour : <code>string</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats_Hour(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hour" (parent.GetPath()))
                |> Option.defaultValue "hour"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats_Hour.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Day : <code>string</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats_Day(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.day" (parent.GetPath()))
                |> Option.defaultValue "day"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats_Day.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Week : <code>string</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats_Week(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.week" (parent.GetPath()))
                |> Option.defaultValue "week"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats_Week.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Month : <code>string</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats_Month(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.month" (parent.GetPath()))
                |> Option.defaultValue "month"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats_Month.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Year : <code>string</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats_Year(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.year" (parent.GetPath()))
                |> Option.defaultValue "year"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats_Year.ToJson o)

    ///<summary>Figure_YAxis_Item_DateTimeLabelFormats : <code>{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}</code></summary>
    type Figure_YAxis_Item_DateTimeLabelFormats(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Millisecond : <code>string</code></summary>
        member this.millisecond = Figure_YAxis_Item_DateTimeLabelFormats_Millisecond(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Second : <code>string</code></summary>
        member this.second = Figure_YAxis_Item_DateTimeLabelFormats_Second(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Minute : <code>string</code></summary>
        member this.minute = Figure_YAxis_Item_DateTimeLabelFormats_Minute(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Hour : <code>string</code></summary>
        member this.hour = Figure_YAxis_Item_DateTimeLabelFormats_Hour(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Day : <code>string</code></summary>
        member this.day = Figure_YAxis_Item_DateTimeLabelFormats_Day(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Week : <code>string</code></summary>
        member this.week = Figure_YAxis_Item_DateTimeLabelFormats_Week(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Month : <code>string</code></summary>
        member this.month = Figure_YAxis_Item_DateTimeLabelFormats_Month(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats_Year : <code>string</code></summary>
        member this.year = Figure_YAxis_Item_DateTimeLabelFormats_Year(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dateTimeLabelFormats" (parent.GetPath()))
                |> Option.defaultValue "dateTimeLabelFormats"

        static member ToJson (o:{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}) =
            let millisecond = sprintf "\\\"%s\\\"" o.millisecond
            let second = sprintf "\\\"%s\\\"" o.second
            let minute = sprintf "\\\"%s\\\"" o.minute
            let hour = sprintf "\\\"%s\\\"" o.hour
            let day = sprintf "\\\"%s\\\"" o.day
            let week = sprintf "\\\"%s\\\"" o.week
            let month = sprintf "\\\"%s\\\"" o.month
            let year = sprintf "\\\"%s\\\"" o.year
            sprintf "{\\\"millisecond\\\":%s,\\\"second\\\":%s,\\\"minute\\\":%s,\\\"hour\\\":%s,\\\"day\\\":%s,\\\"week\\\":%s,\\\"month\\\":%s,\\\"year\\\":%s}" millisecond second minute hour day week month year

        member this.Set (o:{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_DateTimeLabelFormats.ToJson o)


    ///<summary>Figure_YAxis_Item_EndOnTick : <code>bool</code></summary>
    type Figure_YAxis_Item_EndOnTick(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.endOnTick" (parent.GetPath()))
                |> Option.defaultValue "endOnTick"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_EndOnTick.ToJson o)

    ///<summary>Figure_YAxis_Item_Floor : <code>int</code></summary>
    type Figure_YAxis_Item_Floor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.floor" (parent.GetPath()))
                |> Option.defaultValue "floor"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Floor.ToJson o)

    ///<summary>Figure_YAxis_Item_GridLineColor : <code>string</code></summary>
    type Figure_YAxis_Item_GridLineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridLineColor" (parent.GetPath()))
                |> Option.defaultValue "gridLineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_GridLineColor.ToJson o)

    ///<summary>Figure_YAxis_Item_GridLineDashStyle : <code>string</code></summary>
    type Figure_YAxis_Item_GridLineDashStyle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridLineDashStyle" (parent.GetPath()))
                |> Option.defaultValue "gridLineDashStyle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_GridLineDashStyle.ToJson o)

    ///<summary>Figure_YAxis_Item_GridLineInterpolation : <code>string</code></summary>
    type Figure_YAxis_Item_GridLineInterpolation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridLineInterpolation" (parent.GetPath()))
                |> Option.defaultValue "gridLineInterpolation"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_GridLineInterpolation.ToJson o)

    ///<summary>Figure_YAxis_Item_GridLineWidth : <code>int</code></summary>
    type Figure_YAxis_Item_GridLineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridLineWidth" (parent.GetPath()))
                |> Option.defaultValue "gridLineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_GridLineWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_GridZIndex : <code>int</code></summary>
    type Figure_YAxis_Item_GridZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.gridZIndex" (parent.GetPath()))
                |> Option.defaultValue "gridZIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_GridZIndex.ToJson o)

    ///<summary>Figure_YAxis_Item_Height : <code>int</code></summary>
    type Figure_YAxis_Item_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Height.ToJson o)

    ///<summary>Figure_YAxis_Item_Id : <code>string</code></summary>
    type Figure_YAxis_Item_Id(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.id" (parent.GetPath()))
                |> Option.defaultValue "id"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Id.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Align : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Align.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_AutoRotation : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_AutoRotation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.autoRotation" (parent.GetPath()))
                |> Option.defaultValue "autoRotation"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_AutoRotation.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_AutoRotationLimit : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_AutoRotationLimit(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.autoRotationLimit" (parent.GetPath()))
                |> Option.defaultValue "autoRotationLimit"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_AutoRotationLimit.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Distance : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Distance(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.distance" (parent.GetPath()))
                |> Option.defaultValue "distance"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Distance.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Enabled : <code>bool</code></summary>
    type Figure_YAxis_Item_Labels_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Enabled.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Format : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Format(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.format" (parent.GetPath()))
                |> Option.defaultValue "format"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Format.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Overflow : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Overflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.overflow" (parent.GetPath()))
                |> Option.defaultValue "overflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Overflow.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Padding : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Padding.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_ReserveSpace : <code>bool</code></summary>
    type Figure_YAxis_Item_Labels_ReserveSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.reserveSpace" (parent.GetPath()))
                |> Option.defaultValue "reserveSpace"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_ReserveSpace.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Rotation : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Rotation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.rotation" (parent.GetPath()))
                |> Option.defaultValue "rotation"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Rotation.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_StaggerLines : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_StaggerLines(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.staggerLines" (parent.GetPath()))
                |> Option.defaultValue "staggerLines"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_StaggerLines.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Step : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Step(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.step" (parent.GetPath()))
                |> Option.defaultValue "step"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Step.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Background : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Background.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Border : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Border.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_BorderRadius : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Color : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Color.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Cursor : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Cursor.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_FontFamily : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_FontFamily.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_FontWeight : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_FontWeight.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_FontSize : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_FontSize.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Height : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Height.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_LineWidth : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_LineWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Padding : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Padding.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Position : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Position.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_TextAlign : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_TextAlign.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_TextDecoration : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_TextOutline : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_TextOutline.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_TextOverflow : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Top : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Top.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Transition : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Transition.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_YAxis_Item_Labels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style_Width : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style_Width.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_YAxis_Item_Labels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_Labels_Style_Background : <code>string</code></summary>
        member this.background = Figure_YAxis_Item_Labels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_YAxis_Item_Labels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Border : <code>string</code></summary>
        member this.border = Figure_YAxis_Item_Labels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_YAxis_Item_Labels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Color : <code>string</code></summary>
        member this.color = Figure_YAxis_Item_Labels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_YAxis_Item_Labels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_YAxis_Item_Labels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_YAxis_Item_Labels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_YAxis_Item_Labels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Height : <code>int</code></summary>
        member this.height = Figure_YAxis_Item_Labels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_YAxis_Item_Labels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_YAxis_Item_Labels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Position : <code>string</code></summary>
        member this.position = Figure_YAxis_Item_Labels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_YAxis_Item_Labels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_YAxis_Item_Labels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_YAxis_Item_Labels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_YAxis_Item_Labels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Top : <code>string</code></summary>
        member this.top = Figure_YAxis_Item_Labels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_YAxis_Item_Labels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_YAxis_Item_Labels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style_Width : <code>int</code></summary>
        member this.width = Figure_YAxis_Item_Labels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Style.ToJson o)


    ///<summary>Figure_YAxis_Item_Labels_UseHtml : <code>bool</code></summary>
    type Figure_YAxis_Item_Labels_UseHtml(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.useHtml" (parent.GetPath()))
                |> Option.defaultValue "useHtml"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_UseHtml.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_X : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_X.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_Y : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_Y.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels_ZIndex : <code>int</code></summary>
    type Figure_YAxis_Item_Labels_ZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zIndex" (parent.GetPath()))
                |> Option.defaultValue "zIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels_ZIndex.ToJson o)

    ///<summary>Figure_YAxis_Item_Labels : <code>{| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}</code></summary>
    type Figure_YAxis_Item_Labels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_Labels_Align : <code>string</code></summary>
        member this.align = Figure_YAxis_Item_Labels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_AutoRotation : <code>int</code></summary>
        member this.autoRotation = Figure_YAxis_Item_Labels_AutoRotation(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_AutoRotationLimit : <code>int</code></summary>
        member this.autoRotationLimit = Figure_YAxis_Item_Labels_AutoRotationLimit(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Distance : <code>int</code></summary>
        member this.distance = Figure_YAxis_Item_Labels_Distance(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_YAxis_Item_Labels_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Format : <code>string</code></summary>
        member this.format = Figure_YAxis_Item_Labels_Format(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Overflow : <code>string</code></summary>
        member this.overflow = Figure_YAxis_Item_Labels_Overflow(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Padding : <code>int</code></summary>
        member this.padding = Figure_YAxis_Item_Labels_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_ReserveSpace : <code>bool</code></summary>
        member this.reserveSpace = Figure_YAxis_Item_Labels_ReserveSpace(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Rotation : <code>int</code></summary>
        member this.rotation = Figure_YAxis_Item_Labels_Rotation(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_StaggerLines : <code>int</code></summary>
        member this.staggerLines = Figure_YAxis_Item_Labels_StaggerLines(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Step : <code>int</code></summary>
        member this.step = Figure_YAxis_Item_Labels_Step(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_YAxis_Item_Labels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_UseHtml : <code>bool</code></summary>
        member this.useHtml = Figure_YAxis_Item_Labels_UseHtml(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_X : <code>int</code></summary>
        member this.x = Figure_YAxis_Item_Labels_X(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_Y : <code>int</code></summary>
        member this.y = Figure_YAxis_Item_Labels_Y(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels_ZIndex : <code>int</code></summary>
        member this.zIndex = Figure_YAxis_Item_Labels_ZIndex(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.labels" (parent.GetPath()))
                |> Option.defaultValue "labels"

        static member ToJson (o:{| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let autoRotation = sprintf "%i" o.autoRotation
            let autoRotationLimit = sprintf "%i" o.autoRotationLimit
            let distance = sprintf "%i" o.distance
            let enabled = sprintf "%b" o.enabled
            let format = sprintf "\\\"%s\\\"" o.format
            let overflow = sprintf "\\\"%s\\\"" o.overflow
            let padding = sprintf "%i" o.padding
            let reserveSpace = sprintf "%b" o.reserveSpace
            let rotation = sprintf "%i" o.rotation
            let staggerLines = sprintf "%i" o.staggerLines
            let step = sprintf "%i" o.step
            let style = Figure_YAxis_Item_Labels_Style.ToJson o.style
            let useHtml = sprintf "%b" o.useHtml
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            let zIndex = sprintf "%i" o.zIndex
            sprintf "{\\\"align\\\":%s,\\\"autoRotation\\\":%s,\\\"autoRotationLimit\\\":%s,\\\"distance\\\":%s,\\\"enabled\\\":%s,\\\"format\\\":%s,\\\"overflow\\\":%s,\\\"padding\\\":%s,\\\"reserveSpace\\\":%s,\\\"rotation\\\":%s,\\\"staggerLines\\\":%s,\\\"step\\\":%s,\\\"style\\\":%s,\\\"useHtml\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s,\\\"zIndex\\\":%s}" align autoRotation autoRotationLimit distance enabled format overflow padding reserveSpace rotation staggerLines step style useHtml x y zIndex

        member this.Set (o:{| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Labels.ToJson o)


    ///<summary>Figure_YAxis_Item_Left : <code>int</code></summary>
    type Figure_YAxis_Item_Left(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.left" (parent.GetPath()))
                |> Option.defaultValue "left"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Left.ToJson o)

    ///<summary>Figure_YAxis_Item_LineColor : <code>string</code></summary>
    type Figure_YAxis_Item_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_LineColor.ToJson o)

    ///<summary>Figure_YAxis_Item_LineWidth : <code>int</code></summary>
    type Figure_YAxis_Item_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_LineWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_LinkedTo : <code>int</code></summary>
    type Figure_YAxis_Item_LinkedTo(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linkedTo" (parent.GetPath()))
                |> Option.defaultValue "linkedTo"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_LinkedTo.ToJson o)

    ///<summary>Figure_YAxis_Item_Margin : <code>int</code></summary>
    type Figure_YAxis_Item_Margin(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.margin" (parent.GetPath()))
                |> Option.defaultValue "margin"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Margin.ToJson o)

    ///<summary>Figure_YAxis_Item_Max : <code>int</code></summary>
    type Figure_YAxis_Item_Max(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.max" (parent.GetPath()))
                |> Option.defaultValue "max"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Max.ToJson o)

    ///<summary>Figure_YAxis_Item_MaxColor : <code>string</code></summary>
    type Figure_YAxis_Item_MaxColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.maxColor" (parent.GetPath()))
                |> Option.defaultValue "maxColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MaxColor.ToJson o)

    ///<summary>Figure_YAxis_Item_MaxPadding : <code>int</code></summary>
    type Figure_YAxis_Item_MaxPadding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.maxPadding" (parent.GetPath()))
                |> Option.defaultValue "maxPadding"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MaxPadding.ToJson o)

    ///<summary>Figure_YAxis_Item_Min : <code>int</code></summary>
    type Figure_YAxis_Item_Min(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.min" (parent.GetPath()))
                |> Option.defaultValue "min"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Min.ToJson o)

    ///<summary>Figure_YAxis_Item_MinColor : <code>string</code></summary>
    type Figure_YAxis_Item_MinColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minColor" (parent.GetPath()))
                |> Option.defaultValue "minColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinColor.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorGridLineColor : <code>string</code></summary>
    type Figure_YAxis_Item_MinorGridLineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorGridLineColor" (parent.GetPath()))
                |> Option.defaultValue "minorGridLineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorGridLineColor.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorGridLineDashStyle : <code>string</code></summary>
    type Figure_YAxis_Item_MinorGridLineDashStyle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorGridLineDashStyle" (parent.GetPath()))
                |> Option.defaultValue "minorGridLineDashStyle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorGridLineDashStyle.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorGridLineWidth : <code>int</code></summary>
    type Figure_YAxis_Item_MinorGridLineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorGridLineWidth" (parent.GetPath()))
                |> Option.defaultValue "minorGridLineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorGridLineWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorTickColor : <code>string</code></summary>
    type Figure_YAxis_Item_MinorTickColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickColor" (parent.GetPath()))
                |> Option.defaultValue "minorTickColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorTickColor.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorTickInterval : <code>int</code></summary>
    type Figure_YAxis_Item_MinorTickInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickInterval" (parent.GetPath()))
                |> Option.defaultValue "minorTickInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorTickInterval.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorTickLength : <code>int</code></summary>
    type Figure_YAxis_Item_MinorTickLength(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickLength" (parent.GetPath()))
                |> Option.defaultValue "minorTickLength"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorTickLength.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorTickPosition : <code>string</code></summary>
    type Figure_YAxis_Item_MinorTickPosition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickPosition" (parent.GetPath()))
                |> Option.defaultValue "minorTickPosition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorTickPosition.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorTicks : <code>bool</code></summary>
    type Figure_YAxis_Item_MinorTicks(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTicks" (parent.GetPath()))
                |> Option.defaultValue "minorTicks"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorTicks.ToJson o)

    ///<summary>Figure_YAxis_Item_MinorTickWidth : <code>int</code></summary>
    type Figure_YAxis_Item_MinorTickWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minorTickWidth" (parent.GetPath()))
                |> Option.defaultValue "minorTickWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinorTickWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_MinRange : <code>int</code></summary>
    type Figure_YAxis_Item_MinRange(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minRange" (parent.GetPath()))
                |> Option.defaultValue "minRange"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinRange.ToJson o)

    ///<summary>Figure_YAxis_Item_MinTickInterval : <code>int</code></summary>
    type Figure_YAxis_Item_MinTickInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.minTickInterval" (parent.GetPath()))
                |> Option.defaultValue "minTickInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_MinTickInterval.ToJson o)

    ///<summary>Figure_YAxis_Item_Offset : <code>int</code></summary>
    type Figure_YAxis_Item_Offset(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.offset" (parent.GetPath()))
                |> Option.defaultValue "offset"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Offset.ToJson o)

    ///<summary>Figure_YAxis_Item_Opposite : <code>bool</code></summary>
    type Figure_YAxis_Item_Opposite(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opposite" (parent.GetPath()))
                |> Option.defaultValue "opposite"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Opposite.ToJson o)

    ///<summary>Figure_YAxis_Item_Pane : <code>int</code></summary>
    type Figure_YAxis_Item_Pane(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pane" (parent.GetPath()))
                |> Option.defaultValue "pane"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Pane.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_BorderColor : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_BorderColor.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_BorderWidth : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_BorderWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderWidth" (parent.GetPath()))
                |> Option.defaultValue "borderWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_BorderWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_ClassName : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_ClassName.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Color : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Color.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_From : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_From(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.from" (parent.GetPath()))
                |> Option.defaultValue "from"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_From.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Id : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Id(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.id" (parent.GetPath()))
                |> Option.defaultValue "id"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Id.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_InnerRadius : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_InnerRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.innerRadius" (parent.GetPath()))
                |> Option.defaultValue "innerRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_InnerRadius.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Align : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Align.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Rotation : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Rotation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.rotation" (parent.GetPath()))
                |> Option.defaultValue "rotation"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Rotation.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Background : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Background.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Border : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Border.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_BorderRadius : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_BorderRadius.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Color : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Color.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Cursor : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Cursor.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontFamily : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontFamily.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontWeight : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontWeight.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontSize : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontSize.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Height : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Height.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_LineWidth : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_LineWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Padding : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Padding.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Position : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Position.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextAlign : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextAlign.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextDecoration : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextDecoration.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOutline : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOutline.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOverflow : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOverflow.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Top : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Top.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Transition : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Transition.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Width : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style_Width.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Background : <code>string</code></summary>
        member this.background = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_YAxis_Item_PlotBands_Item_Labels_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Border : <code>string</code></summary>
        member this.border = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_YAxis_Item_PlotBands_Item_Labels_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Color : <code>string</code></summary>
        member this.color = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_YAxis_Item_PlotBands_Item_Labels_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Height : <code>int</code></summary>
        member this.height = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_YAxis_Item_PlotBands_Item_Labels_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Position : <code>string</code></summary>
        member this.position = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_YAxis_Item_PlotBands_Item_Labels_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Top : <code>string</code></summary>
        member this.top = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_YAxis_Item_PlotBands_Item_Labels_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style_Width : <code>int</code></summary>
        member this.width = Figure_YAxis_Item_PlotBands_Item_Labels_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Style.ToJson o)


    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Text : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Text.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_TextAlign : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_TextAlign.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_UseHtml : <code>bool</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_UseHtml(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.useHtml" (parent.GetPath()))
                |> Option.defaultValue "useHtml"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_UseHtml.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_VerticalAlign : <code>string</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_VerticalAlign.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_X : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_X.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Y : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels_Y.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels : <code>{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Labels(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Align : <code>string</code></summary>
        member this.align = Figure_YAxis_Item_PlotBands_Item_Labels_Align(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Rotation : <code>int</code></summary>
        member this.rotation = Figure_YAxis_Item_PlotBands_Item_Labels_Rotation(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_YAxis_Item_PlotBands_Item_Labels_Style(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Text : <code>string</code></summary>
        member this.text = Figure_YAxis_Item_PlotBands_Item_Labels_Text(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_YAxis_Item_PlotBands_Item_Labels_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_UseHtml : <code>bool</code></summary>
        member this.useHtml = Figure_YAxis_Item_PlotBands_Item_Labels_UseHtml(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_YAxis_Item_PlotBands_Item_Labels_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_X : <code>int</code></summary>
        member this.x = Figure_YAxis_Item_PlotBands_Item_Labels_X(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels_Y : <code>int</code></summary>
        member this.y = Figure_YAxis_Item_PlotBands_Item_Labels_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.labels" (parent.GetPath()))
                |> Option.defaultValue "labels"

        static member ToJson (o:{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let rotation = sprintf "%i" o.rotation
            let style = Figure_YAxis_Item_PlotBands_Item_Labels_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let useHtml = sprintf "%b" o.useHtml
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"rotation\\\":%s,\\\"style\\\":%s,\\\"text\\\":%s,\\\"textAlign\\\":%s,\\\"useHtml\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align rotation style text textAlign useHtml verticalAlign x y

        member this.Set (o:{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Labels.ToJson o)


    ///<summary>Figure_YAxis_Item_PlotBands_Item_OuterRadius : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_OuterRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.outerRadius" (parent.GetPath()))
                |> Option.defaultValue "outerRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_OuterRadius.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_Thickness : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_Thickness(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.thickness" (parent.GetPath()))
                |> Option.defaultValue "thickness"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_Thickness.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_To : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_To(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.to" (parent.GetPath()))
                |> Option.defaultValue "to"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_To.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item_ZIndex : <code>int</code></summary>
    type Figure_YAxis_Item_PlotBands_Item_ZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zIndex" (parent.GetPath()))
                |> Option.defaultValue "zIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item_ZIndex.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotBands_Item : <code>{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |}</code></summary>
    type Figure_YAxis_Item_PlotBands_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0


        ///<summary>Figure_YAxis_Item_PlotBands_Item_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_YAxis_Item_PlotBands_Item_BorderColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_BorderWidth : <code>int</code></summary>
        member this.borderWidth = Figure_YAxis_Item_PlotBands_Item_BorderWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_ClassName : <code>string</code></summary>
        member this.className = Figure_YAxis_Item_PlotBands_Item_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Color : <code>string</code></summary>
        member this.color = Figure_YAxis_Item_PlotBands_Item_Color(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_From : <code>int</code></summary>
        member this._from = Figure_YAxis_Item_PlotBands_Item_From(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Id : <code>string</code></summary>
        member this.id = Figure_YAxis_Item_PlotBands_Item_Id(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_InnerRadius : <code>int</code></summary>
        member this.innerRadius = Figure_YAxis_Item_PlotBands_Item_InnerRadius(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Labels : <code>{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}</code></summary>
        member this.labels = Figure_YAxis_Item_PlotBands_Item_Labels(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_OuterRadius : <code>int</code></summary>
        member this.outerRadius = Figure_YAxis_Item_PlotBands_Item_OuterRadius(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_Thickness : <code>int</code></summary>
        member this.thickness = Figure_YAxis_Item_PlotBands_Item_Thickness(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_To : <code>int</code></summary>
        member this._to = Figure_YAxis_Item_PlotBands_Item_To(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands_Item_ZIndex : <code>int</code></summary>
        member this.zIndex = Figure_YAxis_Item_PlotBands_Item_ZIndex(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |}) =
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            let borderWidth = sprintf "%i" o.borderWidth
            let className = sprintf "\\\"%s\\\"" o.className
            let color = sprintf "\\\"%s\\\"" o.color
            let _from = sprintf "%i" o._from
            let id = sprintf "\\\"%s\\\"" o.id
            let innerRadius = sprintf "%i" o.innerRadius
            let labels = Figure_YAxis_Item_PlotBands_Item_Labels.ToJson o.labels
            let outerRadius = sprintf "%i" o.outerRadius
            let thickness = sprintf "%i" o.thickness
            let _to = sprintf "%i" o._to
            let zIndex = sprintf "%i" o.zIndex
            sprintf "{\\\"borderColor\\\":%s,\\\"borderWidth\\\":%s,\\\"className\\\":%s,\\\"color\\\":%s,\\\"_from\\\":%s,\\\"id\\\":%s,\\\"innerRadius\\\":%s,\\\"labels\\\":%s,\\\"outerRadius\\\":%s,\\\"thickness\\\":%s,\\\"_to\\\":%s,\\\"zIndex\\\":%s}" borderColor borderWidth className color _from id innerRadius labels outerRadius thickness _to zIndex

        member this.Set (o:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands_Item.ToJson o)


    ///<summary>Figure_YAxis_Item_PlotBands : <code>{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq</code></summary>
    type Figure_YAxis_Item_PlotBands(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_YAxis_Item_PlotBands_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.plotBands" (parent.GetPath()))
                |> Option.defaultValue "plotBands"

        static member ToJson (o:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_YAxis_Item_PlotBands_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotBands.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_YAxis_Item_PlotLines_Item_ClassName : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_ClassName.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Color : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Color.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_DashStyle : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_DashStyle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dashStyle" (parent.GetPath()))
                |> Option.defaultValue "dashStyle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_DashStyle.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Id : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Id(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.id" (parent.GetPath()))
                |> Option.defaultValue "id"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Id.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Align : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Align(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.align" (parent.GetPath()))
                |> Option.defaultValue "align"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Align.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Rotation : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Rotation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.rotation" (parent.GetPath()))
                |> Option.defaultValue "rotation"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Rotation.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Background : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Background.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_BackgroundColor : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Border : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Border.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_BorderRadius : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_BorderRadius.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Color : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Color.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Cursor : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Cursor.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_FontFamily : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_FontFamily.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_FontWeight : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_FontWeight.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_FontSize : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_FontSize.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Height : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Height.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_LineWidth : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_LineWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Padding : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Padding.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Position : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Position.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_TextAlign : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_TextAlign.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_TextDecoration : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_TextDecoration.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOutline : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOutline.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOverflow : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOverflow.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Top : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Top.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Transition : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Transition.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_WhiteSpace : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Width : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style_Width.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Background : <code>string</code></summary>
        member this.background = Figure_YAxis_Item_PlotLines_Item_Label_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_YAxis_Item_PlotLines_Item_Label_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Border : <code>string</code></summary>
        member this.border = Figure_YAxis_Item_PlotLines_Item_Label_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_YAxis_Item_PlotLines_Item_Label_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Color : <code>string</code></summary>
        member this.color = Figure_YAxis_Item_PlotLines_Item_Label_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_YAxis_Item_PlotLines_Item_Label_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_YAxis_Item_PlotLines_Item_Label_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_YAxis_Item_PlotLines_Item_Label_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_YAxis_Item_PlotLines_Item_Label_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Height : <code>int</code></summary>
        member this.height = Figure_YAxis_Item_PlotLines_Item_Label_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_YAxis_Item_PlotLines_Item_Label_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_YAxis_Item_PlotLines_Item_Label_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Position : <code>string</code></summary>
        member this.position = Figure_YAxis_Item_PlotLines_Item_Label_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_YAxis_Item_PlotLines_Item_Label_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_YAxis_Item_PlotLines_Item_Label_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_YAxis_Item_PlotLines_Item_Label_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Top : <code>string</code></summary>
        member this.top = Figure_YAxis_Item_PlotLines_Item_Label_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_YAxis_Item_PlotLines_Item_Label_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_YAxis_Item_PlotLines_Item_Label_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style_Width : <code>int</code></summary>
        member this.width = Figure_YAxis_Item_PlotLines_Item_Label_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Style.ToJson o)


    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Text : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Text.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_TextAlign : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_TextAlign.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_UseHtml : <code>bool</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_UseHtml(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.useHtml" (parent.GetPath()))
                |> Option.defaultValue "useHtml"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_UseHtml.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_VerticalAlign : <code>string</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_VerticalAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.verticalAlign" (parent.GetPath()))
                |> Option.defaultValue "verticalAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_VerticalAlign.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_X : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_X(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x" (parent.GetPath()))
                |> Option.defaultValue "x"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_X.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Y : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label_Y(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y" (parent.GetPath()))
                |> Option.defaultValue "y"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label_Y.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Label : <code>{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Label(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Align : <code>string</code></summary>
        member this.align = Figure_YAxis_Item_PlotLines_Item_Label_Align(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Rotation : <code>int</code></summary>
        member this.rotation = Figure_YAxis_Item_PlotLines_Item_Label_Rotation(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_YAxis_Item_PlotLines_Item_Label_Style(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Text : <code>string</code></summary>
        member this.text = Figure_YAxis_Item_PlotLines_Item_Label_Text(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_YAxis_Item_PlotLines_Item_Label_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_UseHtml : <code>bool</code></summary>
        member this.useHtml = Figure_YAxis_Item_PlotLines_Item_Label_UseHtml(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_VerticalAlign : <code>string</code></summary>
        member this.verticalAlign = Figure_YAxis_Item_PlotLines_Item_Label_VerticalAlign(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_X : <code>int</code></summary>
        member this.x = Figure_YAxis_Item_PlotLines_Item_Label_X(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label_Y : <code>int</code></summary>
        member this.y = Figure_YAxis_Item_PlotLines_Item_Label_Y(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.label" (parent.GetPath()))
                |> Option.defaultValue "label"

        static member ToJson (o:{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}) =
            let align = sprintf "\\\"%s\\\"" o.align
            let rotation = sprintf "%i" o.rotation
            let style = Figure_YAxis_Item_PlotLines_Item_Label_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let useHtml = sprintf "%b" o.useHtml
            let verticalAlign = sprintf "\\\"%s\\\"" o.verticalAlign
            let x = sprintf "%i" o.x
            let y = sprintf "%i" o.y
            sprintf "{\\\"align\\\":%s,\\\"rotation\\\":%s,\\\"style\\\":%s,\\\"text\\\":%s,\\\"textAlign\\\":%s,\\\"useHtml\\\":%s,\\\"verticalAlign\\\":%s,\\\"x\\\":%s,\\\"y\\\":%s}" align rotation style text textAlign useHtml verticalAlign x y

        member this.Set (o:{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Label.ToJson o)


    ///<summary>Figure_YAxis_Item_PlotLines_Item_Value : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Value(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.value" (parent.GetPath()))
                |> Option.defaultValue "value"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Value.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_Width : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_Width.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item_ZIndex : <code>int</code></summary>
    type Figure_YAxis_Item_PlotLines_Item_ZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zIndex" (parent.GetPath()))
                |> Option.defaultValue "zIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item_ZIndex.ToJson o)

    ///<summary>Figure_YAxis_Item_PlotLines_Item : <code>{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |}</code></summary>
    type Figure_YAxis_Item_PlotLines_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0


        ///<summary>Figure_YAxis_Item_PlotLines_Item_ClassName : <code>string</code></summary>
        member this.className = Figure_YAxis_Item_PlotLines_Item_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Color : <code>string</code></summary>
        member this.color = Figure_YAxis_Item_PlotLines_Item_Color(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_DashStyle : <code>string</code></summary>
        member this.dashStyle = Figure_YAxis_Item_PlotLines_Item_DashStyle(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Id : <code>string</code></summary>
        member this.id = Figure_YAxis_Item_PlotLines_Item_Id(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Label : <code>{| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}</code></summary>
        member this.label = Figure_YAxis_Item_PlotLines_Item_Label(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Value : <code>int</code></summary>
        member this.value = Figure_YAxis_Item_PlotLines_Item_Value(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_Width : <code>int</code></summary>
        member this.width = Figure_YAxis_Item_PlotLines_Item_Width(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines_Item_ZIndex : <code>int</code></summary>
        member this.zIndex = Figure_YAxis_Item_PlotLines_Item_ZIndex(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |}) =
            let className = sprintf "\\\"%s\\\"" o.className
            let color = sprintf "\\\"%s\\\"" o.color
            let dashStyle = sprintf "\\\"%s\\\"" o.dashStyle
            let id = sprintf "\\\"%s\\\"" o.id
            let label = Figure_YAxis_Item_PlotLines_Item_Label.ToJson o.label
            let value = sprintf "%i" o.value
            let width = sprintf "%i" o.width
            let zIndex = sprintf "%i" o.zIndex
            sprintf "{\\\"className\\\":%s,\\\"color\\\":%s,\\\"dashStyle\\\":%s,\\\"id\\\":%s,\\\"label\\\":%s,\\\"value\\\":%s,\\\"width\\\":%s,\\\"zIndex\\\":%s}" className color dashStyle id label value width zIndex

        member this.Set (o:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines_Item.ToJson o)


    ///<summary>Figure_YAxis_Item_PlotLines : <code>{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq</code></summary>
    type Figure_YAxis_Item_PlotLines(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_YAxis_Item_PlotLines_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.plotLines" (parent.GetPath()))
                |> Option.defaultValue "plotLines"

        static member ToJson (o:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_YAxis_Item_PlotLines_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_PlotLines.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_YAxis_Item_Reversed : <code>bool</code></summary>
    type Figure_YAxis_Item_Reversed(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.reversed" (parent.GetPath()))
                |> Option.defaultValue "reversed"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Reversed.ToJson o)

    ///<summary>Figure_YAxis_Item_ReversedStacks : <code>bool</code></summary>
    type Figure_YAxis_Item_ReversedStacks(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.reversedStacks" (parent.GetPath()))
                |> Option.defaultValue "reversedStacks"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_ReversedStacks.ToJson o)

    ///<summary>Figure_YAxis_Item_ShowEmpty : <code>bool</code></summary>
    type Figure_YAxis_Item_ShowEmpty(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showEmpty" (parent.GetPath()))
                |> Option.defaultValue "showEmpty"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_ShowEmpty.ToJson o)

    ///<summary>Figure_YAxis_Item_ShowFirstLabel : <code>bool</code></summary>
    type Figure_YAxis_Item_ShowFirstLabel(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showFirstLabel" (parent.GetPath()))
                |> Option.defaultValue "showFirstLabel"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_ShowFirstLabel.ToJson o)

    ///<summary>Figure_YAxis_Item_ShowLastLabel : <code>bool</code></summary>
    type Figure_YAxis_Item_ShowLastLabel(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showLastLabel" (parent.GetPath()))
                |> Option.defaultValue "showLastLabel"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_ShowLastLabel.ToJson o)

    ///<summary>Figure_YAxis_Item_SoftMax : <code>int</code></summary>
    type Figure_YAxis_Item_SoftMax(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softMax" (parent.GetPath()))
                |> Option.defaultValue "softMax"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_SoftMax.ToJson o)

    ///<summary>Figure_YAxis_Item_SoftMin : <code>int</code></summary>
    type Figure_YAxis_Item_SoftMin(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softMin" (parent.GetPath()))
                |> Option.defaultValue "softMin"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_SoftMin.ToJson o)

    ///<summary>Figure_YAxis_Item_StartOfWeek : <code>int</code></summary>
    type Figure_YAxis_Item_StartOfWeek(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.startOfWeek" (parent.GetPath()))
                |> Option.defaultValue "startOfWeek"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_StartOfWeek.ToJson o)

    ///<summary>Figure_YAxis_Item_StartOnTick : <code>bool</code></summary>
    type Figure_YAxis_Item_StartOnTick(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.startOnTick" (parent.GetPath()))
                |> Option.defaultValue "startOnTick"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_StartOnTick.ToJson o)

    ///<summary>Figure_YAxis_Item_Stops_Item_Item : <code>int</code></summary>
    type Figure_YAxis_Item_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Stops_Item_Item.ToJson o)

    ///<summary>Figure_YAxis_Item_Stops_Item : <code>int seq</code></summary>
    type Figure_YAxis_Item_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_YAxis_Item_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_YAxis_Item_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_YAxis_Item_Stops : <code>int seq seq</code></summary>
    type Figure_YAxis_Item_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_YAxis_Item_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_YAxis_Item_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_YAxis_Item_TickAmount : <code>int</code></summary>
    type Figure_YAxis_Item_TickAmount(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickAmount" (parent.GetPath()))
                |> Option.defaultValue "tickAmount"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickAmount.ToJson o)

    ///<summary>Figure_YAxis_Item_TickColor : <code>string</code></summary>
    type Figure_YAxis_Item_TickColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickColor" (parent.GetPath()))
                |> Option.defaultValue "tickColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickColor.ToJson o)

    ///<summary>Figure_YAxis_Item_TickInterval : <code>int</code></summary>
    type Figure_YAxis_Item_TickInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickInterval" (parent.GetPath()))
                |> Option.defaultValue "tickInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickInterval.ToJson o)

    ///<summary>Figure_YAxis_Item_TickLength : <code>int</code></summary>
    type Figure_YAxis_Item_TickLength(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickLength" (parent.GetPath()))
                |> Option.defaultValue "tickLength"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickLength.ToJson o)

    ///<summary>Figure_YAxis_Item_TickmarkPlacement : <code>string</code></summary>
    type Figure_YAxis_Item_TickmarkPlacement(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickmarkPlacement" (parent.GetPath()))
                |> Option.defaultValue "tickmarkPlacement"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickmarkPlacement.ToJson o)

    ///<summary>Figure_YAxis_Item_TickPixelInterval : <code>int</code></summary>
    type Figure_YAxis_Item_TickPixelInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickPixelInterval" (parent.GetPath()))
                |> Option.defaultValue "tickPixelInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickPixelInterval.ToJson o)

    ///<summary>Figure_YAxis_Item_TickPosition : <code>string</code></summary>
    type Figure_YAxis_Item_TickPosition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickPosition" (parent.GetPath()))
                |> Option.defaultValue "tickPosition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickPosition.ToJson o)

    ///<summary>Figure_YAxis_Item_TickPositions_Item : <code>int</code></summary>
    type Figure_YAxis_Item_TickPositions_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickPositions_Item.ToJson o)

    ///<summary>Figure_YAxis_Item_TickPositions : <code>int seq</code></summary>
    type Figure_YAxis_Item_TickPositions(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_YAxis_Item_TickPositions_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickPositions" (parent.GetPath()))
                |> Option.defaultValue "tickPositions"

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_YAxis_Item_TickPositions_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickPositions.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_YAxis_Item_TickWidth : <code>int</code></summary>
    type Figure_YAxis_Item_TickWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tickWidth" (parent.GetPath()))
                |> Option.defaultValue "tickWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TickWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Background : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Background.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_BackgroundColor : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Border : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Border.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_BorderRadius : <code>int</code></summary>
    type Figure_YAxis_Item_Title_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_BorderRadius.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Color : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Color.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Cursor : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Cursor.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_FontFamily : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_FontFamily.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_FontWeight : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_FontWeight.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_FontSize : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_FontSize.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Height : <code>int</code></summary>
    type Figure_YAxis_Item_Title_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Height.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_LineWidth : <code>int</code></summary>
    type Figure_YAxis_Item_Title_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_LineWidth.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Padding : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Padding.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Position : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Position.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_TextAlign : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_TextAlign.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_TextDecoration : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_TextDecoration.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_TextOutline : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_TextOutline.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_TextOverflow : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_TextOverflow.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Top : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Top.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Transition : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Transition.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_WhiteSpace : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style_Width : <code>int</code></summary>
    type Figure_YAxis_Item_Title_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style_Width.ToJson o)

    ///<summary>Figure_YAxis_Item_Title_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_YAxis_Item_Title_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_Title_Style_Background : <code>string</code></summary>
        member this.background = Figure_YAxis_Item_Title_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_YAxis_Item_Title_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Border : <code>string</code></summary>
        member this.border = Figure_YAxis_Item_Title_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_YAxis_Item_Title_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Color : <code>string</code></summary>
        member this.color = Figure_YAxis_Item_Title_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_YAxis_Item_Title_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_YAxis_Item_Title_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_YAxis_Item_Title_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_YAxis_Item_Title_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Height : <code>int</code></summary>
        member this.height = Figure_YAxis_Item_Title_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_YAxis_Item_Title_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_YAxis_Item_Title_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Position : <code>string</code></summary>
        member this.position = Figure_YAxis_Item_Title_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_YAxis_Item_Title_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_YAxis_Item_Title_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_YAxis_Item_Title_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_YAxis_Item_Title_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Top : <code>string</code></summary>
        member this.top = Figure_YAxis_Item_Title_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_YAxis_Item_Title_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_YAxis_Item_Title_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Style_Width : <code>int</code></summary>
        member this.width = Figure_YAxis_Item_Title_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Style.ToJson o)


    ///<summary>Figure_YAxis_Item_Title_Text : <code>string</code></summary>
    type Figure_YAxis_Item_Title_Text(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.text" (parent.GetPath()))
                |> Option.defaultValue "text"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title_Text.ToJson o)

    ///<summary>Figure_YAxis_Item_Title : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}</code></summary>
    type Figure_YAxis_Item_Title(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_YAxis_Item_Title_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_YAxis_Item_Title_Style(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title_Text : <code>string</code></summary>
        member this.text = Figure_YAxis_Item_Title_Text(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.title" (parent.GetPath()))
                |> Option.defaultValue "title"

        static member ToJson (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}) =
            let style = Figure_YAxis_Item_Title_Style.ToJson o.style
            let text = sprintf "\\\"%s\\\"" o.text
            sprintf "{\\\"style\\\":%s,\\\"text\\\":%s}" style text

        member this.Set (o:{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Title.ToJson o)


    ///<summary>Figure_YAxis_Item_TooltipValueFormat : <code>string</code></summary>
    type Figure_YAxis_Item_TooltipValueFormat(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.tooltipValueFormat" (parent.GetPath()))
                |> Option.defaultValue "tooltipValueFormat"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_TooltipValueFormat.ToJson o)

    ///<summary>Figure_YAxis_Item_Top : <code>int</code></summary>
    type Figure_YAxis_Item_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Top.ToJson o)

    ///<summary>Figure_YAxis_Item_Type : <code>string</code></summary>
    type Figure_YAxis_Item_Type(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.type" (parent.GetPath()))
                |> Option.defaultValue "type"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Type.ToJson o)

    ///<summary>Figure_YAxis_Item_UniqueNames : <code>bool</code></summary>
    type Figure_YAxis_Item_UniqueNames(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.uniqueNames" (parent.GetPath()))
                |> Option.defaultValue "uniqueNames"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_UniqueNames.ToJson o)

    ///<summary>Figure_YAxis_Item_Visible : <code>bool</code></summary>
    type Figure_YAxis_Item_Visible(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.visible" (parent.GetPath()))
                |> Option.defaultValue "visible"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Visible.ToJson o)

    ///<summary>Figure_YAxis_Item_Width : <code>int</code></summary>
    type Figure_YAxis_Item_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_Width.ToJson o)

    ///<summary>Figure_YAxis_Item_ZoomEnabled : <code>bool</code></summary>
    type Figure_YAxis_Item_ZoomEnabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zoomEnabled" (parent.GetPath()))
                |> Option.defaultValue "zoomEnabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item_ZoomEnabled.ToJson o)

    ///<summary>Figure_YAxis_Item : <code>{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |}</code></summary>
    type Figure_YAxis_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0


        ///<summary>Figure_YAxis_Item_AlignTicks : <code>bool</code></summary>
        member this.alignTicks = Figure_YAxis_Item_AlignTicks(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_AllowDecimals : <code>bool</code></summary>
        member this.allowDecimals = Figure_YAxis_Item_AllowDecimals(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_AlternateGridColor : <code>string</code></summary>
        member this.alternateGridColor = Figure_YAxis_Item_AlternateGridColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Angle : <code>int</code></summary>
        member this.angle = Figure_YAxis_Item_Angle(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Categories : <code>string seq</code></summary>
        member this.categories = Figure_YAxis_Item_Categories(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Ceiling : <code>int</code></summary>
        member this.ceiling = Figure_YAxis_Item_Ceiling(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_ClassName : <code>string</code></summary>
        member this.className = Figure_YAxis_Item_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Crosshair : <code>bool</code></summary>
        member this.crosshair = Figure_YAxis_Item_Crosshair(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_DateTimeLabelFormats : <code>{| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}</code></summary>
        member this.dateTimeLabelFormats = Figure_YAxis_Item_DateTimeLabelFormats(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_EndOnTick : <code>bool</code></summary>
        member this.endOnTick = Figure_YAxis_Item_EndOnTick(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Floor : <code>int</code></summary>
        member this.floor = Figure_YAxis_Item_Floor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_GridLineColor : <code>string</code></summary>
        member this.gridLineColor = Figure_YAxis_Item_GridLineColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_GridLineDashStyle : <code>string</code></summary>
        member this.gridLineDashStyle = Figure_YAxis_Item_GridLineDashStyle(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_GridLineInterpolation : <code>string</code></summary>
        member this.gridLineInterpolation = Figure_YAxis_Item_GridLineInterpolation(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_GridLineWidth : <code>int</code></summary>
        member this.gridLineWidth = Figure_YAxis_Item_GridLineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_GridZIndex : <code>int</code></summary>
        member this.gridZIndex = Figure_YAxis_Item_GridZIndex(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Height : <code>int</code></summary>
        member this.height = Figure_YAxis_Item_Height(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Id : <code>string</code></summary>
        member this.id = Figure_YAxis_Item_Id(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Labels : <code>{| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}</code></summary>
        member this.labels = Figure_YAxis_Item_Labels(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Left : <code>int</code></summary>
        member this.left = Figure_YAxis_Item_Left(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_YAxis_Item_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_YAxis_Item_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_LinkedTo : <code>int</code></summary>
        member this.linkedTo = Figure_YAxis_Item_LinkedTo(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Margin : <code>int</code></summary>
        member this.margin = Figure_YAxis_Item_Margin(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Max : <code>int</code></summary>
        member this.max = Figure_YAxis_Item_Max(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MaxColor : <code>string</code></summary>
        member this.maxColor = Figure_YAxis_Item_MaxColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MaxPadding : <code>int</code></summary>
        member this.maxPadding = Figure_YAxis_Item_MaxPadding(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Min : <code>int</code></summary>
        member this.min = Figure_YAxis_Item_Min(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinColor : <code>string</code></summary>
        member this.minColor = Figure_YAxis_Item_MinColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorGridLineColor : <code>string</code></summary>
        member this.minorGridLineColor = Figure_YAxis_Item_MinorGridLineColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorGridLineDashStyle : <code>string</code></summary>
        member this.minorGridLineDashStyle = Figure_YAxis_Item_MinorGridLineDashStyle(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorGridLineWidth : <code>int</code></summary>
        member this.minorGridLineWidth = Figure_YAxis_Item_MinorGridLineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorTickColor : <code>string</code></summary>
        member this.minorTickColor = Figure_YAxis_Item_MinorTickColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorTickInterval : <code>int</code></summary>
        member this.minorTickInterval = Figure_YAxis_Item_MinorTickInterval(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorTickLength : <code>int</code></summary>
        member this.minorTickLength = Figure_YAxis_Item_MinorTickLength(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorTickPosition : <code>string</code></summary>
        member this.minorTickPosition = Figure_YAxis_Item_MinorTickPosition(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorTicks : <code>bool</code></summary>
        member this.minorTicks = Figure_YAxis_Item_MinorTicks(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinorTickWidth : <code>int</code></summary>
        member this.minorTickWidth = Figure_YAxis_Item_MinorTickWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinRange : <code>int</code></summary>
        member this.minRange = Figure_YAxis_Item_MinRange(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_MinTickInterval : <code>int</code></summary>
        member this.minTickInterval = Figure_YAxis_Item_MinTickInterval(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Offset : <code>int</code></summary>
        member this.offset = Figure_YAxis_Item_Offset(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Opposite : <code>bool</code></summary>
        member this.opposite = Figure_YAxis_Item_Opposite(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Pane : <code>int</code></summary>
        member this.pane = Figure_YAxis_Item_Pane(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotBands : <code>{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq</code></summary>
        member this.plotBands = Figure_YAxis_Item_PlotBands(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_PlotLines : <code>{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq</code></summary>
        member this.plotLines = Figure_YAxis_Item_PlotLines(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Reversed : <code>bool</code></summary>
        member this.reversed = Figure_YAxis_Item_Reversed(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_ReversedStacks : <code>bool</code></summary>
        member this.reversedStacks = Figure_YAxis_Item_ReversedStacks(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_ShowEmpty : <code>bool</code></summary>
        member this.showEmpty = Figure_YAxis_Item_ShowEmpty(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_ShowFirstLabel : <code>bool</code></summary>
        member this.showFirstLabel = Figure_YAxis_Item_ShowFirstLabel(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_ShowLastLabel : <code>bool</code></summary>
        member this.showLastLabel = Figure_YAxis_Item_ShowLastLabel(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_SoftMax : <code>int</code></summary>
        member this.softMax = Figure_YAxis_Item_SoftMax(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_SoftMin : <code>int</code></summary>
        member this.softMin = Figure_YAxis_Item_SoftMin(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_StartOfWeek : <code>int</code></summary>
        member this.startOfWeek = Figure_YAxis_Item_StartOfWeek(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_StartOnTick : <code>bool</code></summary>
        member this.startOnTick = Figure_YAxis_Item_StartOnTick(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_YAxis_Item_Stops(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickAmount : <code>int</code></summary>
        member this.tickAmount = Figure_YAxis_Item_TickAmount(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickColor : <code>string</code></summary>
        member this.tickColor = Figure_YAxis_Item_TickColor(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickInterval : <code>int</code></summary>
        member this.tickInterval = Figure_YAxis_Item_TickInterval(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickLength : <code>int</code></summary>
        member this.tickLength = Figure_YAxis_Item_TickLength(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickmarkPlacement : <code>string</code></summary>
        member this.tickmarkPlacement = Figure_YAxis_Item_TickmarkPlacement(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickPixelInterval : <code>int</code></summary>
        member this.tickPixelInterval = Figure_YAxis_Item_TickPixelInterval(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickPosition : <code>string</code></summary>
        member this.tickPosition = Figure_YAxis_Item_TickPosition(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickPositions : <code>int seq</code></summary>
        member this.tickPositions = Figure_YAxis_Item_TickPositions(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TickWidth : <code>int</code></summary>
        member this.tickWidth = Figure_YAxis_Item_TickWidth(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Title : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}</code></summary>
        member this.title = Figure_YAxis_Item_Title(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_TooltipValueFormat : <code>string</code></summary>
        member this.tooltipValueFormat = Figure_YAxis_Item_TooltipValueFormat(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Top : <code>int</code></summary>
        member this.top = Figure_YAxis_Item_Top(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Type : <code>string</code></summary>
        member this._type = Figure_YAxis_Item_Type(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_UniqueNames : <code>bool</code></summary>
        member this.uniqueNames = Figure_YAxis_Item_UniqueNames(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Visible : <code>bool</code></summary>
        member this.visible = Figure_YAxis_Item_Visible(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_Width : <code>int</code></summary>
        member this.width = Figure_YAxis_Item_Width(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis_Item_ZoomEnabled : <code>bool</code></summary>
        member this.zoomEnabled = Figure_YAxis_Item_ZoomEnabled(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |}) =
            let alignTicks = sprintf "%b" o.alignTicks
            let allowDecimals = sprintf "%b" o.allowDecimals
            let alternateGridColor = sprintf "\\\"%s\\\"" o.alternateGridColor
            let angle = sprintf "%i" o.angle
            let categories = Figure_YAxis_Item_Categories.ToJson o.categories
            let ceiling = sprintf "%i" o.ceiling
            let className = sprintf "\\\"%s\\\"" o.className
            let crosshair = sprintf "%b" o.crosshair
            let dateTimeLabelFormats = Figure_YAxis_Item_DateTimeLabelFormats.ToJson o.dateTimeLabelFormats
            let endOnTick = sprintf "%b" o.endOnTick
            let floor = sprintf "%i" o.floor
            let gridLineColor = sprintf "\\\"%s\\\"" o.gridLineColor
            let gridLineDashStyle = sprintf "\\\"%s\\\"" o.gridLineDashStyle
            let gridLineInterpolation = sprintf "\\\"%s\\\"" o.gridLineInterpolation
            let gridLineWidth = sprintf "%i" o.gridLineWidth
            let gridZIndex = sprintf "%i" o.gridZIndex
            let height = sprintf "%i" o.height
            let id = sprintf "\\\"%s\\\"" o.id
            let labels = Figure_YAxis_Item_Labels.ToJson o.labels
            let left = sprintf "%i" o.left
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            let linkedTo = sprintf "%i" o.linkedTo
            let margin = sprintf "%i" o.margin
            let max = sprintf "%i" o.max
            let maxColor = sprintf "\\\"%s\\\"" o.maxColor
            let maxPadding = sprintf "%i" o.maxPadding
            let min = sprintf "%i" o.min
            let minColor = sprintf "\\\"%s\\\"" o.minColor
            let minorGridLineColor = sprintf "\\\"%s\\\"" o.minorGridLineColor
            let minorGridLineDashStyle = sprintf "\\\"%s\\\"" o.minorGridLineDashStyle
            let minorGridLineWidth = sprintf "%i" o.minorGridLineWidth
            let minorTickColor = sprintf "\\\"%s\\\"" o.minorTickColor
            let minorTickInterval = sprintf "%i" o.minorTickInterval
            let minorTickLength = sprintf "%i" o.minorTickLength
            let minorTickPosition = sprintf "\\\"%s\\\"" o.minorTickPosition
            let minorTicks = sprintf "%b" o.minorTicks
            let minorTickWidth = sprintf "%i" o.minorTickWidth
            let minRange = sprintf "%i" o.minRange
            let minTickInterval = sprintf "%i" o.minTickInterval
            let offset = sprintf "%i" o.offset
            let opposite = sprintf "%b" o.opposite
            let pane = sprintf "%i" o.pane
            let plotBands = Figure_YAxis_Item_PlotBands.ToJson o.plotBands
            let plotLines = Figure_YAxis_Item_PlotLines.ToJson o.plotLines
            let reversed = sprintf "%b" o.reversed
            let reversedStacks = sprintf "%b" o.reversedStacks
            let showEmpty = sprintf "%b" o.showEmpty
            let showFirstLabel = sprintf "%b" o.showFirstLabel
            let showLastLabel = sprintf "%b" o.showLastLabel
            let softMax = sprintf "%i" o.softMax
            let softMin = sprintf "%i" o.softMin
            let startOfWeek = sprintf "%i" o.startOfWeek
            let startOnTick = sprintf "%b" o.startOnTick
            let stops = Figure_YAxis_Item_Stops.ToJson o.stops
            let tickAmount = sprintf "%i" o.tickAmount
            let tickColor = sprintf "\\\"%s\\\"" o.tickColor
            let tickInterval = sprintf "%i" o.tickInterval
            let tickLength = sprintf "%i" o.tickLength
            let tickmarkPlacement = sprintf "\\\"%s\\\"" o.tickmarkPlacement
            let tickPixelInterval = sprintf "%i" o.tickPixelInterval
            let tickPosition = sprintf "\\\"%s\\\"" o.tickPosition
            let tickPositions = Figure_YAxis_Item_TickPositions.ToJson o.tickPositions
            let tickWidth = sprintf "%i" o.tickWidth
            let title = Figure_YAxis_Item_Title.ToJson o.title
            let tooltipValueFormat = sprintf "\\\"%s\\\"" o.tooltipValueFormat
            let top = sprintf "%i" o.top
            let _type = sprintf "\\\"%s\\\"" o._type
            let uniqueNames = sprintf "%b" o.uniqueNames
            let visible = sprintf "%b" o.visible
            let width = sprintf "%i" o.width
            let zoomEnabled = sprintf "%b" o.zoomEnabled
            sprintf "{\\\"alignTicks\\\":%s,\\\"allowDecimals\\\":%s,\\\"alternateGridColor\\\":%s,\\\"angle\\\":%s,\\\"categories\\\":%s,\\\"ceiling\\\":%s,\\\"className\\\":%s,\\\"crosshair\\\":%s,\\\"dateTimeLabelFormats\\\":%s,\\\"endOnTick\\\":%s,\\\"floor\\\":%s,\\\"gridLineColor\\\":%s,\\\"gridLineDashStyle\\\":%s,\\\"gridLineInterpolation\\\":%s,\\\"gridLineWidth\\\":%s,\\\"gridZIndex\\\":%s,\\\"height\\\":%s,\\\"id\\\":%s,\\\"labels\\\":%s,\\\"left\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s,\\\"linkedTo\\\":%s,\\\"margin\\\":%s,\\\"max\\\":%s,\\\"maxColor\\\":%s,\\\"maxPadding\\\":%s,\\\"min\\\":%s,\\\"minColor\\\":%s,\\\"minorGridLineColor\\\":%s,\\\"minorGridLineDashStyle\\\":%s,\\\"minorGridLineWidth\\\":%s,\\\"minorTickColor\\\":%s,\\\"minorTickInterval\\\":%s,\\\"minorTickLength\\\":%s,\\\"minorTickPosition\\\":%s,\\\"minorTicks\\\":%s,\\\"minorTickWidth\\\":%s,\\\"minRange\\\":%s,\\\"minTickInterval\\\":%s,\\\"offset\\\":%s,\\\"opposite\\\":%s,\\\"pane\\\":%s,\\\"plotBands\\\":%s,\\\"plotLines\\\":%s,\\\"reversed\\\":%s,\\\"reversedStacks\\\":%s,\\\"showEmpty\\\":%s,\\\"showFirstLabel\\\":%s,\\\"showLastLabel\\\":%s,\\\"softMax\\\":%s,\\\"softMin\\\":%s,\\\"startOfWeek\\\":%s,\\\"startOnTick\\\":%s,\\\"stops\\\":%s,\\\"tickAmount\\\":%s,\\\"tickColor\\\":%s,\\\"tickInterval\\\":%s,\\\"tickLength\\\":%s,\\\"tickmarkPlacement\\\":%s,\\\"tickPixelInterval\\\":%s,\\\"tickPosition\\\":%s,\\\"tickPositions\\\":%s,\\\"tickWidth\\\":%s,\\\"title\\\":%s,\\\"tooltipValueFormat\\\":%s,\\\"top\\\":%s,\\\"_type\\\":%s,\\\"uniqueNames\\\":%s,\\\"visible\\\":%s,\\\"width\\\":%s,\\\"zoomEnabled\\\":%s}" alignTicks allowDecimals alternateGridColor angle categories ceiling className crosshair dateTimeLabelFormats endOnTick floor gridLineColor gridLineDashStyle gridLineInterpolation gridLineWidth gridZIndex height id labels left lineColor lineWidth linkedTo margin max maxColor maxPadding min minColor minorGridLineColor minorGridLineDashStyle minorGridLineWidth minorTickColor minorTickInterval minorTickLength minorTickPosition minorTicks minorTickWidth minRange minTickInterval offset opposite pane plotBands plotLines reversed reversedStacks showEmpty showFirstLabel showLastLabel softMax softMin startOfWeek startOnTick stops tickAmount tickColor tickInterval tickLength tickmarkPlacement tickPixelInterval tickPosition tickPositions tickWidth title tooltipValueFormat top _type uniqueNames visible width zoomEnabled

        member this.Set (o:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis_Item.ToJson o)


    ///<summary>Figure_YAxis : <code>{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq</code></summary>
    type Figure_YAxis(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_YAxis_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.yAxis" (parent.GetPath()))
                |> Option.defaultValue "yAxis"

        static member ToJson (o:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_YAxis_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_YAxis.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Toolbar_ItemStyle_Color : <code>string</code></summary>
    type Figure_Toolbar_ItemStyle_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Toolbar_ItemStyle_Color.ToJson o)

    ///<summary>Figure_Toolbar_ItemStyle : <code>{| color:string |}</code></summary>
    type Figure_Toolbar_ItemStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Toolbar_ItemStyle_Color : <code>string</code></summary>
        member this.color = Figure_Toolbar_ItemStyle_Color(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.itemStyle" (parent.GetPath()))
                |> Option.defaultValue "itemStyle"

        static member ToJson (o:{| color:string |}) =
            let color = sprintf "\\\"%s\\\"" o.color
            sprintf "{\\\"color\\\":%s}" color

        member this.Set (o:{| color:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Toolbar_ItemStyle.ToJson o)


    ///<summary>Figure_Toolbar : <code>{| itemStyle: {| color:string |} |}</code></summary>
    type Figure_Toolbar(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Toolbar_ItemStyle : <code>{| color:string |}</code></summary>
        member this.itemStyle = Figure_Toolbar_ItemStyle(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.toolbar" (parent.GetPath()))
                |> Option.defaultValue "toolbar"

        static member ToJson (o:{| itemStyle: {| color:string |} |}) =
            let itemStyle = Figure_Toolbar_ItemStyle.ToJson o.itemStyle
            sprintf "{\\\"itemStyle\\\":%s}" itemStyle

        member this.Set (o:{| itemStyle: {| color:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Toolbar.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X1 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x1" (parent.GetPath()))
                |> Option.defaultValue "x1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X1.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y1 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y1" (parent.GetPath()))
                |> Option.defaultValue "y1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y1.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X2 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x2" (parent.GetPath()))
                |> Option.defaultValue "x2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X2.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y2 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y2" (parent.GetPath()))
                |> Option.defaultValue "y2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y2.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill_LinearGradient(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X1 : <code>int</code></summary>
        member this.x1 = Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X1(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y1 : <code>int</code></summary>
        member this.y1 = Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y1(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X2 : <code>int</code></summary>
        member this.x2 = Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_X2(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y2 : <code>int</code></summary>
        member this.y2 = Figure_RangeSelector_ButtonTheme_Fill_LinearGradient_Y2(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linearGradient" (parent.GetPath()))
                |> Option.defaultValue "linearGradient"

        static member ToJson (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            let x1 = sprintf "%i" o.x1
            let y1 = sprintf "%i" o.y1
            let x2 = sprintf "%i" o.x2
            let y2 = sprintf "%i" o.y2
            sprintf "{\\\"x1\\\":%s,\\\"y1\\\":%s,\\\"x2\\\":%s,\\\"y2\\\":%s}" x1 y1 x2 y2

        member this.Set (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill_LinearGradient.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_Fill_Stops_Item_Item : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill_Stops_Item_Item.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Fill_Stops_Item : <code>int seq</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_RangeSelector_ButtonTheme_Fill_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_RangeSelector_ButtonTheme_Fill_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_RangeSelector_ButtonTheme_Fill_Stops : <code>int seq seq</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_RangeSelector_ButtonTheme_Fill_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_RangeSelector_ButtonTheme_Fill_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_RangeSelector_ButtonTheme_Fill : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_Fill(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_Fill_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
        member this.linearGradient = Figure_RangeSelector_ButtonTheme_Fill_LinearGradient(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Fill_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_RangeSelector_ButtonTheme_Fill_Stops(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fill" (parent.GetPath()))
                |> Option.defaultValue "fill"

        static member ToJson (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            let linearGradient = Figure_RangeSelector_ButtonTheme_Fill_LinearGradient.ToJson o.linearGradient
            let stops = Figure_RangeSelector_ButtonTheme_Fill_Stops.ToJson o.stops
            sprintf "{\\\"linearGradient\\\":%s,\\\"stops\\\":%s}" linearGradient stops

        member this.Set (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Fill.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_Stroke : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Stroke(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stroke" (parent.GetPath()))
                |> Option.defaultValue "stroke"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Stroke.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Background : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Background.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_BackgroundColor : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Border : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Border.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_BorderRadius : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_BorderRadius.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Color : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Color.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Cursor : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Cursor.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_FontFamily : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_FontFamily.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_FontWeight : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_FontWeight.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_FontSize : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_FontSize.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Height : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Height.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_LineWidth : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_LineWidth.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Padding : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Padding.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Position : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Position.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_TextAlign : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_TextAlign.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_TextDecoration : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_TextDecoration.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_TextOutline : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_TextOutline.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_TextOverflow : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_TextOverflow.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Top : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Top.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Transition : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Transition.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_WhiteSpace : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style_Width : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style_Width.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Background : <code>string</code></summary>
        member this.background = Figure_RangeSelector_ButtonTheme_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_RangeSelector_ButtonTheme_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Border : <code>string</code></summary>
        member this.border = Figure_RangeSelector_ButtonTheme_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_RangeSelector_ButtonTheme_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Color : <code>string</code></summary>
        member this.color = Figure_RangeSelector_ButtonTheme_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_RangeSelector_ButtonTheme_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_RangeSelector_ButtonTheme_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_RangeSelector_ButtonTheme_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_RangeSelector_ButtonTheme_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Height : <code>int</code></summary>
        member this.height = Figure_RangeSelector_ButtonTheme_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_RangeSelector_ButtonTheme_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_RangeSelector_ButtonTheme_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Position : <code>string</code></summary>
        member this.position = Figure_RangeSelector_ButtonTheme_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_RangeSelector_ButtonTheme_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_RangeSelector_ButtonTheme_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_RangeSelector_ButtonTheme_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_RangeSelector_ButtonTheme_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Top : <code>string</code></summary>
        member this.top = Figure_RangeSelector_ButtonTheme_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_RangeSelector_ButtonTheme_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_RangeSelector_ButtonTheme_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style_Width : <code>int</code></summary>
        member this.width = Figure_RangeSelector_ButtonTheme_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_Style.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X1 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x1" (parent.GetPath()))
                |> Option.defaultValue "x1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X1.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y1 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y1" (parent.GetPath()))
                |> Option.defaultValue "y1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y1.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X2 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x2" (parent.GetPath()))
                |> Option.defaultValue "x2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X2.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y2 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y2" (parent.GetPath()))
                |> Option.defaultValue "y2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y2.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X1 : <code>int</code></summary>
        member this.x1 = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X1(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y1 : <code>int</code></summary>
        member this.y1 = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y1(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X2 : <code>int</code></summary>
        member this.x2 = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_X2(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y2 : <code>int</code></summary>
        member this.y2 = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient_Y2(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linearGradient" (parent.GetPath()))
                |> Option.defaultValue "linearGradient"

        static member ToJson (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            let x1 = sprintf "%i" o.x1
            let y1 = sprintf "%i" o.y1
            let x2 = sprintf "%i" o.x2
            let y2 = sprintf "%i" o.y2
            sprintf "{\\\"x1\\\":%s,\\\"y1\\\":%s,\\\"x2\\\":%s,\\\"y2\\\":%s}" x1 y1 x2 y2

        member this.Set (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item_Item : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item_Item.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item : <code>int seq</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops : <code>int seq seq</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Fill(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
        member this.linearGradient = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fill" (parent.GetPath()))
                |> Option.defaultValue "fill"

        static member ToJson (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            let linearGradient = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_LinearGradient.ToJson o.linearGradient
            let stops = Figure_RangeSelector_ButtonTheme_States_Hover_Fill_Stops.ToJson o.stops
            sprintf "{\\\"linearGradient\\\":%s,\\\"stops\\\":%s}" linearGradient stops

        member this.Set (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Fill.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Stroke : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Stroke(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stroke" (parent.GetPath()))
                |> Option.defaultValue "stroke"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Stroke.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Background : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Background.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_BackgroundColor : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Border : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Border.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_BorderRadius : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_BorderRadius.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Color : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Color.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Cursor : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Cursor.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontFamily : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontFamily.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontWeight : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontWeight.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontSize : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontSize.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Height : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Height.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_LineWidth : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_LineWidth.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Padding : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Padding.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Position : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Position.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextAlign : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextAlign.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextDecoration : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextDecoration.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOutline : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOutline.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOverflow : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOverflow.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Top : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Top.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Transition : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Transition.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_WhiteSpace : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Width : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style_Width.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Background : <code>string</code></summary>
        member this.background = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_RangeSelector_ButtonTheme_States_Hover_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Border : <code>string</code></summary>
        member this.border = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_RangeSelector_ButtonTheme_States_Hover_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Color : <code>string</code></summary>
        member this.color = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_RangeSelector_ButtonTheme_States_Hover_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Height : <code>int</code></summary>
        member this.height = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_RangeSelector_ButtonTheme_States_Hover_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Position : <code>string</code></summary>
        member this.position = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_RangeSelector_ButtonTheme_States_Hover_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Top : <code>string</code></summary>
        member this.top = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_RangeSelector_ButtonTheme_States_Hover_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style_Width : <code>int</code></summary>
        member this.width = Figure_RangeSelector_ButtonTheme_States_Hover_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover_Style.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover : <code>{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Hover(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Fill : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
        member this.fill = Figure_RangeSelector_ButtonTheme_States_Hover_Fill(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Stroke : <code>string</code></summary>
        member this.stroke = Figure_RangeSelector_ButtonTheme_States_Hover_Stroke(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_RangeSelector_ButtonTheme_States_Hover_Style(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.hover" (parent.GetPath()))
                |> Option.defaultValue "hover"

        static member ToJson (o:{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            let fill = Figure_RangeSelector_ButtonTheme_States_Hover_Fill.ToJson o.fill
            let stroke = sprintf "\\\"%s\\\"" o.stroke
            let style = Figure_RangeSelector_ButtonTheme_States_Hover_Style.ToJson o.style
            sprintf "{\\\"fill\\\":%s,\\\"stroke\\\":%s,\\\"style\\\":%s}" fill stroke style

        member this.Set (o:{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Hover.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X1 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x1" (parent.GetPath()))
                |> Option.defaultValue "x1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X1.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y1 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y1" (parent.GetPath()))
                |> Option.defaultValue "y1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y1.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X2 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x2" (parent.GetPath()))
                |> Option.defaultValue "x2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X2.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y2 : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y2" (parent.GetPath()))
                |> Option.defaultValue "y2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y2.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X1 : <code>int</code></summary>
        member this.x1 = Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X1(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y1 : <code>int</code></summary>
        member this.y1 = Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y1(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X2 : <code>int</code></summary>
        member this.x2 = Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_X2(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y2 : <code>int</code></summary>
        member this.y2 = Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient_Y2(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linearGradient" (parent.GetPath()))
                |> Option.defaultValue "linearGradient"

        static member ToJson (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            let x1 = sprintf "%i" o.x1
            let y1 = sprintf "%i" o.y1
            let x2 = sprintf "%i" o.x2
            let y2 = sprintf "%i" o.y2
            sprintf "{\\\"x1\\\":%s,\\\"y1\\\":%s,\\\"x2\\\":%s,\\\"y2\\\":%s}" x1 y1 x2 y2

        member this.Set (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item_Item : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item_Item.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item : <code>int seq</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops : <code>int seq seq</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Fill(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
        member this.linearGradient = Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fill" (parent.GetPath()))
                |> Option.defaultValue "fill"

        static member ToJson (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            let linearGradient = Figure_RangeSelector_ButtonTheme_States_Select_Fill_LinearGradient.ToJson o.linearGradient
            let stops = Figure_RangeSelector_ButtonTheme_States_Select_Fill_Stops.ToJson o.stops
            sprintf "{\\\"linearGradient\\\":%s,\\\"stops\\\":%s}" linearGradient stops

        member this.Set (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Fill.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Stroke : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Stroke(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stroke" (parent.GetPath()))
                |> Option.defaultValue "stroke"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Stroke.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Background : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Background(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.background" (parent.GetPath()))
                |> Option.defaultValue "background"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Background.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_BackgroundColor : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_BackgroundColor.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Border : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Border(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.border" (parent.GetPath()))
                |> Option.defaultValue "border"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Border.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_BorderRadius : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_BorderRadius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderRadius" (parent.GetPath()))
                |> Option.defaultValue "borderRadius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_BorderRadius.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Color : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Color.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Cursor : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Cursor.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_FontFamily : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_FontFamily(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontFamily" (parent.GetPath()))
                |> Option.defaultValue "fontFamily"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_FontFamily.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_FontWeight : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_FontWeight(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontWeight" (parent.GetPath()))
                |> Option.defaultValue "fontWeight"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_FontWeight.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_FontSize : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_FontSize(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fontSize" (parent.GetPath()))
                |> Option.defaultValue "fontSize"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_FontSize.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Height : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Height.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_LineWidth : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_LineWidth.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Padding : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Padding(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.padding" (parent.GetPath()))
                |> Option.defaultValue "padding"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Padding.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Position : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Position(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.position" (parent.GetPath()))
                |> Option.defaultValue "position"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Position.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_TextAlign : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_TextAlign(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textAlign" (parent.GetPath()))
                |> Option.defaultValue "textAlign"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_TextAlign.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_TextDecoration : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_TextDecoration(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textDecoration" (parent.GetPath()))
                |> Option.defaultValue "textDecoration"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_TextDecoration.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOutline : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOutline(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOutline" (parent.GetPath()))
                |> Option.defaultValue "textOutline"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOutline.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOverflow : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOverflow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.textOverflow" (parent.GetPath()))
                |> Option.defaultValue "textOverflow"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOverflow.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Top : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Top(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.top" (parent.GetPath()))
                |> Option.defaultValue "top"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Top.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Transition : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Transition(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.transition" (parent.GetPath()))
                |> Option.defaultValue "transition"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Transition.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_WhiteSpace : <code>string</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_WhiteSpace(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.whiteSpace" (parent.GetPath()))
                |> Option.defaultValue "whiteSpace"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_WhiteSpace.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Width : <code>int</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style_Width.ToJson o)

    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select_Style(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Background : <code>string</code></summary>
        member this.background = Figure_RangeSelector_ButtonTheme_States_Select_Style_Background(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_RangeSelector_ButtonTheme_States_Select_Style_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Border : <code>string</code></summary>
        member this.border = Figure_RangeSelector_ButtonTheme_States_Select_Style_Border(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_BorderRadius : <code>int</code></summary>
        member this.borderRadius = Figure_RangeSelector_ButtonTheme_States_Select_Style_BorderRadius(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Color : <code>string</code></summary>
        member this.color = Figure_RangeSelector_ButtonTheme_States_Select_Style_Color(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Cursor : <code>string</code></summary>
        member this.cursor = Figure_RangeSelector_ButtonTheme_States_Select_Style_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_FontFamily : <code>string</code></summary>
        member this.fontFamily = Figure_RangeSelector_ButtonTheme_States_Select_Style_FontFamily(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_FontWeight : <code>string</code></summary>
        member this.fontWeight = Figure_RangeSelector_ButtonTheme_States_Select_Style_FontWeight(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_FontSize : <code>string</code></summary>
        member this.fontSize = Figure_RangeSelector_ButtonTheme_States_Select_Style_FontSize(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Height : <code>int</code></summary>
        member this.height = Figure_RangeSelector_ButtonTheme_States_Select_Style_Height(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_RangeSelector_ButtonTheme_States_Select_Style_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Padding : <code>string</code></summary>
        member this.padding = Figure_RangeSelector_ButtonTheme_States_Select_Style_Padding(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Position : <code>string</code></summary>
        member this.position = Figure_RangeSelector_ButtonTheme_States_Select_Style_Position(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_TextAlign : <code>string</code></summary>
        member this.textAlign = Figure_RangeSelector_ButtonTheme_States_Select_Style_TextAlign(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_TextDecoration : <code>string</code></summary>
        member this.textDecoration = Figure_RangeSelector_ButtonTheme_States_Select_Style_TextDecoration(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOutline : <code>string</code></summary>
        member this.textOutline = Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOutline(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOverflow : <code>string</code></summary>
        member this.textOverflow = Figure_RangeSelector_ButtonTheme_States_Select_Style_TextOverflow(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Top : <code>string</code></summary>
        member this.top = Figure_RangeSelector_ButtonTheme_States_Select_Style_Top(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Transition : <code>string</code></summary>
        member this.transition = Figure_RangeSelector_ButtonTheme_States_Select_Style_Transition(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_WhiteSpace : <code>string</code></summary>
        member this.whiteSpace = Figure_RangeSelector_ButtonTheme_States_Select_Style_WhiteSpace(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style_Width : <code>int</code></summary>
        member this.width = Figure_RangeSelector_ButtonTheme_States_Select_Style_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.style" (parent.GetPath()))
                |> Option.defaultValue "style"

        static member ToJson (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            let background = sprintf "\\\"%s\\\"" o.background
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let border = sprintf "\\\"%s\\\"" o.border
            let borderRadius = sprintf "%i" o.borderRadius
            let color = sprintf "\\\"%s\\\"" o.color
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let fontFamily = sprintf "\\\"%s\\\"" o.fontFamily
            let fontWeight = sprintf "\\\"%s\\\"" o.fontWeight
            let fontSize = sprintf "\\\"%s\\\"" o.fontSize
            let height = sprintf "%i" o.height
            let lineWidth = sprintf "%i" o.lineWidth
            let padding = sprintf "\\\"%s\\\"" o.padding
            let position = sprintf "\\\"%s\\\"" o.position
            let textAlign = sprintf "\\\"%s\\\"" o.textAlign
            let textDecoration = sprintf "\\\"%s\\\"" o.textDecoration
            let textOutline = sprintf "\\\"%s\\\"" o.textOutline
            let textOverflow = sprintf "\\\"%s\\\"" o.textOverflow
            let top = sprintf "\\\"%s\\\"" o.top
            let transition = sprintf "\\\"%s\\\"" o.transition
            let whiteSpace = sprintf "\\\"%s\\\"" o.whiteSpace
            let width = sprintf "%i" o.width
            sprintf "{\\\"background\\\":%s,\\\"backgroundColor\\\":%s,\\\"border\\\":%s,\\\"borderRadius\\\":%s,\\\"color\\\":%s,\\\"cursor\\\":%s,\\\"fontFamily\\\":%s,\\\"fontWeight\\\":%s,\\\"fontSize\\\":%s,\\\"height\\\":%s,\\\"lineWidth\\\":%s,\\\"padding\\\":%s,\\\"position\\\":%s,\\\"textAlign\\\":%s,\\\"textDecoration\\\":%s,\\\"textOutline\\\":%s,\\\"textOverflow\\\":%s,\\\"top\\\":%s,\\\"transition\\\":%s,\\\"whiteSpace\\\":%s,\\\"width\\\":%s}" background backgroundColor border borderRadius color cursor fontFamily fontWeight fontSize height lineWidth padding position textAlign textDecoration textOutline textOverflow top transition whiteSpace width

        member this.Set (o:{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select_Style.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States_Select : <code>{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States_Select(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Fill : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
        member this.fill = Figure_RangeSelector_ButtonTheme_States_Select_Fill(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Stroke : <code>string</code></summary>
        member this.stroke = Figure_RangeSelector_ButtonTheme_States_Select_Stroke(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_RangeSelector_ButtonTheme_States_Select_Style(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.select" (parent.GetPath()))
                |> Option.defaultValue "select"

        static member ToJson (o:{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            let fill = Figure_RangeSelector_ButtonTheme_States_Select_Fill.ToJson o.fill
            let stroke = sprintf "\\\"%s\\\"" o.stroke
            let style = Figure_RangeSelector_ButtonTheme_States_Select_Style.ToJson o.style
            sprintf "{\\\"fill\\\":%s,\\\"stroke\\\":%s,\\\"style\\\":%s}" fill stroke style

        member this.Set (o:{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States_Select.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme_States : <code>{| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |}</code></summary>
    type Figure_RangeSelector_ButtonTheme_States(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_States_Hover : <code>{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
        member this.hover = Figure_RangeSelector_ButtonTheme_States_Hover(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States_Select : <code>{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
        member this.select = Figure_RangeSelector_ButtonTheme_States_Select(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.states" (parent.GetPath()))
                |> Option.defaultValue "states"

        static member ToJson (o:{| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |}) =
            let hover = Figure_RangeSelector_ButtonTheme_States_Hover.ToJson o.hover
            let select = Figure_RangeSelector_ButtonTheme_States_Select.ToJson o.select
            sprintf "{\\\"hover\\\":%s,\\\"select\\\":%s}" hover select

        member this.Set (o:{| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme_States.ToJson o)


    ///<summary>Figure_RangeSelector_ButtonTheme : <code>{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}</code></summary>
    type Figure_RangeSelector_ButtonTheme(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme_Fill : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
        member this.fill = Figure_RangeSelector_ButtonTheme_Fill(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Stroke : <code>string</code></summary>
        member this.stroke = Figure_RangeSelector_ButtonTheme_Stroke(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_Style : <code>{| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}</code></summary>
        member this.style = Figure_RangeSelector_ButtonTheme_Style(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_ButtonTheme_States : <code>{| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |}</code></summary>
        member this.states = Figure_RangeSelector_ButtonTheme_States(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.buttonTheme" (parent.GetPath()))
                |> Option.defaultValue "buttonTheme"

        static member ToJson (o:{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}) =
            let fill = Figure_RangeSelector_ButtonTheme_Fill.ToJson o.fill
            let stroke = sprintf "\\\"%s\\\"" o.stroke
            let style = Figure_RangeSelector_ButtonTheme_Style.ToJson o.style
            let states = Figure_RangeSelector_ButtonTheme_States.ToJson o.states
            sprintf "{\\\"fill\\\":%s,\\\"stroke\\\":%s,\\\"style\\\":%s,\\\"states\\\":%s}" fill stroke style states

        member this.Set (o:{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_ButtonTheme.ToJson o)


    ///<summary>Figure_RangeSelector_InputStyle_BackgroundColor : <code>string</code></summary>
    type Figure_RangeSelector_InputStyle_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_InputStyle_BackgroundColor.ToJson o)

    ///<summary>Figure_RangeSelector_InputStyle_Color : <code>string</code></summary>
    type Figure_RangeSelector_InputStyle_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_InputStyle_Color.ToJson o)

    ///<summary>Figure_RangeSelector_InputStyle : <code>{| backgroundColor:string; color:string |}</code></summary>
    type Figure_RangeSelector_InputStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_InputStyle_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_RangeSelector_InputStyle_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_InputStyle_Color : <code>string</code></summary>
        member this.color = Figure_RangeSelector_InputStyle_Color(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.inputStyle" (parent.GetPath()))
                |> Option.defaultValue "inputStyle"

        static member ToJson (o:{| backgroundColor:string; color:string |}) =
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let color = sprintf "\\\"%s\\\"" o.color
            sprintf "{\\\"backgroundColor\\\":%s,\\\"color\\\":%s}" backgroundColor color

        member this.Set (o:{| backgroundColor:string; color:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_InputStyle.ToJson o)


    ///<summary>Figure_RangeSelector_LabelStyle_Color : <code>string</code></summary>
    type Figure_RangeSelector_LabelStyle_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_LabelStyle_Color.ToJson o)

    ///<summary>Figure_RangeSelector_LabelStyle : <code>{| color:string |}</code></summary>
    type Figure_RangeSelector_LabelStyle(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_LabelStyle_Color : <code>string</code></summary>
        member this.color = Figure_RangeSelector_LabelStyle_Color(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.labelStyle" (parent.GetPath()))
                |> Option.defaultValue "labelStyle"

        static member ToJson (o:{| color:string |}) =
            let color = sprintf "\\\"%s\\\"" o.color
            sprintf "{\\\"color\\\":%s}" color

        member this.Set (o:{| color:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector_LabelStyle.ToJson o)


    ///<summary>Figure_RangeSelector : <code>{| buttonTheme: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}; inputStyle: {| backgroundColor:string; color:string |}; labelStyle: {| color:string |} |}</code></summary>
    type Figure_RangeSelector(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_RangeSelector_ButtonTheme : <code>{| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}</code></summary>
        member this.buttonTheme = Figure_RangeSelector_ButtonTheme(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_InputStyle : <code>{| backgroundColor:string; color:string |}</code></summary>
        member this.inputStyle = Figure_RangeSelector_InputStyle(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector_LabelStyle : <code>{| color:string |}</code></summary>
        member this.labelStyle = Figure_RangeSelector_LabelStyle(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.rangeSelector" (parent.GetPath()))
                |> Option.defaultValue "rangeSelector"

        static member ToJson (o:{| buttonTheme: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}; inputStyle: {| backgroundColor:string; color:string |}; labelStyle: {| color:string |} |}) =
            let buttonTheme = Figure_RangeSelector_ButtonTheme.ToJson o.buttonTheme
            let inputStyle = Figure_RangeSelector_InputStyle.ToJson o.inputStyle
            let labelStyle = Figure_RangeSelector_LabelStyle.ToJson o.labelStyle
            sprintf "{\\\"buttonTheme\\\":%s,\\\"inputStyle\\\":%s,\\\"labelStyle\\\":%s}" buttonTheme inputStyle labelStyle

        member this.Set (o:{| buttonTheme: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}; inputStyle: {| backgroundColor:string; color:string |}; labelStyle: {| color:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_RangeSelector.ToJson o)


    ///<summary>Figure_Navigator_Handles_BackgroundColor : <code>string</code></summary>
    type Figure_Navigator_Handles_BackgroundColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.backgroundColor" (parent.GetPath()))
                |> Option.defaultValue "backgroundColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator_Handles_BackgroundColor.ToJson o)

    ///<summary>Figure_Navigator_Handles_BorderColor : <code>string</code></summary>
    type Figure_Navigator_Handles_BorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.borderColor" (parent.GetPath()))
                |> Option.defaultValue "borderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator_Handles_BorderColor.ToJson o)

    ///<summary>Figure_Navigator_Handles : <code>{| backgroundColor:string; borderColor:string |}</code></summary>
    type Figure_Navigator_Handles(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigator_Handles_BackgroundColor : <code>string</code></summary>
        member this.backgroundColor = Figure_Navigator_Handles_BackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Navigator_Handles_BorderColor : <code>string</code></summary>
        member this.borderColor = Figure_Navigator_Handles_BorderColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.handles" (parent.GetPath()))
                |> Option.defaultValue "handles"

        static member ToJson (o:{| backgroundColor:string; borderColor:string |}) =
            let backgroundColor = sprintf "\\\"%s\\\"" o.backgroundColor
            let borderColor = sprintf "\\\"%s\\\"" o.borderColor
            sprintf "{\\\"backgroundColor\\\":%s,\\\"borderColor\\\":%s}" backgroundColor borderColor

        member this.Set (o:{| backgroundColor:string; borderColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator_Handles.ToJson o)


    ///<summary>Figure_Navigator_OutlineColor : <code>string</code></summary>
    type Figure_Navigator_OutlineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.outlineColor" (parent.GetPath()))
                |> Option.defaultValue "outlineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator_OutlineColor.ToJson o)

    ///<summary>Figure_Navigator_MaskFill : <code>string</code></summary>
    type Figure_Navigator_MaskFill(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.maskFill" (parent.GetPath()))
                |> Option.defaultValue "maskFill"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator_MaskFill.ToJson o)

    ///<summary>Figure_Navigator_Series_Color : <code>string</code></summary>
    type Figure_Navigator_Series_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator_Series_Color.ToJson o)

    ///<summary>Figure_Navigator_Series_LineColor : <code>string</code></summary>
    type Figure_Navigator_Series_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator_Series_LineColor.ToJson o)

    ///<summary>Figure_Navigator_Series : <code>{| color:string; lineColor:string |}</code></summary>
    type Figure_Navigator_Series(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigator_Series_Color : <code>string</code></summary>
        member this.color = Figure_Navigator_Series_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Navigator_Series_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_Navigator_Series_LineColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.series" (parent.GetPath()))
                |> Option.defaultValue "series"

        static member ToJson (o:{| color:string; lineColor:string |}) =
            let color = sprintf "\\\"%s\\\"" o.color
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            sprintf "{\\\"color\\\":%s,\\\"lineColor\\\":%s}" color lineColor

        member this.Set (o:{| color:string; lineColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator_Series.ToJson o)


    ///<summary>Figure_Navigator : <code>{| handles: {| backgroundColor:string; borderColor:string |}; outlineColor:string; maskFill:string; series: {| color:string; lineColor:string |} |}</code></summary>
    type Figure_Navigator(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Navigator_Handles : <code>{| backgroundColor:string; borderColor:string |}</code></summary>
        member this.handles = Figure_Navigator_Handles(Some (this :> IFigureItem))

        ///<summary>Figure_Navigator_OutlineColor : <code>string</code></summary>
        member this.outlineColor = Figure_Navigator_OutlineColor(Some (this :> IFigureItem))

        ///<summary>Figure_Navigator_MaskFill : <code>string</code></summary>
        member this.maskFill = Figure_Navigator_MaskFill(Some (this :> IFigureItem))

        ///<summary>Figure_Navigator_Series : <code>{| color:string; lineColor:string |}</code></summary>
        member this.series = Figure_Navigator_Series(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.navigator" (parent.GetPath()))
                |> Option.defaultValue "navigator"

        static member ToJson (o:{| handles: {| backgroundColor:string; borderColor:string |}; outlineColor:string; maskFill:string; series: {| color:string; lineColor:string |} |}) =
            let handles = Figure_Navigator_Handles.ToJson o.handles
            let outlineColor = sprintf "\\\"%s\\\"" o.outlineColor
            let maskFill = sprintf "\\\"%s\\\"" o.maskFill
            let series = Figure_Navigator_Series.ToJson o.series
            sprintf "{\\\"handles\\\":%s,\\\"outlineColor\\\":%s,\\\"maskFill\\\":%s,\\\"series\\\":%s}" handles outlineColor maskFill series

        member this.Set (o:{| handles: {| backgroundColor:string; borderColor:string |}; outlineColor:string; maskFill:string; series: {| color:string; lineColor:string |} |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Navigator.ToJson o)


    ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient_X1 : <code>int</code></summary>
    type Figure_Scrollbar_BarBackgroundColor_LinearGradient_X1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x1" (parent.GetPath()))
                |> Option.defaultValue "x1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor_LinearGradient_X1.ToJson o)

    ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y1 : <code>int</code></summary>
    type Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y1" (parent.GetPath()))
                |> Option.defaultValue "y1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y1.ToJson o)

    ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient_X2 : <code>int</code></summary>
    type Figure_Scrollbar_BarBackgroundColor_LinearGradient_X2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x2" (parent.GetPath()))
                |> Option.defaultValue "x2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor_LinearGradient_X2.ToJson o)

    ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y2 : <code>int</code></summary>
    type Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y2" (parent.GetPath()))
                |> Option.defaultValue "y2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y2.ToJson o)

    ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
    type Figure_Scrollbar_BarBackgroundColor_LinearGradient(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient_X1 : <code>int</code></summary>
        member this.x1 = Figure_Scrollbar_BarBackgroundColor_LinearGradient_X1(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y1 : <code>int</code></summary>
        member this.y1 = Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y1(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient_X2 : <code>int</code></summary>
        member this.x2 = Figure_Scrollbar_BarBackgroundColor_LinearGradient_X2(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y2 : <code>int</code></summary>
        member this.y2 = Figure_Scrollbar_BarBackgroundColor_LinearGradient_Y2(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linearGradient" (parent.GetPath()))
                |> Option.defaultValue "linearGradient"

        static member ToJson (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            let x1 = sprintf "%i" o.x1
            let y1 = sprintf "%i" o.y1
            let x2 = sprintf "%i" o.x2
            let y2 = sprintf "%i" o.y2
            sprintf "{\\\"x1\\\":%s,\\\"y1\\\":%s,\\\"x2\\\":%s,\\\"y2\\\":%s}" x1 y1 x2 y2

        member this.Set (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor_LinearGradient.ToJson o)


    ///<summary>Figure_Scrollbar_BarBackgroundColor_Stops_Item_Item : <code>int</code></summary>
    type Figure_Scrollbar_BarBackgroundColor_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor_Stops_Item_Item.ToJson o)

    ///<summary>Figure_Scrollbar_BarBackgroundColor_Stops_Item : <code>int seq</code></summary>
    type Figure_Scrollbar_BarBackgroundColor_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Scrollbar_BarBackgroundColor_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Scrollbar_BarBackgroundColor_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Scrollbar_BarBackgroundColor_Stops : <code>int seq seq</code></summary>
    type Figure_Scrollbar_BarBackgroundColor_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Scrollbar_BarBackgroundColor_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Scrollbar_BarBackgroundColor_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Scrollbar_BarBackgroundColor : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
    type Figure_Scrollbar_BarBackgroundColor(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Scrollbar_BarBackgroundColor_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
        member this.linearGradient = Figure_Scrollbar_BarBackgroundColor_LinearGradient(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_BarBackgroundColor_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_Scrollbar_BarBackgroundColor_Stops(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.barBackgroundColor" (parent.GetPath()))
                |> Option.defaultValue "barBackgroundColor"

        static member ToJson (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            let linearGradient = Figure_Scrollbar_BarBackgroundColor_LinearGradient.ToJson o.linearGradient
            let stops = Figure_Scrollbar_BarBackgroundColor_Stops.ToJson o.stops
            sprintf "{\\\"linearGradient\\\":%s,\\\"stops\\\":%s}" linearGradient stops

        member this.Set (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBackgroundColor.ToJson o)


    ///<summary>Figure_Scrollbar_BarBorderColor : <code>string</code></summary>
    type Figure_Scrollbar_BarBorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.barBorderColor" (parent.GetPath()))
                |> Option.defaultValue "barBorderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_BarBorderColor.ToJson o)

    ///<summary>Figure_Scrollbar_ButtonArrowColor : <code>string</code></summary>
    type Figure_Scrollbar_ButtonArrowColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.buttonArrowColor" (parent.GetPath()))
                |> Option.defaultValue "buttonArrowColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonArrowColor.ToJson o)

    ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X1 : <code>int</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x1" (parent.GetPath()))
                |> Option.defaultValue "x1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X1.ToJson o)

    ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y1 : <code>int</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y1" (parent.GetPath()))
                |> Option.defaultValue "y1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y1.ToJson o)

    ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X2 : <code>int</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x2" (parent.GetPath()))
                |> Option.defaultValue "x2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X2.ToJson o)

    ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y2 : <code>int</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y2" (parent.GetPath()))
                |> Option.defaultValue "y2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y2.ToJson o)

    ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor_LinearGradient(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X1 : <code>int</code></summary>
        member this.x1 = Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X1(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y1 : <code>int</code></summary>
        member this.y1 = Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y1(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X2 : <code>int</code></summary>
        member this.x2 = Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_X2(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y2 : <code>int</code></summary>
        member this.y2 = Figure_Scrollbar_ButtonBackgroundColor_LinearGradient_Y2(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linearGradient" (parent.GetPath()))
                |> Option.defaultValue "linearGradient"

        static member ToJson (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            let x1 = sprintf "%i" o.x1
            let y1 = sprintf "%i" o.y1
            let x2 = sprintf "%i" o.x2
            let y2 = sprintf "%i" o.y2
            sprintf "{\\\"x1\\\":%s,\\\"y1\\\":%s,\\\"x2\\\":%s,\\\"y2\\\":%s}" x1 y1 x2 y2

        member this.Set (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor_LinearGradient.ToJson o)


    ///<summary>Figure_Scrollbar_ButtonBackgroundColor_Stops_Item_Item : <code>int</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor_Stops_Item_Item.ToJson o)

    ///<summary>Figure_Scrollbar_ButtonBackgroundColor_Stops_Item : <code>int seq</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Scrollbar_ButtonBackgroundColor_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Scrollbar_ButtonBackgroundColor_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Scrollbar_ButtonBackgroundColor_Stops : <code>int seq seq</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Scrollbar_ButtonBackgroundColor_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Scrollbar_ButtonBackgroundColor_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Scrollbar_ButtonBackgroundColor : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
    type Figure_Scrollbar_ButtonBackgroundColor(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Scrollbar_ButtonBackgroundColor_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
        member this.linearGradient = Figure_Scrollbar_ButtonBackgroundColor_LinearGradient(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_ButtonBackgroundColor_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_Scrollbar_ButtonBackgroundColor_Stops(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.buttonBackgroundColor" (parent.GetPath()))
                |> Option.defaultValue "buttonBackgroundColor"

        static member ToJson (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            let linearGradient = Figure_Scrollbar_ButtonBackgroundColor_LinearGradient.ToJson o.linearGradient
            let stops = Figure_Scrollbar_ButtonBackgroundColor_Stops.ToJson o.stops
            sprintf "{\\\"linearGradient\\\":%s,\\\"stops\\\":%s}" linearGradient stops

        member this.Set (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBackgroundColor.ToJson o)


    ///<summary>Figure_Scrollbar_ButtonBorderColor : <code>string</code></summary>
    type Figure_Scrollbar_ButtonBorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.buttonBorderColor" (parent.GetPath()))
                |> Option.defaultValue "buttonBorderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_ButtonBorderColor.ToJson o)

    ///<summary>Figure_Scrollbar_RifleColor : <code>string</code></summary>
    type Figure_Scrollbar_RifleColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.rifleColor" (parent.GetPath()))
                |> Option.defaultValue "rifleColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_RifleColor.ToJson o)

    ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X1 : <code>int</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x1" (parent.GetPath()))
                |> Option.defaultValue "x1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X1.ToJson o)

    ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y1 : <code>int</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y1(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y1" (parent.GetPath()))
                |> Option.defaultValue "y1"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y1.ToJson o)

    ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X2 : <code>int</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.x2" (parent.GetPath()))
                |> Option.defaultValue "x2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X2.ToJson o)

    ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y2 : <code>int</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y2(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.y2" (parent.GetPath()))
                |> Option.defaultValue "y2"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y2.ToJson o)

    ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor_LinearGradient(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X1 : <code>int</code></summary>
        member this.x1 = Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X1(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y1 : <code>int</code></summary>
        member this.y1 = Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y1(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X2 : <code>int</code></summary>
        member this.x2 = Figure_Scrollbar_TrackBackgroundColor_LinearGradient_X2(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y2 : <code>int</code></summary>
        member this.y2 = Figure_Scrollbar_TrackBackgroundColor_LinearGradient_Y2(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linearGradient" (parent.GetPath()))
                |> Option.defaultValue "linearGradient"

        static member ToJson (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            let x1 = sprintf "%i" o.x1
            let y1 = sprintf "%i" o.y1
            let x2 = sprintf "%i" o.x2
            let y2 = sprintf "%i" o.y2
            sprintf "{\\\"x1\\\":%s,\\\"y1\\\":%s,\\\"x2\\\":%s,\\\"y2\\\":%s}" x1 y1 x2 y2

        member this.Set (o:{| x1:int; y1:int; x2:int; y2:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor_LinearGradient.ToJson o)


    ///<summary>Figure_Scrollbar_TrackBackgroundColor_Stops_Item_Item : <code>int</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor_Stops_Item_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor_Stops_Item_Item.ToJson o)

    ///<summary>Figure_Scrollbar_TrackBackgroundColor_Stops_Item : <code>int seq</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor_Stops_Item(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Scrollbar_TrackBackgroundColor_Stops_Item_Item(Some (this :> IFigureItem))
        let mutable lastIndex = 0

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Scrollbar_TrackBackgroundColor_Stops_Item_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor_Stops_Item.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Scrollbar_TrackBackgroundColor_Stops : <code>int seq seq</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor_Stops(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Scrollbar_TrackBackgroundColor_Stops_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stops" (parent.GetPath()))
                |> Option.defaultValue "stops"

        static member ToJson (o:int seq seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Scrollbar_TrackBackgroundColor_Stops_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor_Stops.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Scrollbar_TrackBackgroundColor : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
    type Figure_Scrollbar_TrackBackgroundColor(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Scrollbar_TrackBackgroundColor_LinearGradient : <code>{| x1:int; y1:int; x2:int; y2:int |}</code></summary>
        member this.linearGradient = Figure_Scrollbar_TrackBackgroundColor_LinearGradient(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_TrackBackgroundColor_Stops : <code>int seq seq</code></summary>
        member this.stops = Figure_Scrollbar_TrackBackgroundColor_Stops(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.trackBackgroundColor" (parent.GetPath()))
                |> Option.defaultValue "trackBackgroundColor"

        static member ToJson (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            let linearGradient = Figure_Scrollbar_TrackBackgroundColor_LinearGradient.ToJson o.linearGradient
            let stops = Figure_Scrollbar_TrackBackgroundColor_Stops.ToJson o.stops
            sprintf "{\\\"linearGradient\\\":%s,\\\"stops\\\":%s}" linearGradient stops

        member this.Set (o:{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBackgroundColor.ToJson o)


    ///<summary>Figure_Scrollbar_TrackBorderColor : <code>string</code></summary>
    type Figure_Scrollbar_TrackBorderColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.trackBorderColor" (parent.GetPath()))
                |> Option.defaultValue "trackBorderColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar_TrackBorderColor.ToJson o)

    ///<summary>Figure_Scrollbar : <code>{| barBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; barBorderColor:string; buttonArrowColor:string; buttonBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; buttonBorderColor:string; rifleColor:string; trackBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; trackBorderColor:string |}</code></summary>
    type Figure_Scrollbar(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Scrollbar_BarBackgroundColor : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
        member this.barBackgroundColor = Figure_Scrollbar_BarBackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_BarBorderColor : <code>string</code></summary>
        member this.barBorderColor = Figure_Scrollbar_BarBorderColor(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_ButtonArrowColor : <code>string</code></summary>
        member this.buttonArrowColor = Figure_Scrollbar_ButtonArrowColor(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_ButtonBackgroundColor : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
        member this.buttonBackgroundColor = Figure_Scrollbar_ButtonBackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_ButtonBorderColor : <code>string</code></summary>
        member this.buttonBorderColor = Figure_Scrollbar_ButtonBorderColor(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_RifleColor : <code>string</code></summary>
        member this.rifleColor = Figure_Scrollbar_RifleColor(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_TrackBackgroundColor : <code>{| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}</code></summary>
        member this.trackBackgroundColor = Figure_Scrollbar_TrackBackgroundColor(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar_TrackBorderColor : <code>string</code></summary>
        member this.trackBorderColor = Figure_Scrollbar_TrackBorderColor(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.scrollbar" (parent.GetPath()))
                |> Option.defaultValue "scrollbar"

        static member ToJson (o:{| barBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; barBorderColor:string; buttonArrowColor:string; buttonBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; buttonBorderColor:string; rifleColor:string; trackBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; trackBorderColor:string |}) =
            let barBackgroundColor = Figure_Scrollbar_BarBackgroundColor.ToJson o.barBackgroundColor
            let barBorderColor = sprintf "\\\"%s\\\"" o.barBorderColor
            let buttonArrowColor = sprintf "\\\"%s\\\"" o.buttonArrowColor
            let buttonBackgroundColor = Figure_Scrollbar_ButtonBackgroundColor.ToJson o.buttonBackgroundColor
            let buttonBorderColor = sprintf "\\\"%s\\\"" o.buttonBorderColor
            let rifleColor = sprintf "\\\"%s\\\"" o.rifleColor
            let trackBackgroundColor = Figure_Scrollbar_TrackBackgroundColor.ToJson o.trackBackgroundColor
            let trackBorderColor = sprintf "\\\"%s\\\"" o.trackBorderColor
            sprintf "{\\\"barBackgroundColor\\\":%s,\\\"barBorderColor\\\":%s,\\\"buttonArrowColor\\\":%s,\\\"buttonBackgroundColor\\\":%s,\\\"buttonBorderColor\\\":%s,\\\"rifleColor\\\":%s,\\\"trackBackgroundColor\\\":%s,\\\"trackBorderColor\\\":%s}" barBackgroundColor barBorderColor buttonArrowColor buttonBackgroundColor buttonBorderColor rifleColor trackBackgroundColor trackBorderColor

        member this.Set (o:{| barBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; barBorderColor:string; buttonArrowColor:string; buttonBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; buttonBorderColor:string; rifleColor:string; trackBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; trackBorderColor:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Scrollbar.ToJson o)


    ///<summary>Figure_Series_Item_AllowPointSelect : <code>bool</code></summary>
    type Figure_Series_Item_AllowPointSelect(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.allowPointSelect" (parent.GetPath()))
                |> Option.defaultValue "allowPointSelect"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_AllowPointSelect.ToJson o)

    ///<summary>Figure_Series_Item_AnimationLimit : <code>int</code></summary>
    type Figure_Series_Item_AnimationLimit(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.animationLimit" (parent.GetPath()))
                |> Option.defaultValue "animationLimit"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_AnimationLimit.ToJson o)

    ///<summary>Figure_Series_Item_BoostThreshold : <code>int</code></summary>
    type Figure_Series_Item_BoostThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.boostThreshold" (parent.GetPath()))
                |> Option.defaultValue "boostThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_BoostThreshold.ToJson o)

    ///<summary>Figure_Series_Item_ClassName : <code>string</code></summary>
    type Figure_Series_Item_ClassName(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.className" (parent.GetPath()))
                |> Option.defaultValue "className"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ClassName.ToJson o)

    ///<summary>Figure_Series_Item_Clip : <code>bool</code></summary>
    type Figure_Series_Item_Clip(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.clip" (parent.GetPath()))
                |> Option.defaultValue "clip"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Clip.ToJson o)

    ///<summary>Figure_Series_Item_Color : <code>string</code></summary>
    type Figure_Series_Item_Color(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.color" (parent.GetPath()))
                |> Option.defaultValue "color"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Color.ToJson o)

    ///<summary>Figure_Series_Item_ColorAxis : <code>int</code></summary>
    type Figure_Series_Item_ColorAxis(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.colorAxis" (parent.GetPath()))
                |> Option.defaultValue "colorAxis"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ColorAxis.ToJson o)

    ///<summary>Figure_Series_Item_ColorIndex : <code>int</code></summary>
    type Figure_Series_Item_ColorIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.colorIndex" (parent.GetPath()))
                |> Option.defaultValue "colorIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ColorIndex.ToJson o)

    ///<summary>Figure_Series_Item_ColorKey : <code>string</code></summary>
    type Figure_Series_Item_ColorKey(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.colorKey" (parent.GetPath()))
                |> Option.defaultValue "colorKey"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ColorKey.ToJson o)

    ///<summary>Figure_Series_Item_ConnectEnds : <code>bool</code></summary>
    type Figure_Series_Item_ConnectEnds(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.connectEnds" (parent.GetPath()))
                |> Option.defaultValue "connectEnds"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ConnectEnds.ToJson o)

    ///<summary>Figure_Series_Item_ConnectNulls : <code>bool</code></summary>
    type Figure_Series_Item_ConnectNulls(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.connectNulls" (parent.GetPath()))
                |> Option.defaultValue "connectNulls"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ConnectNulls.ToJson o)

    ///<summary>Figure_Series_Item_Crisp : <code>bool</code></summary>
    type Figure_Series_Item_Crisp(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.crisp" (parent.GetPath()))
                |> Option.defaultValue "crisp"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Crisp.ToJson o)

    ///<summary>Figure_Series_Item_CropThreshold : <code>int</code></summary>
    type Figure_Series_Item_CropThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cropThreshold" (parent.GetPath()))
                |> Option.defaultValue "cropThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_CropThreshold.ToJson o)

    ///<summary>Figure_Series_Item_Cursor : <code>string</code></summary>
    type Figure_Series_Item_Cursor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.cursor" (parent.GetPath()))
                |> Option.defaultValue "cursor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Cursor.ToJson o)

    ///<summary>Figure_Series_Item_Data_Item : <code>int</code></summary>
    type Figure_Series_Item_Data_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Data_Item.ToJson o)

    ///<summary>Figure_Series_Item_Data : <code>int seq</code></summary>
    type Figure_Series_Item_Data(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Series_Item_Data_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.data" (parent.GetPath()))
                |> Option.defaultValue "data"

        static member ToJson (o:int seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Series_Item_Data_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:int seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Data.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Series_Item_DashStyle : <code>string</code></summary>
    type Figure_Series_Item_DashStyle(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.dashStyle" (parent.GetPath()))
                |> Option.defaultValue "dashStyle"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_DashStyle.ToJson o)

    ///<summary>Figure_Series_Item_Description : <code>string</code></summary>
    type Figure_Series_Item_Description(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.description" (parent.GetPath()))
                |> Option.defaultValue "description"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Description.ToJson o)

    ///<summary>Figure_Series_Item_EnableMouseTracking : <code>bool</code></summary>
    type Figure_Series_Item_EnableMouseTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enableMouseTracking" (parent.GetPath()))
                |> Option.defaultValue "enableMouseTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_EnableMouseTracking.ToJson o)

    ///<summary>Figure_Series_Item_FindNearestPointBy : <code>string</code></summary>
    type Figure_Series_Item_FindNearestPointBy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.findNearestPointBy" (parent.GetPath()))
                |> Option.defaultValue "findNearestPointBy"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_FindNearestPointBy.ToJson o)

    ///<summary>Figure_Series_Item_GetExtremesFromAll : <code>bool</code></summary>
    type Figure_Series_Item_GetExtremesFromAll(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.getExtremesFromAll" (parent.GetPath()))
                |> Option.defaultValue "getExtremesFromAll"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_GetExtremesFromAll.ToJson o)

    ///<summary>Figure_Series_Item_Id : <code>string</code></summary>
    type Figure_Series_Item_Id(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.id" (parent.GetPath()))
                |> Option.defaultValue "id"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Id.ToJson o)

    ///<summary>Figure_Series_Item_IncludeInDataExport : <code>bool</code></summary>
    type Figure_Series_Item_IncludeInDataExport(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.includeInDataExport" (parent.GetPath()))
                |> Option.defaultValue "includeInDataExport"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_IncludeInDataExport.ToJson o)

    ///<summary>Figure_Series_Item_Index : <code>int</code></summary>
    type Figure_Series_Item_Index(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.index" (parent.GetPath()))
                |> Option.defaultValue "index"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Index.ToJson o)

    ///<summary>Figure_Series_Item_Keys_Item : <code>string</code></summary>
    type Figure_Series_Item_Keys_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Keys_Item.ToJson o)

    ///<summary>Figure_Series_Item_Keys : <code>string seq</code></summary>
    type Figure_Series_Item_Keys(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Series_Item_Keys_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.keys" (parent.GetPath()))
                |> Option.defaultValue "keys"

        static member ToJson (o:string seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Series_Item_Keys_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:string seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Keys.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure_Series_Item_LegendIndex : <code>int</code></summary>
    type Figure_Series_Item_LegendIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.legendIndex" (parent.GetPath()))
                |> Option.defaultValue "legendIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_LegendIndex.ToJson o)

    ///<summary>Figure_Series_Item_Linecap : <code>string</code></summary>
    type Figure_Series_Item_Linecap(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.linecap" (parent.GetPath()))
                |> Option.defaultValue "linecap"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Linecap.ToJson o)

    ///<summary>Figure_Series_Item_LineWidth : <code>int</code></summary>
    type Figure_Series_Item_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_LineWidth.ToJson o)

    ///<summary>Figure_Series_Item_Marker_Enabled : <code>bool</code></summary>
    type Figure_Series_Item_Marker_Enabled(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabled" (parent.GetPath()))
                |> Option.defaultValue "enabled"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_Enabled.ToJson o)

    ///<summary>Figure_Series_Item_Marker_EnabledThreshold : <code>int</code></summary>
    type Figure_Series_Item_Marker_EnabledThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.enabledThreshold" (parent.GetPath()))
                |> Option.defaultValue "enabledThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_EnabledThreshold.ToJson o)

    ///<summary>Figure_Series_Item_Marker_FillColor : <code>string</code></summary>
    type Figure_Series_Item_Marker_FillColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.fillColor" (parent.GetPath()))
                |> Option.defaultValue "fillColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_FillColor.ToJson o)

    ///<summary>Figure_Series_Item_Marker_Height : <code>int</code></summary>
    type Figure_Series_Item_Marker_Height(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.height" (parent.GetPath()))
                |> Option.defaultValue "height"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_Height.ToJson o)

    ///<summary>Figure_Series_Item_Marker_LineColor : <code>string</code></summary>
    type Figure_Series_Item_Marker_LineColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineColor" (parent.GetPath()))
                |> Option.defaultValue "lineColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_LineColor.ToJson o)

    ///<summary>Figure_Series_Item_Marker_LineWidth : <code>int</code></summary>
    type Figure_Series_Item_Marker_LineWidth(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.lineWidth" (parent.GetPath()))
                |> Option.defaultValue "lineWidth"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_LineWidth.ToJson o)

    ///<summary>Figure_Series_Item_Marker_Radius : <code>int</code></summary>
    type Figure_Series_Item_Marker_Radius(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.radius" (parent.GetPath()))
                |> Option.defaultValue "radius"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_Radius.ToJson o)

    ///<summary>Figure_Series_Item_Marker_Symbol : <code>string</code></summary>
    type Figure_Series_Item_Marker_Symbol(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.symbol" (parent.GetPath()))
                |> Option.defaultValue "symbol"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_Symbol.ToJson o)

    ///<summary>Figure_Series_Item_Marker_Width : <code>int</code></summary>
    type Figure_Series_Item_Marker_Width(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.width" (parent.GetPath()))
                |> Option.defaultValue "width"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker_Width.ToJson o)

    ///<summary>Figure_Series_Item_Marker : <code>{| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}</code></summary>
    type Figure_Series_Item_Marker(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Series_Item_Marker_Enabled : <code>bool</code></summary>
        member this.enabled = Figure_Series_Item_Marker_Enabled(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker_EnabledThreshold : <code>int</code></summary>
        member this.enabledThreshold = Figure_Series_Item_Marker_EnabledThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker_FillColor : <code>string</code></summary>
        member this.fillColor = Figure_Series_Item_Marker_FillColor(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker_Height : <code>int</code></summary>
        member this.height = Figure_Series_Item_Marker_Height(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker_LineColor : <code>string</code></summary>
        member this.lineColor = Figure_Series_Item_Marker_LineColor(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Series_Item_Marker_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker_Radius : <code>int</code></summary>
        member this.radius = Figure_Series_Item_Marker_Radius(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker_Symbol : <code>string</code></summary>
        member this.symbol = Figure_Series_Item_Marker_Symbol(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker_Width : <code>int</code></summary>
        member this.width = Figure_Series_Item_Marker_Width(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.marker" (parent.GetPath()))
                |> Option.defaultValue "marker"

        static member ToJson (o:{| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}) =
            let enabled = sprintf "%b" o.enabled
            let enabledThreshold = sprintf "%i" o.enabledThreshold
            let fillColor = sprintf "\\\"%s\\\"" o.fillColor
            let height = sprintf "%i" o.height
            let lineColor = sprintf "\\\"%s\\\"" o.lineColor
            let lineWidth = sprintf "%i" o.lineWidth
            let radius = sprintf "%i" o.radius
            let symbol = sprintf "\\\"%s\\\"" o.symbol
            let width = sprintf "%i" o.width
            sprintf "{\\\"enabled\\\":%s,\\\"enabledThreshold\\\":%s,\\\"fillColor\\\":%s,\\\"height\\\":%s,\\\"lineColor\\\":%s,\\\"lineWidth\\\":%s,\\\"radius\\\":%s,\\\"symbol\\\":%s,\\\"width\\\":%s}" enabled enabledThreshold fillColor height lineColor lineWidth radius symbol width

        member this.Set (o:{| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Marker.ToJson o)


    ///<summary>Figure_Series_Item_Name : <code>string</code></summary>
    type Figure_Series_Item_Name(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.name" (parent.GetPath()))
                |> Option.defaultValue "name"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Name.ToJson o)

    ///<summary>Figure_Series_Item_NegativeColor : <code>string</code></summary>
    type Figure_Series_Item_NegativeColor(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.negativeColor" (parent.GetPath()))
                |> Option.defaultValue "negativeColor"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_NegativeColor.ToJson o)

    ///<summary>Figure_Series_Item_Opactiy : <code>int</code></summary>
    type Figure_Series_Item_Opactiy(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.opactiy" (parent.GetPath()))
                |> Option.defaultValue "opactiy"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Opactiy.ToJson o)

    ///<summary>Figure_Series_Item_PointInterval : <code>int</code></summary>
    type Figure_Series_Item_PointInterval(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointInterval" (parent.GetPath()))
                |> Option.defaultValue "pointInterval"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_PointInterval.ToJson o)

    ///<summary>Figure_Series_Item_PointIntervalUnit : <code>string</code></summary>
    type Figure_Series_Item_PointIntervalUnit(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointIntervalUnit" (parent.GetPath()))
                |> Option.defaultValue "pointIntervalUnit"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_PointIntervalUnit.ToJson o)

    ///<summary>Figure_Series_Item_PointPlacement : <code>int</code></summary>
    type Figure_Series_Item_PointPlacement(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointPlacement" (parent.GetPath()))
                |> Option.defaultValue "pointPlacement"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_PointPlacement.ToJson o)

    ///<summary>Figure_Series_Item_PointStart : <code>int</code></summary>
    type Figure_Series_Item_PointStart(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.pointStart" (parent.GetPath()))
                |> Option.defaultValue "pointStart"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_PointStart.ToJson o)

    ///<summary>Figure_Series_Item_Selected : <code>bool</code></summary>
    type Figure_Series_Item_Selected(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.selected" (parent.GetPath()))
                |> Option.defaultValue "selected"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Selected.ToJson o)

    ///<summary>Figure_Series_Item_Shadow : <code>bool</code></summary>
    type Figure_Series_Item_Shadow(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.shadow" (parent.GetPath()))
                |> Option.defaultValue "shadow"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Shadow.ToJson o)

    ///<summary>Figure_Series_Item_ShowCheckbox : <code>bool</code></summary>
    type Figure_Series_Item_ShowCheckbox(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showCheckbox" (parent.GetPath()))
                |> Option.defaultValue "showCheckbox"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ShowCheckbox.ToJson o)

    ///<summary>Figure_Series_Item_ShowInLegend : <code>bool</code></summary>
    type Figure_Series_Item_ShowInLegend(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.showInLegend" (parent.GetPath()))
                |> Option.defaultValue "showInLegend"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ShowInLegend.ToJson o)

    ///<summary>Figure_Series_Item_SkipKeyboardNavigation : <code>bool</code></summary>
    type Figure_Series_Item_SkipKeyboardNavigation(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.skipKeyboardNavigation" (parent.GetPath()))
                |> Option.defaultValue "skipKeyboardNavigation"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_SkipKeyboardNavigation.ToJson o)

    ///<summary>Figure_Series_Item_SoftThreshold : <code>bool</code></summary>
    type Figure_Series_Item_SoftThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.softThreshold" (parent.GetPath()))
                |> Option.defaultValue "softThreshold"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_SoftThreshold.ToJson o)

    ///<summary>Figure_Series_Item_Stack : <code>string</code></summary>
    type Figure_Series_Item_Stack(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stack" (parent.GetPath()))
                |> Option.defaultValue "stack"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Stack.ToJson o)

    ///<summary>Figure_Series_Item_Stacking : <code>string</code></summary>
    type Figure_Series_Item_Stacking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stacking" (parent.GetPath()))
                |> Option.defaultValue "stacking"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Stacking.ToJson o)

    ///<summary>Figure_Series_Item_Step : <code>string</code></summary>
    type Figure_Series_Item_Step(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.step" (parent.GetPath()))
                |> Option.defaultValue "step"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Step.ToJson o)

    ///<summary>Figure_Series_Item_StickyTracking : <code>bool</code></summary>
    type Figure_Series_Item_StickyTracking(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.stickyTracking" (parent.GetPath()))
                |> Option.defaultValue "stickyTracking"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_StickyTracking.ToJson o)

    ///<summary>Figure_Series_Item_Threshold : <code>int</code></summary>
    type Figure_Series_Item_Threshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.threshold" (parent.GetPath()))
                |> Option.defaultValue "threshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Threshold.ToJson o)

    ///<summary>Figure_Series_Item_TurboThreshold : <code>int</code></summary>
    type Figure_Series_Item_TurboThreshold(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.turboThreshold" (parent.GetPath()))
                |> Option.defaultValue "turboThreshold"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_TurboThreshold.ToJson o)

    ///<summary>Figure_Series_Item_Type : <code>string</code></summary>
    type Figure_Series_Item_Type(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.type" (parent.GetPath()))
                |> Option.defaultValue "type"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Type.ToJson o)

    ///<summary>Figure_Series_Item_Visible : <code>bool</code></summary>
    type Figure_Series_Item_Visible(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.visible" (parent.GetPath()))
                |> Option.defaultValue "visible"

        static member ToJson (o:bool) =
            sprintf "%b" o

        member this.Set (o:bool) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_Visible.ToJson o)

    ///<summary>Figure_Series_Item_XAxis : <code>int</code></summary>
    type Figure_Series_Item_XAxis(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.xAxis" (parent.GetPath()))
                |> Option.defaultValue "xAxis"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_XAxis.ToJson o)

    ///<summary>Figure_Series_Item_YAxis : <code>int</code></summary>
    type Figure_Series_Item_YAxis(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.yAxis" (parent.GetPath()))
                |> Option.defaultValue "yAxis"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_YAxis.ToJson o)

    ///<summary>Figure_Series_Item_ZIndex : <code>int</code></summary>
    type Figure_Series_Item_ZIndex(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zIndex" (parent.GetPath()))
                |> Option.defaultValue "zIndex"

        static member ToJson (o:int) =
            sprintf "%i" o

        member this.Set (o:int) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ZIndex.ToJson o)

    ///<summary>Figure_Series_Item_ZoneAxis : <code>string</code></summary>
    type Figure_Series_Item_ZoneAxis(parent:IFigureItem option) =
        let parentItem = parent

        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.zoneAxis" (parent.GetPath()))
                |> Option.defaultValue "zoneAxis"

        static member ToJson (o:string) =
            sprintf "\\\"%s\\\"" o

        member this.Set (o:string) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item_ZoneAxis.ToJson o)

    ///<summary>Figure_Series_Item : <code>{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |}</code></summary>
    type Figure_Series_Item(parent:IFigureItem option) =
        let parentItem = parent
        let mutable lastIndex = 0


        ///<summary>Figure_Series_Item_AllowPointSelect : <code>bool</code></summary>
        member this.allowPointSelect = Figure_Series_Item_AllowPointSelect(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_AnimationLimit : <code>int</code></summary>
        member this.animationLimit = Figure_Series_Item_AnimationLimit(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_BoostThreshold : <code>int</code></summary>
        member this.boostThreshold = Figure_Series_Item_BoostThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ClassName : <code>string</code></summary>
        member this.className = Figure_Series_Item_ClassName(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Clip : <code>bool</code></summary>
        member this.clip = Figure_Series_Item_Clip(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Color : <code>string</code></summary>
        member this.color = Figure_Series_Item_Color(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ColorAxis : <code>int</code></summary>
        member this.colorAxis = Figure_Series_Item_ColorAxis(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ColorIndex : <code>int</code></summary>
        member this.colorIndex = Figure_Series_Item_ColorIndex(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ColorKey : <code>string</code></summary>
        member this.colorKey = Figure_Series_Item_ColorKey(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ConnectEnds : <code>bool</code></summary>
        member this.connectEnds = Figure_Series_Item_ConnectEnds(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ConnectNulls : <code>bool</code></summary>
        member this.connectNulls = Figure_Series_Item_ConnectNulls(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Crisp : <code>bool</code></summary>
        member this.crisp = Figure_Series_Item_Crisp(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_CropThreshold : <code>int</code></summary>
        member this.cropThreshold = Figure_Series_Item_CropThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Cursor : <code>string</code></summary>
        member this.cursor = Figure_Series_Item_Cursor(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Data : <code>int seq</code></summary>
        member this.data = Figure_Series_Item_Data(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_DashStyle : <code>string</code></summary>
        member this.dashStyle = Figure_Series_Item_DashStyle(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Description : <code>string</code></summary>
        member this.description = Figure_Series_Item_Description(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_EnableMouseTracking : <code>bool</code></summary>
        member this.enableMouseTracking = Figure_Series_Item_EnableMouseTracking(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_FindNearestPointBy : <code>string</code></summary>
        member this.findNearestPointBy = Figure_Series_Item_FindNearestPointBy(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_GetExtremesFromAll : <code>bool</code></summary>
        member this.getExtremesFromAll = Figure_Series_Item_GetExtremesFromAll(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Id : <code>string</code></summary>
        member this.id = Figure_Series_Item_Id(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_IncludeInDataExport : <code>bool</code></summary>
        member this.includeInDataExport = Figure_Series_Item_IncludeInDataExport(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Index : <code>int</code></summary>
        member this.index = Figure_Series_Item_Index(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Keys : <code>string seq</code></summary>
        member this.keys = Figure_Series_Item_Keys(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_LegendIndex : <code>int</code></summary>
        member this.legendIndex = Figure_Series_Item_LegendIndex(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Linecap : <code>string</code></summary>
        member this.linecap = Figure_Series_Item_Linecap(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_LineWidth : <code>int</code></summary>
        member this.lineWidth = Figure_Series_Item_LineWidth(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Marker : <code>{| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}</code></summary>
        member this.marker = Figure_Series_Item_Marker(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Name : <code>string</code></summary>
        member this.name = Figure_Series_Item_Name(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_NegativeColor : <code>string</code></summary>
        member this.negativeColor = Figure_Series_Item_NegativeColor(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Opactiy : <code>int</code></summary>
        member this.opactiy = Figure_Series_Item_Opactiy(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_PointInterval : <code>int</code></summary>
        member this.pointInterval = Figure_Series_Item_PointInterval(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_PointIntervalUnit : <code>string</code></summary>
        member this.pointIntervalUnit = Figure_Series_Item_PointIntervalUnit(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_PointPlacement : <code>int</code></summary>
        member this.pointPlacement = Figure_Series_Item_PointPlacement(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_PointStart : <code>int</code></summary>
        member this.pointStart = Figure_Series_Item_PointStart(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Selected : <code>bool</code></summary>
        member this.selected = Figure_Series_Item_Selected(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Shadow : <code>bool</code></summary>
        member this.shadow = Figure_Series_Item_Shadow(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ShowCheckbox : <code>bool</code></summary>
        member this.showCheckbox = Figure_Series_Item_ShowCheckbox(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ShowInLegend : <code>bool</code></summary>
        member this.showInLegend = Figure_Series_Item_ShowInLegend(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_SkipKeyboardNavigation : <code>bool</code></summary>
        member this.skipKeyboardNavigation = Figure_Series_Item_SkipKeyboardNavigation(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_SoftThreshold : <code>bool</code></summary>
        member this.softThreshold = Figure_Series_Item_SoftThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Stack : <code>string</code></summary>
        member this.stack = Figure_Series_Item_Stack(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Stacking : <code>string</code></summary>
        member this.stacking = Figure_Series_Item_Stacking(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Step : <code>string</code></summary>
        member this.step = Figure_Series_Item_Step(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_StickyTracking : <code>bool</code></summary>
        member this.stickyTracking = Figure_Series_Item_StickyTracking(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Threshold : <code>int</code></summary>
        member this.threshold = Figure_Series_Item_Threshold(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_TurboThreshold : <code>int</code></summary>
        member this.turboThreshold = Figure_Series_Item_TurboThreshold(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Type : <code>string</code></summary>
        member this._type = Figure_Series_Item_Type(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_Visible : <code>bool</code></summary>
        member this.visible = Figure_Series_Item_Visible(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_XAxis : <code>int</code></summary>
        member this.xAxis = Figure_Series_Item_XAxis(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_YAxis : <code>int</code></summary>
        member this.yAxis = Figure_Series_Item_YAxis(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ZIndex : <code>int</code></summary>
        member this.zIndex = Figure_Series_Item_ZIndex(Some (this :> IFigureItem))

        ///<summary>Figure_Series_Item_ZoneAxis : <code>string</code></summary>
        member this.zoneAxis = Figure_Series_Item_ZoneAxis(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s[%i]" (parent.GetPath()) lastIndex)
                |> Option.defaultValue (sprintf "[%i]" lastIndex)

        interface IFigureArrayElement with
            member this.SetLastIndex index =
                lastIndex <- index

        static member ToJson (o:{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |}) =
            let allowPointSelect = sprintf "%b" o.allowPointSelect
            let animationLimit = sprintf "%i" o.animationLimit
            let boostThreshold = sprintf "%i" o.boostThreshold
            let className = sprintf "\\\"%s\\\"" o.className
            let clip = sprintf "%b" o.clip
            let color = sprintf "\\\"%s\\\"" o.color
            let colorAxis = sprintf "%i" o.colorAxis
            let colorIndex = sprintf "%i" o.colorIndex
            let colorKey = sprintf "\\\"%s\\\"" o.colorKey
            let connectEnds = sprintf "%b" o.connectEnds
            let connectNulls = sprintf "%b" o.connectNulls
            let crisp = sprintf "%b" o.crisp
            let cropThreshold = sprintf "%i" o.cropThreshold
            let cursor = sprintf "\\\"%s\\\"" o.cursor
            let data = Figure_Series_Item_Data.ToJson o.data
            let dashStyle = sprintf "\\\"%s\\\"" o.dashStyle
            let description = sprintf "\\\"%s\\\"" o.description
            let enableMouseTracking = sprintf "%b" o.enableMouseTracking
            let findNearestPointBy = sprintf "\\\"%s\\\"" o.findNearestPointBy
            let getExtremesFromAll = sprintf "%b" o.getExtremesFromAll
            let id = sprintf "\\\"%s\\\"" o.id
            let includeInDataExport = sprintf "%b" o.includeInDataExport
            let index = sprintf "%i" o.index
            let keys = Figure_Series_Item_Keys.ToJson o.keys
            let legendIndex = sprintf "%i" o.legendIndex
            let linecap = sprintf "\\\"%s\\\"" o.linecap
            let lineWidth = sprintf "%i" o.lineWidth
            let marker = Figure_Series_Item_Marker.ToJson o.marker
            let name = sprintf "\\\"%s\\\"" o.name
            let negativeColor = sprintf "\\\"%s\\\"" o.negativeColor
            let opactiy = sprintf "%i" o.opactiy
            let pointInterval = sprintf "%i" o.pointInterval
            let pointIntervalUnit = sprintf "\\\"%s\\\"" o.pointIntervalUnit
            let pointPlacement = sprintf "%i" o.pointPlacement
            let pointStart = sprintf "%i" o.pointStart
            let selected = sprintf "%b" o.selected
            let shadow = sprintf "%b" o.shadow
            let showCheckbox = sprintf "%b" o.showCheckbox
            let showInLegend = sprintf "%b" o.showInLegend
            let skipKeyboardNavigation = sprintf "%b" o.skipKeyboardNavigation
            let softThreshold = sprintf "%b" o.softThreshold
            let stack = sprintf "\\\"%s\\\"" o.stack
            let stacking = sprintf "\\\"%s\\\"" o.stacking
            let step = sprintf "\\\"%s\\\"" o.step
            let stickyTracking = sprintf "%b" o.stickyTracking
            let threshold = sprintf "%i" o.threshold
            let turboThreshold = sprintf "%i" o.turboThreshold
            let _type = sprintf "\\\"%s\\\"" o._type
            let visible = sprintf "%b" o.visible
            let xAxis = sprintf "%i" o.xAxis
            let yAxis = sprintf "%i" o.yAxis
            let zIndex = sprintf "%i" o.zIndex
            let zoneAxis = sprintf "\\\"%s\\\"" o.zoneAxis
            sprintf "{\\\"allowPointSelect\\\":%s,\\\"animationLimit\\\":%s,\\\"boostThreshold\\\":%s,\\\"className\\\":%s,\\\"clip\\\":%s,\\\"color\\\":%s,\\\"colorAxis\\\":%s,\\\"colorIndex\\\":%s,\\\"colorKey\\\":%s,\\\"connectEnds\\\":%s,\\\"connectNulls\\\":%s,\\\"crisp\\\":%s,\\\"cropThreshold\\\":%s,\\\"cursor\\\":%s,\\\"data\\\":%s,\\\"dashStyle\\\":%s,\\\"description\\\":%s,\\\"enableMouseTracking\\\":%s,\\\"findNearestPointBy\\\":%s,\\\"getExtremesFromAll\\\":%s,\\\"id\\\":%s,\\\"includeInDataExport\\\":%s,\\\"index\\\":%s,\\\"keys\\\":%s,\\\"legendIndex\\\":%s,\\\"linecap\\\":%s,\\\"lineWidth\\\":%s,\\\"marker\\\":%s,\\\"name\\\":%s,\\\"negativeColor\\\":%s,\\\"opactiy\\\":%s,\\\"pointInterval\\\":%s,\\\"pointIntervalUnit\\\":%s,\\\"pointPlacement\\\":%s,\\\"pointStart\\\":%s,\\\"selected\\\":%s,\\\"shadow\\\":%s,\\\"showCheckbox\\\":%s,\\\"showInLegend\\\":%s,\\\"skipKeyboardNavigation\\\":%s,\\\"softThreshold\\\":%s,\\\"stack\\\":%s,\\\"stacking\\\":%s,\\\"step\\\":%s,\\\"stickyTracking\\\":%s,\\\"threshold\\\":%s,\\\"turboThreshold\\\":%s,\\\"_type\\\":%s,\\\"visible\\\":%s,\\\"xAxis\\\":%s,\\\"yAxis\\\":%s,\\\"zIndex\\\":%s,\\\"zoneAxis\\\":%s}" allowPointSelect animationLimit boostThreshold className clip color colorAxis colorIndex colorKey connectEnds connectNulls crisp cropThreshold cursor data dashStyle description enableMouseTracking findNearestPointBy getExtremesFromAll id includeInDataExport index keys legendIndex linecap lineWidth marker name negativeColor opactiy pointInterval pointIntervalUnit pointPlacement pointStart selected shadow showCheckbox showInLegend skipKeyboardNavigation softThreshold stack stacking step stickyTracking threshold turboThreshold _type visible xAxis yAxis zIndex zoneAxis

        member this.Set (o:{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series_Item.ToJson o)


    ///<summary>Figure_Series : <code>{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |} seq</code></summary>
    type Figure_Series(parent:IFigureItem option) as this =
        let parentItem = parent
        let item = Figure_Series_Item(Some (this :> IFigureItem))


        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.series" (parent.GetPath()))
                |> Option.defaultValue "series"

        static member ToJson (o:{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |} seq) =
            if Seq.isEmpty o then "[]"
            else
                o
                |> Seq.fold (fun s oi -> sprintf "%s,[%s]" s ( Figure_Series_Item.ToJson oi)) ""
                |> fun s -> s.Substring(1)

        member this.Set (o:{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |} seq) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure_Series.ToJson o)

        member this.Item
            with get(i) =
                (item :> IFigureArrayElement).SetLastIndex(i)
                item

    ///<summary>Figure : <code>{| colors:string seq; symbols:string seq; lang: {| loading:string; months:string seq; shortMonths:string seq; weekdays:string seq; decimalPoint:string; numericSymbols:string seq; resetZoom:string; resetZoomTitle:string; thousandsSep:string; viewFullscreen:string; exitFullscreen:string; printChart:string; downloadPNG:string; downloadJPEG:string; downloadPDF:string; downloadSVG:string; contextButtonTitle:string |}; _global: {| dummy:string |}; time: {| timezoneOffset:int; useUTC:bool |}; chart: {| styledMode:bool; borderRadius:int; colorCount:int; defaultSeriesType:string; ignoreHiddenSeries:bool; spacing:int seq; resetZoomButton: {| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}; width:string; height:string; borderColor:string; backgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}; plotBorderColor:string; borderWidth:int; className:string; plotBackgroundColor:string; plotBorderWidth:int |}; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; margin:int; widthAdjust:int |}; subtitle: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; widthAdjust:int |}; caption: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; margin:int; text:string; align:string; verticalAlign:string |}; plotOptions: {| line: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; area: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; spline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; areaspline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; column: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; bar: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; scatter: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}; pie: {| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}; candlestick: {| lineColor:string |} |}; labels: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; legend: {| enabled:bool; align:string; alignColumns:bool; layout:string; borderColor:string; borderRadius:int; navigation: {| activeColor:string; inactiveColor:string |}; itemStyle: {| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}; itemHoverStyle: {| color:string |}; itemHiddenStyle: {| color:string |}; shadow:bool; itemCheckboxStyle: {| position:string; width:string; height:string |}; squareSymbol:bool; symbolPadding:int; verticalAlign:string; x:int; y:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; backgroundColor:string |}; loading: {| labelStyle: {| fontWeight:string; position:string; top:string |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; tooltip: {| enabled:bool; animation:bool; borderRadius:int; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; footerFormat:string; padding:int; snap:int; headerFormat:string; pointFormat:string; backgroundColor:string; borderWidth:int; shadow:bool; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; credits: {| enabled:bool; href:string; position: {| align:string; x:int; verticalAlign:string; y:int |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; navigation: {| buttonOptions: {| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}; menuStyle: {| border:string; background:string; padding:string |}; menuItemStyle: {| padding:string; color:string; background:string; fontSize:string; transition:string |}; menuItemHoverStyle: {| background:string; color:string |} |}; exporting: {| _type:string; url:string; printMaxWidth:int; scale:int; buttons: {| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}; menuItemDefinitions: {| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |} |}; xAxis:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq; yAxis:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq; toolbar: {| itemStyle: {| color:string |} |}; rangeSelector: {| buttonTheme: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}; inputStyle: {| backgroundColor:string; color:string |}; labelStyle: {| color:string |} |}; navigator: {| handles: {| backgroundColor:string; borderColor:string |}; outlineColor:string; maskFill:string; series: {| color:string; lineColor:string |} |}; scrollbar: {| barBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; barBorderColor:string; buttonArrowColor:string; buttonBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; buttonBorderColor:string; rifleColor:string; trackBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; trackBorderColor:string |}; series:{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |} seq |}</code></summary>
    type Figure(parent:IFigureItem option) =
        let parentItem = parent



        ///<summary>Figure_Colors : <code>string seq</code></summary>
        member this.colors = Figure_Colors(Some (this :> IFigureItem))

        ///<summary>Figure_Symbols : <code>string seq</code></summary>
        member this.symbols = Figure_Symbols(Some (this :> IFigureItem))

        ///<summary>Figure_Lang : <code>{| loading:string; months:string seq; shortMonths:string seq; weekdays:string seq; decimalPoint:string; numericSymbols:string seq; resetZoom:string; resetZoomTitle:string; thousandsSep:string; viewFullscreen:string; exitFullscreen:string; printChart:string; downloadPNG:string; downloadJPEG:string; downloadPDF:string; downloadSVG:string; contextButtonTitle:string |}</code></summary>
        member this.lang = Figure_Lang(Some (this :> IFigureItem))

        ///<summary>Figure_Global : <code>{| dummy:string |}</code></summary>
        member this._global = Figure_Global(Some (this :> IFigureItem))

        ///<summary>Figure_Time : <code>{| timezoneOffset:int; useUTC:bool |}</code></summary>
        member this.time = Figure_Time(Some (this :> IFigureItem))

        ///<summary>Figure_Chart : <code>{| styledMode:bool; borderRadius:int; colorCount:int; defaultSeriesType:string; ignoreHiddenSeries:bool; spacing:int seq; resetZoomButton: {| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}; width:string; height:string; borderColor:string; backgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}; plotBorderColor:string; borderWidth:int; className:string; plotBackgroundColor:string; plotBorderWidth:int |}</code></summary>
        member this.chart = Figure_Chart(Some (this :> IFigureItem))

        ///<summary>Figure_Title : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; margin:int; widthAdjust:int |}</code></summary>
        member this.title = Figure_Title(Some (this :> IFigureItem))

        ///<summary>Figure_Subtitle : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; widthAdjust:int |}</code></summary>
        member this.subtitle = Figure_Subtitle(Some (this :> IFigureItem))

        ///<summary>Figure_Caption : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; margin:int; text:string; align:string; verticalAlign:string |}</code></summary>
        member this.caption = Figure_Caption(Some (this :> IFigureItem))

        ///<summary>Figure_PlotOptions : <code>{| line: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; area: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; spline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; areaspline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; column: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; bar: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; scatter: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}; pie: {| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}; candlestick: {| lineColor:string |} |}</code></summary>
        member this.plotOptions = Figure_PlotOptions(Some (this :> IFigureItem))

        ///<summary>Figure_Labels : <code>{| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
        member this.labels = Figure_Labels(Some (this :> IFigureItem))

        ///<summary>Figure_Legend : <code>{| enabled:bool; align:string; alignColumns:bool; layout:string; borderColor:string; borderRadius:int; navigation: {| activeColor:string; inactiveColor:string |}; itemStyle: {| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}; itemHoverStyle: {| color:string |}; itemHiddenStyle: {| color:string |}; shadow:bool; itemCheckboxStyle: {| position:string; width:string; height:string |}; squareSymbol:bool; symbolPadding:int; verticalAlign:string; x:int; y:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; backgroundColor:string |}</code></summary>
        member this.legend = Figure_Legend(Some (this :> IFigureItem))

        ///<summary>Figure_Loading : <code>{| labelStyle: {| fontWeight:string; position:string; top:string |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
        member this.loading = Figure_Loading(Some (this :> IFigureItem))

        ///<summary>Figure_Tooltip : <code>{| enabled:bool; animation:bool; borderRadius:int; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; footerFormat:string; padding:int; snap:int; headerFormat:string; pointFormat:string; backgroundColor:string; borderWidth:int; shadow:bool; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}</code></summary>
        member this.tooltip = Figure_Tooltip(Some (this :> IFigureItem))

        ///<summary>Figure_Credits : <code>{| enabled:bool; href:string; position: {| align:string; x:int; verticalAlign:string; y:int |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}</code></summary>
        member this.credits = Figure_Credits(Some (this :> IFigureItem))

        ///<summary>Figure_Navigation : <code>{| buttonOptions: {| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}; menuStyle: {| border:string; background:string; padding:string |}; menuItemStyle: {| padding:string; color:string; background:string; fontSize:string; transition:string |}; menuItemHoverStyle: {| background:string; color:string |} |}</code></summary>
        member this.navigation = Figure_Navigation(Some (this :> IFigureItem))

        ///<summary>Figure_Exporting : <code>{| _type:string; url:string; printMaxWidth:int; scale:int; buttons: {| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}; menuItemDefinitions: {| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |} |}</code></summary>
        member this.exporting = Figure_Exporting(Some (this :> IFigureItem))

        ///<summary>Figure_XAxis : <code>{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq</code></summary>
        member this.xAxis = Figure_XAxis(Some (this :> IFigureItem))

        ///<summary>Figure_YAxis : <code>{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq</code></summary>
        member this.yAxis = Figure_YAxis(Some (this :> IFigureItem))

        ///<summary>Figure_Toolbar : <code>{| itemStyle: {| color:string |} |}</code></summary>
        member this.toolbar = Figure_Toolbar(Some (this :> IFigureItem))

        ///<summary>Figure_RangeSelector : <code>{| buttonTheme: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}; inputStyle: {| backgroundColor:string; color:string |}; labelStyle: {| color:string |} |}</code></summary>
        member this.rangeSelector = Figure_RangeSelector(Some (this :> IFigureItem))

        ///<summary>Figure_Navigator : <code>{| handles: {| backgroundColor:string; borderColor:string |}; outlineColor:string; maskFill:string; series: {| color:string; lineColor:string |} |}</code></summary>
        member this.navigator = Figure_Navigator(Some (this :> IFigureItem))

        ///<summary>Figure_Scrollbar : <code>{| barBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; barBorderColor:string; buttonArrowColor:string; buttonBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; buttonBorderColor:string; rifleColor:string; trackBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; trackBorderColor:string |}</code></summary>
        member this.scrollbar = Figure_Scrollbar(Some (this :> IFigureItem))

        ///<summary>Figure_Series : <code>{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |} seq</code></summary>
        member this.series = Figure_Series(Some (this :> IFigureItem))
        interface IFigureItem with
            member this.GetPath() =
                parentItem
                |> Option.map (fun parent -> sprintf "%s.Figure" (parent.GetPath()))
                |> Option.defaultValue "Figure"

        static member ToJson (o:{| colors:string seq; symbols:string seq; lang: {| loading:string; months:string seq; shortMonths:string seq; weekdays:string seq; decimalPoint:string; numericSymbols:string seq; resetZoom:string; resetZoomTitle:string; thousandsSep:string; viewFullscreen:string; exitFullscreen:string; printChart:string; downloadPNG:string; downloadJPEG:string; downloadPDF:string; downloadSVG:string; contextButtonTitle:string |}; _global: {| dummy:string |}; time: {| timezoneOffset:int; useUTC:bool |}; chart: {| styledMode:bool; borderRadius:int; colorCount:int; defaultSeriesType:string; ignoreHiddenSeries:bool; spacing:int seq; resetZoomButton: {| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}; width:string; height:string; borderColor:string; backgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}; plotBorderColor:string; borderWidth:int; className:string; plotBackgroundColor:string; plotBorderWidth:int |}; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; margin:int; widthAdjust:int |}; subtitle: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; widthAdjust:int |}; caption: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; margin:int; text:string; align:string; verticalAlign:string |}; plotOptions: {| line: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; area: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; spline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; areaspline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; column: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; bar: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; scatter: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}; pie: {| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}; candlestick: {| lineColor:string |} |}; labels: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; legend: {| enabled:bool; align:string; alignColumns:bool; layout:string; borderColor:string; borderRadius:int; navigation: {| activeColor:string; inactiveColor:string |}; itemStyle: {| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}; itemHoverStyle: {| color:string |}; itemHiddenStyle: {| color:string |}; shadow:bool; itemCheckboxStyle: {| position:string; width:string; height:string |}; squareSymbol:bool; symbolPadding:int; verticalAlign:string; x:int; y:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; backgroundColor:string |}; loading: {| labelStyle: {| fontWeight:string; position:string; top:string |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; tooltip: {| enabled:bool; animation:bool; borderRadius:int; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; footerFormat:string; padding:int; snap:int; headerFormat:string; pointFormat:string; backgroundColor:string; borderWidth:int; shadow:bool; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; credits: {| enabled:bool; href:string; position: {| align:string; x:int; verticalAlign:string; y:int |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; navigation: {| buttonOptions: {| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}; menuStyle: {| border:string; background:string; padding:string |}; menuItemStyle: {| padding:string; color:string; background:string; fontSize:string; transition:string |}; menuItemHoverStyle: {| background:string; color:string |} |}; exporting: {| _type:string; url:string; printMaxWidth:int; scale:int; buttons: {| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}; menuItemDefinitions: {| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |} |}; xAxis:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq; yAxis:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq; toolbar: {| itemStyle: {| color:string |} |}; rangeSelector: {| buttonTheme: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}; inputStyle: {| backgroundColor:string; color:string |}; labelStyle: {| color:string |} |}; navigator: {| handles: {| backgroundColor:string; borderColor:string |}; outlineColor:string; maskFill:string; series: {| color:string; lineColor:string |} |}; scrollbar: {| barBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; barBorderColor:string; buttonArrowColor:string; buttonBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; buttonBorderColor:string; rifleColor:string; trackBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; trackBorderColor:string |}; series:{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |} seq |}) =
            let colors = Figure_Colors.ToJson o.colors
            let symbols = Figure_Symbols.ToJson o.symbols
            let lang = Figure_Lang.ToJson o.lang
            let _global = Figure_Global.ToJson o._global
            let time = Figure_Time.ToJson o.time
            let chart = Figure_Chart.ToJson o.chart
            let title = Figure_Title.ToJson o.title
            let subtitle = Figure_Subtitle.ToJson o.subtitle
            let caption = Figure_Caption.ToJson o.caption
            let plotOptions = Figure_PlotOptions.ToJson o.plotOptions
            let labels = Figure_Labels.ToJson o.labels
            let legend = Figure_Legend.ToJson o.legend
            let loading = Figure_Loading.ToJson o.loading
            let tooltip = Figure_Tooltip.ToJson o.tooltip
            let credits = Figure_Credits.ToJson o.credits
            let navigation = Figure_Navigation.ToJson o.navigation
            let exporting = Figure_Exporting.ToJson o.exporting
            let xAxis = Figure_XAxis.ToJson o.xAxis
            let yAxis = Figure_YAxis.ToJson o.yAxis
            let toolbar = Figure_Toolbar.ToJson o.toolbar
            let rangeSelector = Figure_RangeSelector.ToJson o.rangeSelector
            let navigator = Figure_Navigator.ToJson o.navigator
            let scrollbar = Figure_Scrollbar.ToJson o.scrollbar
            let series = Figure_Series.ToJson o.series
            sprintf "{\\\"colors\\\":%s,\\\"symbols\\\":%s,\\\"lang\\\":%s,\\\"_global\\\":%s,\\\"time\\\":%s,\\\"chart\\\":%s,\\\"title\\\":%s,\\\"subtitle\\\":%s,\\\"caption\\\":%s,\\\"plotOptions\\\":%s,\\\"labels\\\":%s,\\\"legend\\\":%s,\\\"loading\\\":%s,\\\"tooltip\\\":%s,\\\"credits\\\":%s,\\\"navigation\\\":%s,\\\"exporting\\\":%s,\\\"xAxis\\\":%s,\\\"yAxis\\\":%s,\\\"toolbar\\\":%s,\\\"rangeSelector\\\":%s,\\\"navigator\\\":%s,\\\"scrollbar\\\":%s,\\\"series\\\":%s}" colors symbols lang _global time chart title subtitle caption plotOptions labels legend loading tooltip credits navigation exporting xAxis yAxis toolbar rangeSelector navigator scrollbar series

        member this.Set (o:{| colors:string seq; symbols:string seq; lang: {| loading:string; months:string seq; shortMonths:string seq; weekdays:string seq; decimalPoint:string; numericSymbols:string seq; resetZoom:string; resetZoomTitle:string; thousandsSep:string; viewFullscreen:string; exitFullscreen:string; printChart:string; downloadPNG:string; downloadJPEG:string; downloadPDF:string; downloadSVG:string; contextButtonTitle:string |}; _global: {| dummy:string |}; time: {| timezoneOffset:int; useUTC:bool |}; chart: {| styledMode:bool; borderRadius:int; colorCount:int; defaultSeriesType:string; ignoreHiddenSeries:bool; spacing:int seq; resetZoomButton: {| theme: {| zIndex:int |}; position: {| align:string; x:int; y:int |} |}; width:string; height:string; borderColor:string; backgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int; id:string |}; stops:int seq seq |}; plotBorderColor:string; borderWidth:int; className:string; plotBackgroundColor:string; plotBorderWidth:int |}; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; margin:int; widthAdjust:int |}; subtitle: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; align:string; widthAdjust:int |}; caption: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; margin:int; text:string; align:string; verticalAlign:string |}; plotOptions: {| line: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; color:string |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; area: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; spline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string |}; areaspline: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |} |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; threshold:int |}; column: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; bar: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; x:int |}; cropThreshold:int; opacity:int; pointRange:string; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo:bool; brightness:int |}; select: {| animation: {| duration:int |}; color:string; borderColor:string |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; borderRadius:int; centerInCategory:bool; groupPadding:int; pointPadding:int; minPointLength:int; startFromThreshold:bool; threshold:int; borderColor:string |}; scatter: {| lineWidth:int; allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker: {| enabledThreshold:int; lineColor:string; lineWidth:int; radius:int; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; enabled:bool; radiusPlus:int; lineWidthPlus:int |}; select: {| fillColor:string; lineColor:string; lineWidth:int |} |}; enabled:bool |}; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |} |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; jitter: {| x:int; y:int |} |}; pie: {| allowPointSelect:bool; crisp:bool; showCheckbox:bool; animation: {| duration:int |}; events: {| dummy:string |}; marker:string; point: {| events: {| dummy:string |} |}; dataLabels: {| align:string; padding:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; verticalAlign:string; x:int; y:int; allowOverlap:bool; connectorPadding:int; connectorShape:string; crookDistance:string; distance:int; enabled:bool; softConnector:bool |}; cropThreshold:int; opacity:int; pointRange:int; softThreshold:bool; states: {| normal: {| animation:bool |}; hover: {| animation: {| duration:int |}; lineWidthPlus:int; marker: {| dummy:string |}; halo: {| size:int; opacity:int |}; brightness:int |}; select: {| animation: {| duration:int |} |}; inactive: {| animation: {| duration:int |}; opacity:int |} |}; stickyTracking:bool; turboThreshold:int; findNearestPointBy:string; center:string seq; clip:bool; colorByPoint:bool; ignoreHiddenPoint:bool; inactiveOtherPoints:bool; legendType:string; size:string; showInLegend:bool; slicedOffset:int; borderColor:string; borderWidth:int |}; candlestick: {| lineColor:string |} |}; labels: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; legend: {| enabled:bool; align:string; alignColumns:bool; layout:string; borderColor:string; borderRadius:int; navigation: {| activeColor:string; inactiveColor:string |}; itemStyle: {| color:string; cursor:string; fontSize:string; fontWeight:string; textOverflow:string; font:string |}; itemHoverStyle: {| color:string |}; itemHiddenStyle: {| color:string |}; shadow:bool; itemCheckboxStyle: {| position:string; width:string; height:string |}; squareSymbol:bool; symbolPadding:int; verticalAlign:string; x:int; y:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; backgroundColor:string |}; loading: {| labelStyle: {| fontWeight:string; position:string; top:string |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; tooltip: {| enabled:bool; animation:bool; borderRadius:int; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; footerFormat:string; padding:int; snap:int; headerFormat:string; pointFormat:string; backgroundColor:string; borderWidth:int; shadow:bool; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; credits: {| enabled:bool; href:string; position: {| align:string; x:int; verticalAlign:string; y:int |}; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; navigation: {| buttonOptions: {| theme: {| padding:int; fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string |}; symbolSize:int; symbolX:int; symbolY:int; align:string; buttonSpacing:int; height:int; verticalAlign:string; width:int; symbolFill:string; symbolStroke:string; symbolStrokeWidth:int |}; menuStyle: {| border:string; background:string; padding:string |}; menuItemStyle: {| padding:string; color:string; background:string; fontSize:string; transition:string |}; menuItemHoverStyle: {| background:string; color:string |} |}; exporting: {| _type:string; url:string; printMaxWidth:int; scale:int; buttons: {| contextButton: {| className:string; menuClassName:string; symbol:string; titleKey:string; menuItems:string seq |} |}; menuItemDefinitions: {| viewFullscreen: {| textKey:string |}; printChart: {| textKey:string |}; separator: {| separator:bool |}; downloadPNG: {| textKey:string |}; downloadJPEG: {| textKey:string |}; downloadPDF: {| textKey:string |}; downloadSVG: {| textKey:string |} |} |}; xAxis:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq; yAxis:{| alignTicks:bool; allowDecimals:bool; alternateGridColor:string; angle:int; categories:string seq; ceiling:int; className:string; crosshair:bool; dateTimeLabelFormats: {| millisecond:string; second:string; minute:string; hour:string; day:string; week:string; month:string; year:string |}; endOnTick:bool; floor:int; gridLineColor:string; gridLineDashStyle:string; gridLineInterpolation:string; gridLineWidth:int; gridZIndex:int; height:int; id:string; labels: {| align:string; autoRotation:int; autoRotationLimit:int; distance:int; enabled:bool; format:string; overflow:string; padding:int; reserveSpace:bool; rotation:int; staggerLines:int; step:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; useHtml:bool; x:int; y:int; zIndex:int |}; left:int; lineColor:string; lineWidth:int; linkedTo:int; margin:int; max:int; maxColor:string; maxPadding:int; min:int; minColor:string; minorGridLineColor:string; minorGridLineDashStyle:string; minorGridLineWidth:int; minorTickColor:string; minorTickInterval:int; minorTickLength:int; minorTickPosition:string; minorTicks:bool; minorTickWidth:int; minRange:int; minTickInterval:int; offset:int; opposite:bool; pane:int; plotBands:{| borderColor:string; borderWidth:int; className:string; color:string; _from:int; id:string; innerRadius:int; labels: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; outerRadius:int; thickness:int; _to:int; zIndex:int |} seq; plotLines:{| className:string; color:string; dashStyle:string; id:string; label: {| align:string; rotation:int; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string; textAlign:string; useHtml:bool; verticalAlign:string; x:int; y:int |}; value:int; width:int; zIndex:int |} seq; reversed:bool; reversedStacks:bool; showEmpty:bool; showFirstLabel:bool; showLastLabel:bool; softMax:int; softMin:int; startOfWeek:int; startOnTick:bool; stops:int seq seq; tickAmount:int; tickColor:string; tickInterval:int; tickLength:int; tickmarkPlacement:string; tickPixelInterval:int; tickPosition:string; tickPositions:int seq; tickWidth:int; title: {| style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; text:string |}; tooltipValueFormat:string; top:int; _type:string; uniqueNames:bool; visible:bool; width:int; zoomEnabled:bool |} seq; toolbar: {| itemStyle: {| color:string |} |}; rangeSelector: {| buttonTheme: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |}; states: {| hover: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |}; select: {| fill: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; stroke:string; style: {| background:string; backgroundColor:string; border:string; borderRadius:int; color:string; cursor:string; fontFamily:string; fontWeight:string; fontSize:string; height:int; lineWidth:int; padding:string; position:string; textAlign:string; textDecoration:string; textOutline:string; textOverflow:string; top:string; transition:string; whiteSpace:string; width:int |} |} |} |}; inputStyle: {| backgroundColor:string; color:string |}; labelStyle: {| color:string |} |}; navigator: {| handles: {| backgroundColor:string; borderColor:string |}; outlineColor:string; maskFill:string; series: {| color:string; lineColor:string |} |}; scrollbar: {| barBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; barBorderColor:string; buttonArrowColor:string; buttonBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; buttonBorderColor:string; rifleColor:string; trackBackgroundColor: {| linearGradient: {| x1:int; y1:int; x2:int; y2:int |}; stops:int seq seq |}; trackBorderColor:string |}; series:{| allowPointSelect:bool; animationLimit:int; boostThreshold:int; className:string; clip:bool; color:string; colorAxis:int; colorIndex:int; colorKey:string; connectEnds:bool; connectNulls:bool; crisp:bool; cropThreshold:int; cursor:string; data:int seq; dashStyle:string; description:string; enableMouseTracking:bool; findNearestPointBy:string; getExtremesFromAll:bool; id:string; includeInDataExport:bool; index:int; keys:string seq; legendIndex:int; linecap:string; lineWidth:int; marker: {| enabled:bool; enabledThreshold:int; fillColor:string; height:int; lineColor:string; lineWidth:int; radius:int; symbol:string; width:int |}; name:string; negativeColor:string; opactiy:int; pointInterval:int; pointIntervalUnit:string; pointPlacement:int; pointStart:int; selected:bool; shadow:bool; showCheckbox:bool; showInLegend:bool; skipKeyboardNavigation:bool; softThreshold:bool; stack:string; stacking:string; step:string; stickyTracking:bool; threshold:int; turboThreshold:int; _type:string; visible:bool; xAxis:int; yAxis:int; zIndex:int; zoneAxis:string |} seq |}) =
            update currentChartIndex ((this :> IFigureItem).GetPath()) (Figure.ToJson o)

