@model FPlot.Models.Message
@{
    Layout = "_Layout";
}
@{
    await Html.RenderPartialAsync("Partial");
}
<p>
    @Model.Text
</p>

<div id="app">
    <ul>
        <li m-for="message in messages">{{ message }}</li>
    </ul>
</div>
<div id="charty">

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moonjs/0.11.0/moon.min.js"></script>
<script>
    function openWebSocket(vm) {
        var socket = new WebSocket('wss://localhost:5001/ws')
        socket.onopen = function () {
            @* console.log('INFO: WebSocket opened successfully'); *@
        }
        socket.onclose = function (event) {
            @* console.log('INFO: WebSocket closed'); *@
            console.log('INFO: WebSocket closed');
            console.log(event);
            openWebSocket(vm);
        }
        socket.onerror = function (error) {
            console.log('ERROR: WebSocket error');
            console.log(error);
        }
        socket.onmessage = function (messageEvent) {
            var messages = vm.get('messages');
            messages.unshift(messageEvent.data);
            console.log(messages)
            vm.set('messages', messages);
        }
        vm.set('socket', socket);
    }
    const app = new Moon({
        el: '#app',
        data: {
            messages: []
        },
        hooks: {
            init: function () {
                var vm = this;
                openWebSocket(vm);
            }
        }
    });
</script>

<script>
    var els;

    window.onload = function () {
        els = InitApp();

        var myChart = {
            title: { text: 'Example plot' },
            yAxis: { title: { text: 'Value' } },
            xAxis: { title: { text: 'Index' } },
            legend: { layout: 'vertical', align: 'right', verticalAlign: 'middle' },
            series: [
                { name: 'A', data: [1.2, 1.4, 0.8, 0.6, 0.95, 0.35, 0.6, 0.25] },
                { name: 'B', data: [0.1, 0.25, 0.2, 0.5, 0.4, 0.8, 1.35, 1.1] },
                { name: 'C', data: [0.8, 0.7, 0.45, 1.15, 0.5, 0.85, 0.65, 0.75] }
            ]
        };

        InitChartElement({ id: 'chart_1', highCharts: myChart }, "charty");
    };
</script>